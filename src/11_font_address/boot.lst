     1                                  ;マクロ
     2                                  %include        "../include/define.s"
     1                              <1> BOOT_LOAD       equ     0x7c00                  ;ブートプログラムのロード位置
     2                              <1>                                                 ;これがないと0x0000にロードされることになってしまうが
     3                              <1>                                                 ;BIOSそこはがすでに使っている領域である
     4                              <1> 
     5                              <1> BOOT_SIZE       equ     (1024 * 8)              ;ブートコードサイズ
     6                              <1> SECT_SIZE       equ     (512)                   ;セクタサイズ
     7                              <1> BOOT_SECT       equ     (BOOT_SIZE/SECT_SIZE)   ;ブートプログラムのセクタサイズ
     3                                  %include        "../include/macro.s"
     1                              <1> %macro      cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__>>3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 <res 00000002>      <1>         .no     resw    1
    19 00000002 <res 00000002>      <1>         .cyln   resw    1
    20 00000004 <res 00000002>      <1>         .head   resw    1
    21 00000006 <res 00000002>      <1>         .sect   resw    1
    22                              <1> endstruc
    23                              <1> 
     4                                  
     5                                          ORG     BOOT_LOAD               ;アセンブラに指示 
     6                                  
     7                                  ;エントリーポイント
     8                                  
     9                                  entry:
    10                                  ;BPB(Bios Parameter Block)
    11 00000000 EB58                            jmp     ipl
    12 00000002 90<rept>                        times 90 - ($ - $$) db 0x90
    13                                  ;IPL(Initial Program Loader)
    14                                  
    15                                  ipl:
    16 0000005A FA                              cli                     ;割込み禁止
    17                                  
    18 0000005B B80000                          mov     ax, 0x0000        ;セグメントレジスタの値を設定
    19 0000005E 8ED8                            mov     ds, ax            
    20 00000060 8EC0                            mov     es, ax
    21 00000062 8ED0                            mov     ss, ax
    22 00000064 BC007C                          mov     sp, BOOT_LOAD
    23                                  
    24 00000067 FB                              sti                    ;割込み禁止解除
    25                                  
    26 00000068 8816[B800]                      mov     [BOOT + drive.no], dl  ;ブートドライブの保存
    27                                  
    28                                  ;文字列を表示
    29 0000006C 68[9900]E84E0083C4-             cdecl   puts, .s0        
    29 00000074 02                 
    30                                  
    31                                  ;次の512バイトを読み込む
    32                                  
    33 00000075 BB0F00                          mov     bx, BOOT_SECT - 1           ;bx = 残りのぶーとセクタ数
    34 00000078 B9007E                          mov     cx, BOOT_LOAD + SECT_SIZE   ;cx = 次のロードアドレス
    35                                  
    36 0000007B 515368[B800]E89B00-             cdecl   read_chs, BOOT, bx, cx      ;ax = read_chs(BOOT, bx, cx)
    36 00000083 83C406             
    37                                  
    38 00000086 39D8                            cmp     ax, bx
    39 00000088 740C                    .10Q:   jz      .10E
    40 0000008A 68[A600]E8300083C4-     .10T:   cdecl   puts, .e0
    40 00000092 02                 
    41 00000093 E84900                          call    reboot
    42                                  
    43                                  .10E:
    44 00000096 E94C02                          jmp     stage_2    ;次のステージへ移行
    45                                  
    46                                  ;データ
    47 00000099 426F6F74696E672E2E-     .s0     db      "Booting...", 0x0A, 0x0D, 0
    47 000000A2 2E0A0D00           
    48 000000A6 4572726F723A736563-     .e0     db      "Error:sector read", 0
    48 000000AF 746F72207265616400 
    49                                  
    50                                  ALIGN 2, db 0
    51                                  BOOT:                   ;ブートドライブに関する情報
    52                                      istruc  drive
    53 000000B8 0000                            at  drive.no,       dw  0       ; ドライブ番号
    54 000000BA 0000                            at  drive.cyln,     dw  0       ; C:シリンダ
    55 000000BC 0000                            at  drive.head,     dw  0       ; H:ヘッド
    56 000000BE 0200                            at  drive.sect,     dw  2       ; S:セクタ
    57                                      iend
    58                                  
    59                                  ; モジュール
    60                                  
    61                                  %include    "../modules/real/puts.s"
     1                              <1> puts:
     2 000000C0 55                  <1>         push    bp
     3 000000C1 89E5                <1>         mov     bp, sp
     4                              <1> 
     5 000000C3 50                  <1>         push    ax
     6 000000C4 53                  <1>         push    bx
     7 000000C5 56                  <1>         push    si
     8                              <1> 
     9 000000C6 8B7604              <1>         mov     si, [bp + 4]
    10                              <1> 
    11 000000C9 B40E                <1>         mov     ah, 0x0e
    12 000000CB BB0000              <1>         mov     bx, 0x0000
    13 000000CE FC                  <1>         cld
    14                              <1> .10L:
    15                              <1> 
    16 000000CF AC                  <1>         lodsb
    17                              <1> 
    18 000000D0 3C00                <1>         cmp     al, 0
    19 000000D2 7404                <1>         je      .10E
    20                              <1> 
    21 000000D4 CD10                <1>         int     0x10
    22 000000D6 EBF7                <1>         jmp     .10L
    23                              <1> .10E:
    24                              <1> 
    25 000000D8 5E                  <1>         pop     si
    26 000000D9 5B                  <1>         pop     bx
    27 000000DA 58                  <1>         pop     ax
    28                              <1> 
    29 000000DB 89EC                <1>         mov     sp, bp
    30 000000DD 5D                  <1>         pop     bp
    31                              <1> 
    32 000000DE C3                  <1>         ret
    62                                  %include    "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1> 
     3 000000DF 68[FB00]E8DBFF83C4- <1>         cdecl   puts, .s0   ;メッセージの表示
     3 000000E7 02                  <1>
     4                              <1> 
     5                              <1> ; キー入力待ち
     6                              <1> 
     7                              <1> .10L:
     8 000000E8 B410                <1>         mov     ah, 0x10
     9 000000EA CD16                <1>         int     0x16
    10                              <1> 
    11 000000EC 3C20                <1>         cmp     al, ' '
    12 000000EE 75F8                <1>         jne     .10L
    13                              <1> 
    14                              <1> ;改行を出力
    15 000000F0 68[1901]E8CAFF83C4- <1>         cdecl   puts, .s1
    15 000000F8 02                  <1>
    16                              <1> 
    17                              <1> ;再起動
    18 000000F9 CD19                <1>         int     0x19    ; BIOS(0x19)
    19                              <1> 
    20                              <1> ;文字列データ
    21 000000FB 0A0D50757368205350- <1> .s0     db      0x0A, 0x0D, "Push SPACE key to reboot...", 0
    21 00000104 414345206B65792074- <1>
    21 0000010D 6F207265626F6F742E- <1>
    21 00000116 2E2E00              <1>
    22 00000119 0A0D0A0D00          <1> .s1     db      0x0A, 0x0D, 0x0A, 0x0D, 0
    63                                  %include    "../modules/real/read_chs.s"
     1                              <1> read_chs:
     2                              <1>                             
     3 0000011E 55                  <1>         push    bp
     4 0000011F 89E5                <1>         mov     bp, sp
     5 00000121 6A03                <1>         push    3           ; リトライ回数
     6 00000123 6A00                <1>         push    0           ; 読み込みセクタ数
     7                              <1> 
     8 00000125 53                  <1>         push    bx
     9 00000126 51                  <1>         push    cx
    10 00000127 52                  <1>         push    dx
    11 00000128 06                  <1>         push    es
    12 00000129 56                  <1>         push    si
    13                              <1> 
    14 0000012A 8B7604              <1>         mov     si, [bp + 4]    ;si = srcバッファ
    15                              <1> 
    16                              <1> ; cxレジスタの設定
    17                              <1> 
    18 0000012D 8A6C02              <1>         mov     ch, [si + drive.cyln + 0]   ; ch = シリンダ番号（上位バイト）
    19 00000130 8A4C03              <1>         mov     cl, [si + drive.cyln + 1]   ; cl = シリンダ番号（下位バイト）
    20 00000133 C0E106              <1>         shl     cl, 6                       ; cl <<=6 最上位２ビットにシフト
    21 00000136 0A4C06              <1>         or      cl, [si + drive.sect]       ;セクタ番号
    22                              <1> 
    23                              <1> ; セクタ読み込み
    24 00000139 8A7404              <1>         mov     dh, [si + drive.head]       ;dh = ヘッド番号
    25 0000013C 8A14                <1>         mov     dl, [si + 0]                ;dl = ドライブ番号
    26 0000013E B80000              <1>         mov     ax, 0x0000                  
    27 00000141 8EC0                <1>         mov     es, ax
    28 00000143 8B5E08              <1>         mov     bx, [bp + 8]                ; コピー先
    29                              <1> .10L:
    30                              <1> 
    31 00000146 B402                <1>         mov     ah, 0x02                    ; セクタ読み込み
    32 00000148 8A4606              <1>         mov     al, [bp + 6]                ; セクタ数
    33                              <1> 
    34 0000014B CD13                <1>         int     0x13           
    35 0000014D 7304                <1>         jnc     .11E
    36                              <1> 
    37 0000014F B000                <1>         mov     al, 0                       
    38 00000151 EB0C                <1>         jmp     .10E
    39                              <1> 
    40                              <1> .11E:                                           ; うまく行かなかったときのループ
    41                              <1> 
    42 00000153 3C00                <1>         cmp     al, 0   
    43 00000155 7508                <1>         jne     .10E
    44                              <1> 
    45 00000157 B80000              <1>         mov     ax, 0
    46 0000015A FF4EFE              <1>         dec     word [bp - 2]                   ;リトライ回数を１引く
    47 0000015D 75E7                <1>         jnz     .10L
    48                              <1> 
    49                              <1> .10E:    
    50 0000015F B400                <1>         mov     ah, 0                          
    51                              <1> 
    52                              <1> 
    53 00000161 5E                  <1>         pop     si
    54 00000162 07                  <1>         pop     es
    55 00000163 5A                  <1>         pop     dx
    56 00000164 59                  <1>         pop     cx
    57 00000165 5B                  <1>         pop     bx
    58                              <1> 
    59 00000166 89EC                <1>         mov     sp, bp
    60 00000168 5D                  <1>         pop     bp
    61                              <1> 
    62 00000169 C3                  <1>         ret
    64                                  
    65                                  ;ブートフラグ
    66                                  
    67 0000016A 00<rept>                        times 510 - ($ - $$) db 0x00    ;先頭512バイトの最後を0x55AAにすることでブートプログラムである条件を満たす
    68 000001FE 55AA                            db 0x55, 0xAA 
    69                                  ; リアルモード時に取得した情報
    70                                  FONT:
    71 00000200 0000                    .seg:   dw  0
    72 00000202 0000                    .off:   dw  0
    73                                  
    74                                  
    75                                  ;モジュール 先頭512バイト以降に配置 
    76                                  
    77                                  %include    "../modules/real/itoa.s"
     1                              <1> itoa:
     2 00000204 55                  <1>         push    bp
     3 00000205 89E5                <1>         mov     bp, sp
     4                              <1> 
     5 00000207 50                  <1>         push    ax
     6 00000208 53                  <1>         push    bx
     7 00000209 51                  <1>         push    cx
     8 0000020A 52                  <1>         push    dx
     9 0000020B 56                  <1>         push    si
    10 0000020C 57                  <1>         push    di
    11                              <1> 
    12                              <1> ;引数を取得
    13                              <1> 
    14 0000020D 8B4604              <1>         mov     ax, [bp + 4]        ; 数値
    15 00000210 8B7606              <1>         mov     si, [bp + 6]        ; バッファアドレス
    16 00000213 8B4E08              <1>         mov     cx, [bp + 8]        ;バッファサイズ
    17                              <1> 
    18 00000216 89F7                <1>         mov     di, si
    19 00000218 01CF                <1>         add     di, cx
    20 0000021A 4F                  <1>         dec     di      ;バッファの最後尾
    21                              <1> 
    22 0000021B 8B5E0C              <1>         mov     bx, word[bp + 12] ;flags = オプション
    23                              <1> 
    24                              <1> ;符号付き判定
    25                              <1> 
    26 0000021E F7C30100            <1>         test    bx, 0b001
    27 00000222 7408                <1> .10Q:   je      .10E
    28 00000224 83F800              <1>         cmp     ax, 0
    29 00000227 7D03                <1> .12Q:   jge     .12E
    30 00000229 83CB02              <1>         or      bx, 0b0010
    31                              <1> .12E:
    32                              <1> .10E:
    33                              <1> 
    34                              <1> ;符号出力判定
    35                              <1> 
    36 0000022C F7C30200            <1>         test    bx, 0b0010
    37 00000230 7410                <1> .20Q:   je      .20E
    38 00000232 83F800              <1>         cmp     ax, 0
    39 00000235 7D07                <1> .22Q:   jge     .22F
    40 00000237 F7D8                <1>         neg     ax
    41 00000239 C6042D              <1>         mov     [si], byte '-'   ;先頭にマイナスを表示
    42 0000023C EB03                <1>         jmp     .22E
    43                              <1> .22F:   
    44                              <1> 
    45 0000023E C6042B              <1>         mov     [si], byte '+'  ;先頭にプラスを表示
    46                              <1> 
    47                              <1> .22E:   
    48 00000241 49                  <1>         dec     cx
    49                              <1> 
    50                              <1> .20E:
    51                              <1> 
    52                              <1> ; ASCII変換
    53 00000242 8B5E0A              <1>         mov bx, [bp + 10]        ;基数
    54                              <1> 
    55                              <1> .30L:
    56 00000245 BA0000              <1>         mov     dx, 0                   ;基数で割ることによって基数に合わせた数値にする
    57 00000248 F7F3                <1>         div     bx                     ; dx = dx:ax % bx
    58                              <1> 
    59 0000024A 89D6                <1>         mov     si, dx                              
    60 0000024C 8A94[7402]          <1>         mov     dl, byte [.ascii + si]
    61                              <1> 
    62 00000250 8815                <1>         mov     [di], dl                ;diは一番うしろの数値のアドレス
    63 00000252 4F                  <1>         dec     di
    64                              <1> 
    65 00000253 83F800              <1>         cmp     ax, 0
    66 00000256 E0ED                <1>         loopnz  .30L
    67                              <1> .30E:
    68                              <1> 
    69                              <1> ;空欄を埋める
    70                              <1> 
    71 00000258 83F900              <1>         cmp     cx, 0
    72 0000025B 740D                <1> .40Q:   je      .40E
    73 0000025D B020                <1>         mov     al, ' '
    74 0000025F 837E0C04            <1>         cmp     [bp + 12], word 0b0100             ;フラグ
    75 00000263 7502                <1> .42Q:   jne     .42E
    76 00000265 B030                <1>         mov     al, '0'
    77                              <1> .42E:
    78 00000267 FD                  <1>         std
    79 00000268 F3AA                <1>         rep stosb
    80                              <1> .40E:
    81                              <1> 
    82                              <1> ;レジスタ復帰とスタックフレームの廃棄
    83                              <1> 
    84 0000026A 5F                  <1>         pop     di
    85 0000026B 5E                  <1>         pop     si
    86 0000026C 5A                  <1>         pop     dx 
    87 0000026D 59                  <1>         pop     cx
    88 0000026E 5B                  <1>         pop     bx
    89 0000026F 58                  <1>         pop     ax
    90                              <1> 
    91 00000270 89EC                <1>         mov     sp, bp
    92 00000272 5D                  <1>         pop     bp
    93                              <1> 
    94 00000273 C3                  <1>         ret
    95                              <1> 
    96 00000274 303132333435363738- <1> .ascii:  db      "0123456789ABCDEF"          ;変換テーブル
    96 0000027D 39414243444546      <1>
    78                                  %include    "../modules/real/get_drive_param.s"
     1                              <1> get_drive_param:
     2                              <1>         
     3 00000284 55                  <1>         push    bp
     4 00000285 89E5                <1>         mov     bp, sp
     5                              <1> 
     6 00000287 53                  <1>         push    bx
     7 00000288 51                  <1>         push    cx
     8 00000289 06                  <1>         push    es
     9 0000028A 56                  <1>         push    si
    10 0000028B 57                  <1>         push    di
    11                              <1> 
    12 0000028C 8B7604              <1>         mov     si, [bp + 4]
    13 0000028F B80000              <1>         mov     ax, 0
    14 00000292 8EC0                <1>         mov     es, ax
    15 00000294 89C7                <1>         mov     di, ax
    16                              <1> 
    17 00000296 B408                <1>         mov     ah, 8                   ;get drive parameters
    18 00000298 8A14                <1>         mov     dl, [si + drive.no]     ;dl = ドライブ番号
    19 0000029A CD13                <1>         int     0x13                    ;cf = bios(0x13, 8)
    20 0000029C 721B                <1> .10Q:   jc      .10F
    21                              <1> .10T:   
    22 0000029E 88C8                <1>         mov     al, cl                  ;ax = セクタ数
    23 000002A0 25F300              <1>         and     ax, 0xF3                ;下位6ビットのみ有効
    24                              <1> 
    25 000002A3 C0E906              <1>         shr     cl, 6                   ; cx = シリンダ数
    26 000002A6 C1C908              <1>         ror     cx, 8                   ;
    27 000002A9 41                  <1>         inc     cx
    28                              <1> 
    29 000002AA 0FB6DE              <1>         movzx   bx, dh
    30 000002AD 43                  <1>         inc     bx
    31                              <1> 
    32 000002AE 894C02              <1>         mov     [si + drive.cyln], cx    ; drive.syln シリンダ数
    33 000002B1 895C04              <1>         mov     [si + drive.head], bx    ; drive.head ヘッド数
    34 000002B4 894406              <1>         mov     [si + drive.sect], ax    ; drive.sect セクタ数
    35                              <1> 
    36 000002B7 EB03                <1>         jmp     .10E
    37                              <1> 
    38                              <1> .10F:   
    39 000002B9 B80000              <1>         mov     ax, 0
    40                              <1> .10E:
    41                              <1> 
    42 000002BC 5F                  <1>         pop     di
    43 000002BD 5E                  <1>         pop     si
    44 000002BE 07                  <1>         pop     es
    45 000002BF 59                  <1>         pop     cx
    46 000002C0 5B                  <1>         pop     bx
    47                              <1> 
    48 000002C1 89EC                <1>         mov     sp, bp
    49 000002C3 5D                  <1>         pop     bp
    50                              <1> 
    51 000002C4 C3                  <1>         ret
    79                                  %include    "../modules/real/get_font_adr.s"
     1                              <1> get_font_adr:     
     2                              <1>                             ;    +4|  フォントアドレス格納場所        
     3 000002C5 55                  <1>         push    bp          ;    +2|   IP戻り値
     4 000002C6 89E5                <1>         mov     bp, sp      ;  BP+0|   BP
     5                              <1> 
     6                              <1> 
     7 000002C8 50                  <1>         push    ax
     8 000002C9 53                  <1>         push    bx
     9 000002CA 56                  <1>         push    si
    10 000002CB 06                  <1>         push    es
    11 000002CC 55                  <1>         push    bp
    12                              <1> 
    13 000002CD 8B7604              <1>         mov     si, [bp + 4]        ;引数であるフォントアドレス格納場所を取得
    14                              <1>         
    15 000002D0 B83011              <1>         mov     ax, 0x1130       ;BIOS から フォントアドレスを取得するためのもの
    16 000002D3 B706                <1>         mov     bh, 0x06           ;サイズの指定 8x16 font (vga/mcga)
    17 000002D5 CD10                <1>         int     10h
    18                              <1> 
    19 000002D7 8C04                <1>         mov     [si + 0], es      ;dst[0] = セグメント
    20 000002D9 896C02              <1>         mov     [si + 2], bp      ;dst[1] = オフセット
    21                              <1> 
    22 000002DC 5D                  <1>         pop     bp 
    23 000002DD 07                  <1>         pop     es
    24 000002DE 5E                  <1>         pop     si
    25 000002DF 5B                  <1>         pop     bx
    26 000002E0 58                  <1>         pop     ax
    27                              <1> 
    28 000002E1 89EC                <1>         mov     sp, bp
    29 000002E3 5D                  <1>         pop     bp
    30                              <1> 
    31 000002E4 C3                  <1>         ret
    80                                  
    81                                  
    82                                  ; ブート処理第二のステージ
    83                                  stage_2:
    84                                  
    85 000002E5 68[5F03]E8D5FD83C4-             cdecl puts, .s0    ;文字列を表示
    85 000002ED 02                 
    86                                  
    87                                          ;ドライブ情報を取得
    88 000002EE 68[B800]E890FF83C4-             cdecl   get_drive_param, BOOT   ;get_drive_param(DX, BOOT.CYLN);
    88 000002F6 02                 
    89 000002F7 83F800                          cmp     ax, 0
    90 000002FA 750C                    .10Q:   jne     .10E
    91 000002FC 68[9503]E8BEFD83C4-     .10T:   cdecl   puts, .e0
    91 00000304 02                 
    92 00000305 E8D7FD                          call    reboot
    93                                  .10E:
    94                                          ;取得したドライブ情報を表示
    95 00000308 A1[B800]                        mov     ax, [BOOT + drive.no]   ;ドライブ ナンバー を表示
    96 0000030B 6A046A106A0268-                 cdecl   itoa, ax, .p1, 2, 16, 0b0100
    96 00000312 [7603]50E8ECFE83C4-
    96 0000031A 0A                 
    97 0000031B A1[BA00]                        mov     ax, [BOOT + drive.cyln]         ;シリンダ数
    98 0000031E 6A046A106A0468-                 cdecl   itoa, ax, .p2, 4, 16, 0b0100
    98 00000325 [7E03]50E8D9FE83C4-
    98 0000032D 0A                 
    99 0000032E A1[BC00]                        mov     ax, [BOOT + drive.head]         ;ヘッダ数
   100 00000331 6A046A106A0268-                 cdecl   itoa, ax, .p3, 2, 16, 0b0100
   100 00000338 [8803]50E8C6FE83C4-
   100 00000340 0A                 
   101 00000341 A1[BE00]                        mov     ax, [BOOT + drive.sect]         ;シリンダ数
   102 00000344 6A046A106A0268-                 cdecl   itoa, ax, .p4, 2, 16, 0b0100
   102 0000034B [9003]50E8B3FE83C4-
   102 00000353 0A                 
   103 00000354 68[6E03]E866FD83C4-             cdecl   puts, .s1
   103 0000035C 02                 
   104                                  
   105                                  
   106 0000035D EB51                            jmp     stage_3rd    ;次のステージへ
   107                                  
   108 0000035F 326E64207374616765-     .s0     db      "2nd stage...", 0x0A, 0x0D, 0
   108 00000368 2E2E2E0A0D00       
   109 0000036E 44726976653A3078        .s1     db      "Drive:0x"
   110 00000376 20202C20433A3078        .p1     db      "  , C:0x"
   111 0000037E 202020202C20483A30-     .p2     db      "    , H:0x"
   111 00000387 78                 
   112 00000388 20202C20533A3078        .p3     db      "  , S:0x"
   113 00000390 20200A0D00              .p4     db      "  ", 0x0A, 0x0D, 0
   114                                  
   115 00000395 43616E277420676574-     .e0     db      "Can't get drive parameter.", 0
   115 0000039E 206472697665207061-
   115 000003A7 72616D657465722E00 
   116                                  
   117                                  ;ブート処理第3のステージ
   118                                  stage_3rd:
   119                                  
   120                                          ;文字列の表示
   121 000003B0 68[F303]E80AFD83C4-             cdecl   puts, .s0
   121 000003B8 02                 
   122                                  
   123                                          ;プロテクトモードでもBIOS内蔵フォントを使う
   124 000003B9 68[0002]E806FF83C4-             cdecl   get_font_adr, FONT
   124 000003C1 02                 
   125                                  
   126 000003C2 6A046A106A0468-                 cdecl   itoa, word [FONT.seg], .p1, 4, 16, 0b0100
   126 000003C9 [1004]FF36[0002]E8-
   126 000003D0 32FE83C40A         
   127                                  
   128 000003D5 6A046A106A0468-                 cdecl   itoa, word [FONT.off], .p2, 4, 16, 0b0100
   128 000003DC [1504]FF36[0202]E8-
   128 000003E3 1FFE83C40A         
   129 000003E8 68[0204]E8D2FC83C4-             cdecl   puts, .s1
   129 000003F0 02                 
   130                                  
   131 000003F1 EBFE                            jmp     $       ;ループ
   132                                  
   133 000003F3 337264207374616765-     .s0:     db      "3rd stage...", 0x0A, 0x0D, 0
   133 000003FC 2E2E2E0A0D00       
   134                                  
   135 00000402 20466F6E7420416464-     .s1:    db      " Font Address="
   135 0000040B 726573733D         
   136 00000410 5A5A5A5A3A              .p1:    db      "ZZZZ:"
   137 00000415 5A5A5A5A0A0D00          .p2:    db      "ZZZZ", 0x0A, 0x0D, 0
   138 0000041C 0A0D00                          db      0x0A, 0x0D, 0
   139                                  
   140                                  ;パディング     ブートファイルのサイズを定義したとおりにする
   141 0000041F 00<rept>                        times BOOT_SIZE - ($ - $$)  db 0
