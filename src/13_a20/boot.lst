     1                                  ;マクロ
     2                                  %include        "../include/define.s"
     1                              <1> BOOT_LOAD       equ     0x7c00                  ;ブートプログラムのロード位置
     2                              <1>                                                 ;これがないと0x0000にロードされることになってしまうが
     3                              <1>                                                 ;BIOSそこはがすでに使っている領域である
     4                              <1> 
     5                              <1> BOOT_SIZE       equ     (1024 * 8)              ;ブートコードサイズ
     6                              <1> SECT_SIZE       equ     (512)                   ;セクタサイズ
     7                              <1> BOOT_SECT       equ     (BOOT_SIZE/SECT_SIZE)   ;ブートプログラムのセクタサイズ
     8                              <1> 
     9                              <1> E820_RECORD_SIZE    equ     20
     3                                  %include        "../include/macro.s"
     1                              <1> %macro      cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__>>3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 <res 00000002>      <1>         .no     resw    1
    19 00000002 <res 00000002>      <1>         .cyln   resw    1
    20 00000004 <res 00000002>      <1>         .head   resw    1
    21 00000006 <res 00000002>      <1>         .sect   resw    1
    22                              <1> endstruc
    23                              <1> 
     4                                  
     5                                          ORG     BOOT_LOAD               ;アセンブラに指示 
     6                                  
     7                                  ;エントリーポイント
     8                                  
     9                                  entry:
    10                                  ;BPB(Bios Parameter Block)
    11 00000000 EB58                            jmp     ipl
    12 00000002 90<rept>                        times 90 - ($ - $$) db 0x90
    13                                  ;IPL(Initial Program Loader)
    14                                  
    15                                  ipl:
    16 0000005A FA                              cli                     ;割込み禁止
    17                                  
    18 0000005B B80000                          mov     ax, 0x0000        ;セグメントレジスタの値を設定
    19 0000005E 8ED8                            mov     ds, ax            
    20 00000060 8EC0                            mov     es, ax
    21 00000062 8ED0                            mov     ss, ax
    22 00000064 BC007C                          mov     sp, BOOT_LOAD
    23                                  
    24 00000067 FB                              sti                    ;割込み禁止解除
    25                                  
    26 00000068 8816[B800]                      mov     [BOOT + drive.no], dl  ;ブートドライブの保存
    27                                  
    28                                  ;文字列を表示
    29 0000006C 68[9900]E84E0083C4-             cdecl   puts, .s0        
    29 00000074 02                 
    30                                  
    31                                  ;次の512バイトを読み込む
    32                                  
    33 00000075 BB0F00                          mov     bx, BOOT_SECT - 1           ;bx = 残りのぶーとセクタ数
    34 00000078 B9007E                          mov     cx, BOOT_LOAD + SECT_SIZE   ;cx = 次のロードアドレス
    35                                  
    36 0000007B 515368[B800]E89B00-             cdecl   read_chs, BOOT, bx, cx      ;ax = read_chs(BOOT, bx, cx)
    36 00000083 83C406             
    37                                  
    38 00000086 39D8                            cmp     ax, bx
    39 00000088 740C                    .10Q:   jz      .10E
    40 0000008A 68[A600]E8300083C4-     .10T:   cdecl   puts, .e0
    40 00000092 02                 
    41 00000093 E84900                          call    reboot
    42                                  
    43                                  .10E:
    44 00000096 E9DB04                          jmp     stage_2    ;次のステージへ移行
    45                                  
    46                                  ;データ
    47 00000099 426F6F74696E672E2E-     .s0     db      "Booting...", 0x0A, 0x0D, 0
    47 000000A2 2E0A0D00           
    48 000000A6 4572726F723A736563-     .e0     db      "Error:sector read", 0
    48 000000AF 746F72207265616400 
    49                                  
    50                                  ALIGN 2, db 0
    51                                  BOOT:                   ;ブートドライブに関する情報
    52                                      istruc  drive
    53 000000B8 0000                            at  drive.no,       dw  0       ; ドライブ番号
    54 000000BA 0000                            at  drive.cyln,     dw  0       ; C:シリンダ
    55 000000BC 0000                            at  drive.head,     dw  0       ; H:ヘッド
    56 000000BE 0200                            at  drive.sect,     dw  2       ; S:セクタ
    57                                      iend
    58                                  
    59                                  ; モジュール
    60                                  
    61                                  %include    "../modules/real/puts.s"
     1                              <1> puts:
     2 000000C0 55                  <1>         push    bp
     3 000000C1 89E5                <1>         mov     bp, sp
     4                              <1> 
     5 000000C3 50                  <1>         push    ax
     6 000000C4 53                  <1>         push    bx
     7 000000C5 56                  <1>         push    si
     8                              <1> 
     9 000000C6 8B7604              <1>         mov     si, [bp + 4]
    10                              <1> 
    11 000000C9 B40E                <1>         mov     ah, 0x0e
    12 000000CB BB0000              <1>         mov     bx, 0x0000
    13 000000CE FC                  <1>         cld
    14                              <1> .10L:
    15                              <1> 
    16 000000CF AC                  <1>         lodsb
    17                              <1> 
    18 000000D0 3C00                <1>         cmp     al, 0
    19 000000D2 7404                <1>         je      .10E
    20                              <1> 
    21 000000D4 CD10                <1>         int     0x10
    22 000000D6 EBF7                <1>         jmp     .10L
    23                              <1> .10E:
    24                              <1> 
    25 000000D8 5E                  <1>         pop     si
    26 000000D9 5B                  <1>         pop     bx
    27 000000DA 58                  <1>         pop     ax
    28                              <1> 
    29 000000DB 89EC                <1>         mov     sp, bp
    30 000000DD 5D                  <1>         pop     bp
    31                              <1> 
    32 000000DE C3                  <1>         ret
    62                                  %include    "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1> 
     3 000000DF 68[FB00]E8DBFF83C4- <1>         cdecl   puts, .s0   ;メッセージの表示
     3 000000E7 02                  <1>
     4                              <1> 
     5                              <1> ; キー入力待ち
     6                              <1> 
     7                              <1> .10L:
     8 000000E8 B410                <1>         mov     ah, 0x10
     9 000000EA CD16                <1>         int     0x16
    10                              <1> 
    11 000000EC 3C20                <1>         cmp     al, ' '
    12 000000EE 75F8                <1>         jne     .10L
    13                              <1> 
    14                              <1> ;改行を出力
    15 000000F0 68[1901]E8CAFF83C4- <1>         cdecl   puts, .s1
    15 000000F8 02                  <1>
    16                              <1> 
    17                              <1> ;再起動
    18 000000F9 CD19                <1>         int     0x19    ; BIOS(0x19)
    19                              <1> 
    20                              <1> ;文字列データ
    21 000000FB 0A0D50757368205350- <1> .s0     db      0x0A, 0x0D, "Push SPACE key to reboot...", 0
    21 00000104 414345206B65792074- <1>
    21 0000010D 6F207265626F6F742E- <1>
    21 00000116 2E2E00              <1>
    22 00000119 0A0D0A0D00          <1> .s1     db      0x0A, 0x0D, 0x0A, 0x0D, 0
    63                                  %include    "../modules/real/read_chs.s"
     1                              <1> read_chs:
     2                              <1>                             
     3 0000011E 55                  <1>         push    bp
     4 0000011F 89E5                <1>         mov     bp, sp
     5 00000121 6A03                <1>         push    3           ; リトライ回数
     6 00000123 6A00                <1>         push    0           ; 読み込みセクタ数
     7                              <1> 
     8 00000125 53                  <1>         push    bx
     9 00000126 51                  <1>         push    cx
    10 00000127 52                  <1>         push    dx
    11 00000128 06                  <1>         push    es
    12 00000129 56                  <1>         push    si
    13                              <1> 
    14 0000012A 8B7604              <1>         mov     si, [bp + 4]    ;si = srcバッファ
    15                              <1> 
    16                              <1> ; cxレジスタの設定
    17                              <1> 
    18 0000012D 8A6C02              <1>         mov     ch, [si + drive.cyln + 0]   ; ch = シリンダ番号（上位バイト）
    19 00000130 8A4C03              <1>         mov     cl, [si + drive.cyln + 1]   ; cl = シリンダ番号（下位バイト）
    20 00000133 C0E106              <1>         shl     cl, 6                       ; cl <<=6 最上位２ビットにシフト
    21 00000136 0A4C06              <1>         or      cl, [si + drive.sect]       ;セクタ番号
    22                              <1> 
    23                              <1> ; セクタ読み込み
    24 00000139 8A7404              <1>         mov     dh, [si + drive.head]       ;dh = ヘッド番号
    25 0000013C 8A14                <1>         mov     dl, [si + 0]                ;dl = ドライブ番号
    26 0000013E B80000              <1>         mov     ax, 0x0000                  
    27 00000141 8EC0                <1>         mov     es, ax
    28 00000143 8B5E08              <1>         mov     bx, [bp + 8]                ; コピー先
    29                              <1> .10L:
    30                              <1> 
    31 00000146 B402                <1>         mov     ah, 0x02                    ; セクタ読み込み
    32 00000148 8A4606              <1>         mov     al, [bp + 6]                ; セクタ数
    33                              <1> 
    34 0000014B CD13                <1>         int     0x13           
    35 0000014D 7304                <1>         jnc     .11E
    36                              <1> 
    37 0000014F B000                <1>         mov     al, 0                       
    38 00000151 EB0C                <1>         jmp     .10E
    39                              <1> 
    40                              <1> .11E:                                           ; うまく行かなかったときのループ
    41                              <1> 
    42 00000153 3C00                <1>         cmp     al, 0   
    43 00000155 7508                <1>         jne     .10E
    44                              <1> 
    45 00000157 B80000              <1>         mov     ax, 0
    46 0000015A FF4EFE              <1>         dec     word [bp - 2]                   ;リトライ回数を１引く
    47 0000015D 75E7                <1>         jnz     .10L
    48                              <1> 
    49                              <1> .10E:    
    50 0000015F B400                <1>         mov     ah, 0                          
    51                              <1> 
    52                              <1> 
    53 00000161 5E                  <1>         pop     si
    54 00000162 07                  <1>         pop     es
    55 00000163 5A                  <1>         pop     dx
    56 00000164 59                  <1>         pop     cx
    57 00000165 5B                  <1>         pop     bx
    58                              <1> 
    59 00000166 89EC                <1>         mov     sp, bp
    60 00000168 5D                  <1>         pop     bp
    61                              <1> 
    62 00000169 C3                  <1>         ret
    64                                  
    65                                  ;ブートフラグ
    66                                  
    67 0000016A 00<rept>                        times 510 - ($ - $$) db 0x00    ;先頭512バイトの最後を0x55AAにすることでブートプログラムである条件を満たす
    68 000001FE 55AA                            db 0x55, 0xAA 
    69                                  ; リアルモード時に取得した情報
    70                                  FONT:
    71 00000200 0000                    .seg:   dw  0
    72 00000202 0000                    .off:   dw  0
    73                                  ACPI_DATA:
    74 00000204 00000000                .adr:   dd  0
    75 00000208 00000000                .len:   dd  0
    76                                  
    77                                  
    78                                  ;モジュール 先頭512バイト以降に配置 
    79                                  
    80                                  %include    "../modules/real/itoa.s"
     1                              <1> itoa:
     2 0000020C 55                  <1>         push    bp
     3 0000020D 89E5                <1>         mov     bp, sp
     4                              <1> 
     5 0000020F 50                  <1>         push    ax
     6 00000210 53                  <1>         push    bx
     7 00000211 51                  <1>         push    cx
     8 00000212 52                  <1>         push    dx
     9 00000213 56                  <1>         push    si
    10 00000214 57                  <1>         push    di
    11                              <1> 
    12                              <1> ;引数を取得
    13                              <1> 
    14 00000215 8B4604              <1>         mov     ax, [bp + 4]        ; 数値
    15 00000218 8B7606              <1>         mov     si, [bp + 6]        ; バッファアドレス
    16 0000021B 8B4E08              <1>         mov     cx, [bp + 8]        ;バッファサイズ
    17                              <1> 
    18 0000021E 89F7                <1>         mov     di, si
    19 00000220 01CF                <1>         add     di, cx
    20 00000222 4F                  <1>         dec     di      ;バッファの最後尾
    21                              <1> 
    22 00000223 8B5E0C              <1>         mov     bx, word[bp + 12] ;flags = オプション
    23                              <1> 
    24                              <1> ;符号付き判定
    25                              <1> 
    26 00000226 F7C30100            <1>         test    bx, 0b001
    27 0000022A 7408                <1> .10Q:   je      .10E
    28 0000022C 83F800              <1>         cmp     ax, 0
    29 0000022F 7D03                <1> .12Q:   jge     .12E
    30 00000231 83CB02              <1>         or      bx, 0b0010
    31                              <1> .12E:
    32                              <1> .10E:
    33                              <1> 
    34                              <1> ;符号出力判定
    35                              <1> 
    36 00000234 F7C30200            <1>         test    bx, 0b0010
    37 00000238 7410                <1> .20Q:   je      .20E
    38 0000023A 83F800              <1>         cmp     ax, 0
    39 0000023D 7D07                <1> .22Q:   jge     .22F
    40 0000023F F7D8                <1>         neg     ax
    41 00000241 C6042D              <1>         mov     [si], byte '-'   ;先頭にマイナスを表示
    42 00000244 EB03                <1>         jmp     .22E
    43                              <1> .22F:   
    44                              <1> 
    45 00000246 C6042B              <1>         mov     [si], byte '+'  ;先頭にプラスを表示
    46                              <1> 
    47                              <1> .22E:   
    48 00000249 49                  <1>         dec     cx
    49                              <1> 
    50                              <1> .20E:
    51                              <1> 
    52                              <1> ; ASCII変換
    53 0000024A 8B5E0A              <1>         mov bx, [bp + 10]        ;基数
    54                              <1> 
    55                              <1> .30L:
    56 0000024D BA0000              <1>         mov     dx, 0                   ;基数で割ることによって基数に合わせた数値にする
    57 00000250 F7F3                <1>         div     bx                     ; dx = dx:ax % bx
    58                              <1> 
    59 00000252 89D6                <1>         mov     si, dx                              
    60 00000254 8A94[7C02]          <1>         mov     dl, byte [.ascii + si]
    61                              <1> 
    62 00000258 8815                <1>         mov     [di], dl                ;diは一番うしろの数値のアドレス
    63 0000025A 4F                  <1>         dec     di
    64                              <1> 
    65 0000025B 83F800              <1>         cmp     ax, 0
    66 0000025E E0ED                <1>         loopnz  .30L
    67                              <1> .30E:
    68                              <1> 
    69                              <1> ;空欄を埋める
    70                              <1> 
    71 00000260 83F900              <1>         cmp     cx, 0
    72 00000263 740D                <1> .40Q:   je      .40E
    73 00000265 B020                <1>         mov     al, ' '
    74 00000267 837E0C04            <1>         cmp     [bp + 12], word 0b0100             ;フラグ
    75 0000026B 7502                <1> .42Q:   jne     .42E
    76 0000026D B030                <1>         mov     al, '0'
    77                              <1> .42E:
    78 0000026F FD                  <1>         std
    79 00000270 F3AA                <1>         rep stosb
    80                              <1> .40E:
    81                              <1> 
    82                              <1> ;レジスタ復帰とスタックフレームの廃棄
    83                              <1> 
    84 00000272 5F                  <1>         pop     di
    85 00000273 5E                  <1>         pop     si
    86 00000274 5A                  <1>         pop     dx 
    87 00000275 59                  <1>         pop     cx
    88 00000276 5B                  <1>         pop     bx
    89 00000277 58                  <1>         pop     ax
    90                              <1> 
    91 00000278 89EC                <1>         mov     sp, bp
    92 0000027A 5D                  <1>         pop     bp
    93                              <1> 
    94 0000027B C3                  <1>         ret
    95                              <1> 
    96 0000027C 303132333435363738- <1> .ascii:  db      "0123456789ABCDEF"          ;変換テーブル
    96 00000285 39414243444546      <1>
    81                                  %include    "../modules/real/get_drive_param.s"
     1                              <1> get_drive_param:
     2                              <1>         
     3 0000028C 55                  <1>         push    bp
     4 0000028D 89E5                <1>         mov     bp, sp
     5                              <1> 
     6 0000028F 53                  <1>         push    bx
     7 00000290 51                  <1>         push    cx
     8 00000291 06                  <1>         push    es
     9 00000292 56                  <1>         push    si
    10 00000293 57                  <1>         push    di
    11                              <1> 
    12 00000294 8B7604              <1>         mov     si, [bp + 4]
    13 00000297 B80000              <1>         mov     ax, 0
    14 0000029A 8EC0                <1>         mov     es, ax
    15 0000029C 89C7                <1>         mov     di, ax
    16                              <1> 
    17 0000029E B408                <1>         mov     ah, 8                   ;get drive parameters
    18 000002A0 8A14                <1>         mov     dl, [si + drive.no]     ;dl = ドライブ番号
    19 000002A2 CD13                <1>         int     0x13                    ;cf = bios(0x13, 8)
    20 000002A4 721B                <1> .10Q:   jc      .10F
    21                              <1> .10T:   
    22 000002A6 88C8                <1>         mov     al, cl                  ;ax = セクタ数
    23 000002A8 25F300              <1>         and     ax, 0xF3                ;下位6ビットのみ有効
    24                              <1> 
    25 000002AB C0E906              <1>         shr     cl, 6                   ; cx = シリンダ数
    26 000002AE C1C908              <1>         ror     cx, 8                   ;
    27 000002B1 41                  <1>         inc     cx
    28                              <1> 
    29 000002B2 0FB6DE              <1>         movzx   bx, dh
    30 000002B5 43                  <1>         inc     bx
    31                              <1> 
    32 000002B6 894C02              <1>         mov     [si + drive.cyln], cx    ; drive.syln シリンダ数
    33 000002B9 895C04              <1>         mov     [si + drive.head], bx    ; drive.head ヘッド数
    34 000002BC 894406              <1>         mov     [si + drive.sect], ax    ; drive.sect セクタ数
    35                              <1> 
    36 000002BF EB03                <1>         jmp     .10E
    37                              <1> 
    38                              <1> .10F:   
    39 000002C1 B80000              <1>         mov     ax, 0
    40                              <1> .10E:
    41                              <1> 
    42 000002C4 5F                  <1>         pop     di
    43 000002C5 5E                  <1>         pop     si
    44 000002C6 07                  <1>         pop     es
    45 000002C7 59                  <1>         pop     cx
    46 000002C8 5B                  <1>         pop     bx
    47                              <1> 
    48 000002C9 89EC                <1>         mov     sp, bp
    49 000002CB 5D                  <1>         pop     bp
    50                              <1> 
    51 000002CC C3                  <1>         ret
    82                                  %include    "../modules/real/get_font_adr.s"
     1                              <1> get_font_adr:     
     2                              <1>                             ;    +4|  フォントアドレス格納場所        
     3 000002CD 55                  <1>         push    bp          ;    +2|   IP戻り値
     4 000002CE 89E5                <1>         mov     bp, sp      ;  BP+0|   BP
     5                              <1> 
     6                              <1> 
     7 000002D0 50                  <1>         push    ax
     8 000002D1 53                  <1>         push    bx
     9 000002D2 56                  <1>         push    si
    10 000002D3 06                  <1>         push    es
    11 000002D4 55                  <1>         push    bp
    12                              <1> 
    13 000002D5 8B7604              <1>         mov     si, [bp + 4]        ;引数であるフォントアドレス格納場所を取得
    14                              <1>         
    15 000002D8 B83011              <1>         mov     ax, 0x1130       ;BIOS から フォントアドレスを取得するためのもの
    16 000002DB B706                <1>         mov     bh, 0x06           ;サイズの指定 8x16 font (vga/mcga)
    17 000002DD CD10                <1>         int     10h
    18                              <1> 
    19 000002DF 8C04                <1>         mov     [si + 0], es      ;dst[0] = セグメント
    20 000002E1 896C02              <1>         mov     [si + 2], bp      ;dst[1] = オフセット
    21                              <1> 
    22 000002E4 5D                  <1>         pop     bp 
    23 000002E5 07                  <1>         pop     es
    24 000002E6 5E                  <1>         pop     si
    25 000002E7 5B                  <1>         pop     bx
    26 000002E8 58                  <1>         pop     ax
    27                              <1> 
    28 000002E9 89EC                <1>         mov     sp, bp
    29 000002EB 5D                  <1>         pop     bp
    30                              <1> 
    31 000002EC C3                  <1>         ret
    83                                  %include    "../modules/real/get_mem_info.s"
     1                              <1> get_mem_info:
     2                              <1> 
     3 000002ED 6650                <1>         push    eax
     4 000002EF 6653                <1>         push    ebx
     5 000002F1 6651                <1>         push    ecx
     6 000002F3 6652                <1>         push    edx
     7 000002F5 56                  <1>         push    si
     8 000002F6 57                  <1>         push    di
     9 000002F7 55                  <1>         push    bp
    10                              <1> 
    11 000002F8 BD0000              <1>         mov     bp, 0                   ; lines = 0 //行数
    12 000002FB 66BB00000000        <1>         mov     ebx, 0                  ; index = 0
    13                              <1> .10L:
    14                              <1> 
    15 00000301 66B820E80000        <1>         mov    eax, 0x0000E820          ; EAX = 0xE820
    16                              <1> 
    17 00000307 66B914000000        <1>         mov     ecx, E820_RECORD_SIZE   ;ebx = インデックス
    18 0000030D 66BA50414D53        <1>         mov     edx, 'PAMS'             ; ecx = サイズ
    19 00000313 BF[9203]            <1>         mov     di, .b0                 ; edx = 'SMAP'
    20 00000316 CD15                <1>         int     0x15                    ; es:di = バッファ
    21                              <1> 
    22 00000318 663D50414D53        <1>         cmp     eax, 'PAMS'
    23 0000031E 7402                <1>         je      .12E
    24 00000320 EB4E                <1>         jmp     .10E
    25                              <1> .12E:
    26 00000322 7302                <1>         jnc     .14E
    27 00000324 EB4A                <1>         jmp     .10E
    28                              <1> 
    29                              <1> .14E:
    30 00000326 57E87C0083C402      <1>         cdecl   put_mem_info, di       ; 1レコード分のメモリ情報を表示
    31                              <1> 
    32                              <1>         ; acpi data のアドレスを取得
    33                              <1> 
    34 0000032D 668B4510            <1>         mov     eax, [di + 16]          ; eax = レコードタイプ
    35 00000331 66B803000000        <1>         mov     eax, 3                  ; 3 の時 acpiデータが有る
    36 00000337 750F                <1>         jne     .15E
    37                              <1> 
    38 00000339 668B05              <1>         mov     eax, [di + 0]
    39 0000033C 66A3[0402]          <1>         mov     [ACPI_DATA.adr], eax         
    40                              <1> 
    41 00000340 668B4508            <1>         mov     eax, [di + 8]
    42 00000344 66A3[0802]          <1>         mov     [ACPI_DATA.len], eax 
    43                              <1> .15E:
    44 00000348 6683FB00            <1>         cmp     ebx, 0              ;   if(ebx != 0) // 最終レコードを取得するとebx に0が入る
    45 0000034C 741C                <1>         jz      .16E
    46                              <1> 
    47 0000034E 45                  <1>         inc     bp                  ;line++
    48 0000034F 83E507              <1>         and     bp, 0x07            ;lines &= 0x07
    49 00000352 7516                <1>         jnz     .16E                ;if lines==0
    50                              <1> 
    51 00000354 68[7C03]E866FD83C4- <1>         cdecl   puts, .s2
    51 0000035C 02                  <1>
    52                              <1> 
    53 0000035D B410                <1>         mov     ah, 0x10            ; al = bios(0x16, 0x10) キー入力待ち
    54 0000035F CD16                <1>         int     0x16
    55                              <1> 
    56 00000361 68[8603]E859FD83C4- <1>         cdecl   puts, .s3
    56 00000369 02                  <1>
    57                              <1> .16E:
    58 0000036A 6683FB00            <1>         cmp     ebx, 0
    59 0000036E 7591                <1>         jne     .10L
    60                              <1> .10E:
    61 00000370 5D                  <1> 	pop	bp
    62 00000371 5F                  <1> 	pop	di
    63 00000372 5E                  <1> 	pop	si
    64 00000373 665A                <1> 	pop	edx
    65 00000375 6659                <1> 	pop	ecx
    66 00000377 665B                <1> 	pop	ebx
    67 00000379 6658                <1> 	pop	eax
    68                              <1> 
    69 0000037B C3                  <1> 	ret
    70                              <1> 
    71                              <1> 
    72 0000037C 3C6D6F72652E2E2E3E- <1> .s2:    db "<more...>", 0
    72 00000385 00                  <1>
    73 00000386 0D2020202020202020- <1> .s3:    db 0x0D, "         ", 0x0D, 0
    73 0000038F 200D00              <1>
    74                              <1> 
    75                              <1> 
    76 00000392 00<rept>            <1> .b0:	times E820_RECORD_SIZE db 0
    77                              <1> 
    78                              <1> put_mem_info:
    79                              <1>         
    80 000003A6 55                  <1>         push    bp
    81 000003A7 89E5                <1>         mov     bp, sp
    82                              <1> 
    83 000003A9 53                  <1>         push    bx
    84 000003AA 56                  <1>         push    si
    85                              <1> 
    86 000003AB 8B7604              <1>         mov     si, [bp + 4]
    87                              <1> 
    88 000003AE 6A046A106A0468-     <1>         cdecl   itoa, word [si + 6], .p2 + 0, 4, 16, 0b0100
    88 000003B5 [8504]FF7406E84FFE- <1>
    88 000003BD 83C40A              <1>
    89 000003C0 6A046A106A0468-     <1>         cdecl   itoa, word [si + 4], .p2 + 4, 4, 16, 0b0100
    89 000003C7 [8904]FF7404E83DFE- <1>
    89 000003CF 83C40A              <1>
    90 000003D2 6A046A106A0468-     <1>         cdecl   itoa, word [si + 2], .p3 + 0, 4, 16, 0b0100
    90 000003D9 [8E04]FF7402E82BFE- <1>
    90 000003E1 83C40A              <1>
    91 000003E4 6A046A106A0468-     <1>         cdecl   itoa, word [si + 0], .p3 + 4, 4, 16, 0b0100
    91 000003EB [9204]FF34E81AFE83- <1>
    91 000003F3 C40A                <1>
    92                              <1> 
    93 000003F5 6A046A106A0468-     <1>         cdecl   itoa, word [si + 14], .p4 + 0, 4, 16, 0b0100
    93 000003FC [9704]FF740EE808FE- <1>
    93 00000404 83C40A              <1>
    94 00000407 6A046A106A0468-     <1>         cdecl   itoa, word [si + 12], .p4 + 4, 4, 16, 0b0100
    94 0000040E [9B04]FF740CE8F6FD- <1>
    94 00000416 83C40A              <1>
    95 00000419 6A046A106A0468-     <1>         cdecl   itoa, word [si + 10], .p5 + 0, 4, 16, 0b0100
    95 00000420 [A004]FF740AE8E4FD- <1>
    95 00000428 83C40A              <1>
    96 0000042B 6A046A106A0468-     <1>         cdecl   itoa, word [si + 8], .p5 + 4, 4, 16, 0b0100
    96 00000432 [A404]FF7408E8D2FD- <1>
    96 0000043A 83C40A              <1>
    97                              <1> 
    98 0000043D 6A046A106A0468-     <1>         cdecl   itoa, word [si + 6], .p2 + 0, 4, 16, 0b0100
    98 00000444 [8504]FF7406E8C0FD- <1>
    98 0000044C 83C40A              <1>
    99 0000044F 6A046A106A0468-     <1>         cdecl   itoa, word [si + 6], .p2 + 0, 4, 16, 0b0100
    99 00000456 [8504]FF7406E8AEFD- <1>
    99 0000045E 83C40A              <1>
   100                              <1> 
   101 00000461 68[8404]E859FC83C4- <1>         cdecl   puts, .s1
   101 00000469 02                  <1>
   102                              <1> 
   103 0000046A 8B5C10              <1>         mov     bx, [si + 16]   ;Type文字列を表示したい
   104 0000046D 83E307              <1>         and     bx, 0x07                
   105 00000470 D1E3                <1>         shl     bx, 1
   106 00000472 81C3[0605]          <1>         add     bx, .t0         ;テーブルの先頭アドレスを加算
   107 00000476 FF37E845FC83C402    <1>         cdecl   puts, word[bx]
   108                              <1> 
   109 0000047E 5E                  <1>         pop     si
   110 0000047F 5B                  <1> 	pop	bx
   111                              <1> 
   112 00000480 89EC                <1> 	mov	sp, bp
   113 00000482 5D                  <1> 	pop	bp
   114                              <1> 
   115 00000483 C3                  <1> 	ret
   116                              <1> 
   117                              <1> 
   118                              <1> 
   119 00000484 20                  <1> .s1:	db " "
   120 00000485 5A5A5A5A5A5A5A5A5F  <1> .p2:	db "ZZZZZZZZ_"
   121 0000048E 5A5A5A5A5A5A5A5A20  <1> .p3:	db "ZZZZZZZZ "
   122 00000497 5A5A5A5A5A5A5A5A5F  <1> .p4:	db "ZZZZZZZZ_"
   123 000004A0 5A5A5A5A5A5A5A5A20  <1> .p5:	db "ZZZZZZZZ "
   124 000004A9 5A5A5A5A5A5A5A5A00  <1> .p6:	db "ZZZZZZZZ", 0
   125                              <1> 
   126 000004B2 2028556E6B6E6F776E- <1> .s4:	db " (Unknown)", 0x0A, 0x0D, 0
   126 000004BB 290A0D00            <1>
   127 000004BF 2028757361626C6529- <1> .s5:	db " (usable)", 0x0A, 0x0D, 0
   127 000004C8 0A0D00              <1>
   128 000004CB 202872657365727665- <1> .s6:	db " (reserved)", 0x0A, 0x0D, 0
   128 000004D4 64290A0D00          <1>
   129 000004D9 202841435049206461- <1> .s7:	db " (ACPI data)", 0x0A, 0x0D, 0
   129 000004E2 7461290A0D00        <1>
   130 000004E8 202841435049204E56- <1> .s8:	db " (ACPI NVS)", 0x0A, 0x0D, 0
   130 000004F1 53290A0D00          <1>
   131 000004F6 2028626164206D656D- <1> .s9:	db " (bad memory)", 0x0A, 0x0D, 0
   131 000004FF 6F7279290A0D00      <1>
   132                              <1> 
   133 00000506 [B204][BF04][CB04]- <1> .t0:	dw .s4, .s5, .s6, .s7, .s8, .s9, .s4, .s4
   133 0000050C [D904][E804][F604]- <1>
   133 00000512 [B204][B204]        <1>
   134                              <1> 
   135                              <1>         
    84                                  %include    "../modules/real/kbc.s"
     1                              <1> KBC_Data_Write:
     2 00000516 55                  <1>         push    bp
     3 00000517 89E5                <1>         mov     bp, sp
     4 00000519 51                  <1>         push    cx
     5                              <1> 
     6 0000051A B90000              <1>         mov     cx, 0
     7                              <1> .10L:
     8 0000051D E464                <1>         in      al, 0x64        ; AL = inp(0x64) KBCステータス
     9 0000051F A802                <1>         test    al, 0x02        ; ZF = AL & 0x02  書き込み可能か？
    10 00000521 E1FA                <1>         loopz  .10L
    11                              <1> 
    12 00000523 83F900              <1>         cmp     cx, 0
    13 00000526 7405                <1>         jz     .20E
    14                              <1> 
    15 00000528 8A4604              <1>         mov     al, [bp + 4]    ; AL = データ
    16 0000052B E660                <1>         out     0x60, al        ; outp(0x60, AL) 60番ポートつまりデータとしてpcが解釈
    17                              <1> .20E:
    18 0000052D 89C8                <1>         mov     ax, cx
    19                              <1>         
    20 0000052F 59                  <1>         pop     cx
    21 00000530 89EC                <1>         mov     sp, bp
    22 00000532 5D                  <1>         pop     bp
    23 00000533 C3                  <1>         ret                     ;うまくいくとゼロ以外が帰る
    24                              <1> 
    25                              <1> KBC_Data_Read:
    26 00000534 55                  <1>         push    bp
    27 00000535 89E5                <1>         mov     bp, sp
    28 00000537 51                  <1>         push    cx
    29                              <1> 
    30 00000538 B90000              <1>         mov     cx, 0
    31                              <1> .10L:
    32 0000053B E464                <1>         in      al, 0x64        ; AL = inp(0x64) KBCステータス
    33 0000053D A801                <1>         test    al, 0x01        ; ZF = AL & 0x01  読み込み可能か？
    34 0000053F E1FA                <1>         loopz  .10L
    35                              <1> 
    36 00000541 83F900              <1>         cmp     cx, 0
    37 00000544 7409                <1>         jz     .20E
    38                              <1> 
    39 00000546 B000                <1>         mov     al, 0x00        ; ah = 0x00
    40 00000548 E460                <1>         in      al, 0x60        ; al = inp(0x60)
    41                              <1> 
    42 0000054A 8B7E04              <1>         mov     di, [bp + 4]    ; di = ptr
    43 0000054D 8905                <1>         mov     [di + 0], ax    ; 
    44                              <1> .20E:
    45 0000054F 89C8                <1>         mov     ax, cx
    46                              <1>         
    47 00000551 59                  <1>         pop     cx
    48 00000552 89EC                <1>         mov     sp, bp
    49 00000554 5D                  <1>         pop     bp
    50 00000555 C3                  <1>         ret
    51                              <1> 
    52                              <1> KBC_Cmd_Write:         ; KBC_Data_Writeとほぼ同じ
    53 00000556 55                  <1>         push    bp
    54 00000557 89E5                <1>         mov     bp, sp
    55 00000559 51                  <1>         push    cx
    56                              <1> 
    57 0000055A B90000              <1>         mov     cx, 0
    58                              <1> .10L:
    59 0000055D E464                <1>         in      al, 0x64        
    60 0000055F A802                <1>         test    al, 0x02        
    61 00000561 E1FA                <1>         loopz  .10L
    62                              <1> 
    63 00000563 83F900              <1>         cmp     cx, 0
    64 00000566 7405                <1>         jz     .20E
    65                              <1> 
    66 00000568 8A4604              <1>         mov     al, [bp + 4]   
    67 0000056B E664                <1>         out     0x64, al        ; outp(0x64, AL)  64ポート つまり コマンド書き込みとしてPCが解釈
    68                              <1> .20E:
    69 0000056D 89C8                <1>         mov     ax, cx
    70                              <1>         
    71 0000056F 59                  <1>         pop     cx
    72 00000570 89EC                <1>         mov     sp, bp
    73 00000572 5D                  <1>         pop     bp
    74 00000573 C3                  <1>         ret
    85                                  
    86                                  ; ブート処理第二のステージ
    87                                  stage_2:
    88                                  
    89 00000574 68[EE05]E846FB83C4-             cdecl   puts, .s0    ;文字列を表示
    89 0000057C 02                 
    90                                  
    91                                          ;ドライブ情報を取得
    92 0000057D 68[B800]E809FD83C4-             cdecl   get_drive_param, BOOT   ;get_drive_param(DX, BOOT.CYLN);
    92 00000585 02                 
    93 00000586 83F800                          cmp     ax, 0
    94 00000589 750C                    .10Q:   jne     .10E
    95 0000058B 68[2406]E82FFB83C4-     .10T:   cdecl   puts, .e0
    95 00000593 02                 
    96 00000594 E848FB                          call    reboot
    97                                  .10E:
    98                                          ;取得したドライブ情報を表示
    99 00000597 A1[B800]                        mov     ax, [BOOT + drive.no]   ;ドライブ ナンバー を表示
   100 0000059A 6A046A106A0268-                 cdecl   itoa, ax, .p1, 2, 16, 0b0100
   100 000005A1 [0506]50E865FC83C4-
   100 000005A9 0A                 
   101 000005AA A1[BA00]                        mov     ax, [BOOT + drive.cyln]         ;シリンダ数
   102 000005AD 6A046A106A0468-                 cdecl   itoa, ax, .p2, 4, 16, 0b0100
   102 000005B4 [0D06]50E852FC83C4-
   102 000005BC 0A                 
   103 000005BD A1[BC00]                        mov     ax, [BOOT + drive.head]         ;ヘッダ数
   104 000005C0 6A046A106A0268-                 cdecl   itoa, ax, .p3, 2, 16, 0b0100
   104 000005C7 [1706]50E83FFC83C4-
   104 000005CF 0A                 
   105 000005D0 A1[BE00]                        mov     ax, [BOOT + drive.sect]         ;シリンダ数
   106 000005D3 6A046A106A0268-                 cdecl   itoa, ax, .p4, 2, 16, 0b0100
   106 000005DA [1F06]50E82CFC83C4-
   106 000005E2 0A                 
   107 000005E3 68[FD05]E8D7FA83C4-             cdecl   puts, .s1
   107 000005EB 02                 
   108                                  
   109                                  
   110 000005EC EB51                            jmp     stage_3rd    ;次のステージへ
   111                                  
   112 000005EE 326E64207374616765-     .s0     db      "2nd stage...", 0x0A, 0x0D, 0
   112 000005F7 2E2E2E0A0D00       
   113 000005FD 44726976653A3078        .s1     db      "Drive:0x"
   114 00000605 20202C20433A3078        .p1     db      "  , C:0x"
   115 0000060D 202020202C20483A30-     .p2     db      "    , H:0x"
   115 00000616 78                 
   116 00000617 20202C20533A3078        .p3     db      "  , S:0x"
   117 0000061F 20200A0D00              .p4     db      "  ", 0x0A, 0x0D, 0
   118                                  
   119 00000624 43616E277420676574-     .e0     db      "Can't get drive parameter.", 0
   119 0000062D 206472697665207061-
   119 00000636 72616D657465722E00 
   120                                  
   121                                  ;ブート処理第3のステージ
   122                                  stage_3rd:
   123                                  
   124                                          ;文字列の表示
   125 0000063F 68[BC06]E87BFA83C4-             cdecl   puts, .s0
   125 00000647 02                 
   126                                  
   127                                          ;プロテクトモードでもBIOS内蔵フォントを使う
   128 00000648 68[0002]E87FFC83C4-             cdecl   get_font_adr, FONT
   128 00000650 02                 
   129                                  
   130 00000651 6A046A106A0468-                 cdecl   itoa, word [FONT.seg], .p1, 4, 16, 0b0100
   130 00000658 [D906]FF36[0002]E8-
   130 0000065F ABFB83C40A         
   131                                  
   132 00000664 6A046A106A0468-                 cdecl   itoa, word [FONT.off], .p2, 4, 16, 0b0100
   132 0000066B [DE06]FF36[0202]E8-
   132 00000672 98FB83C40A         
   133 00000677 68[CB06]E843FA83C4-             cdecl   puts, .s1
   133 0000067F 02                 
   134                                  
   135                                          ; メモリ情報の取得と表示
   136 00000680 E86AFC                          cdecl   get_mem_info         ;get_mem_info
   137                                  
   138 00000683 66A1[0402]                      mov     eax, [ACPI_DATA.adr]
   139 00000687 6683F800                        cmp     eax, 0                          ; ACPIのデータがないつまりアドレスがなかったらジャンプ
   140 0000068B 742D                            je      .10E
   141                                  
   142 0000068D 6A046A106A0468-                 cdecl   itoa, ax, .p4, 4, 16, 0b0100    ;下位アドレスの変換
   142 00000694 [F706]50E872FB83C4-
   142 0000069C 0A                 
   143 0000069D 66C1E810                        shr     eax, 16                         ;シフトして上位アドレスに持ってくる
   144 000006A1 6A046A106A0468-                 cdecl   itoa, ax, .p3, 4, 16, 0b0100    ;下位アドレスの変換
   144 000006A8 [F306]50E85EFB83C4-
   144 000006B0 0A                 
   145 000006B1 68[E806]E809FA83C4-             cdecl   puts, .s2                       ; アドレスを表示
   145 000006B9 02                 
   146                                  .10E:
   147                                  
   148 000006BA EB42                            jmp     stage_4
   149                                  
   150 000006BC 337264207374616765-     .s0:     db      "3rd stage...", 0x0A, 0x0D, 0
   150 000006C5 2E2E2E0A0D00       
   151                                  
   152 000006CB 20466F6E7420416464-     .s1:    db      " Font Address="
   152 000006D4 726573733D         
   153 000006D9 5A5A5A5A3A              .p1:    db      "ZZZZ:"
   154 000006DE 5A5A5A5A0A0D00          .p2:    db      "ZZZZ", 0x0A, 0x0D, 0
   155 000006E5 0A0D00                          db      0x0A, 0x0D, 0
   156                                  
   157 000006E8 204143504920646174-     .s2     db      " ACPI data="
   157 000006F1 613D               
   158 000006F3 5A5A5A5A                .p3     db      "ZZZZ"
   159 000006F7 5A5A5A5A0A0D00          .p4     db      "ZZZZ", 0x0A, 0x0D, 0
   160                                  
   161                                  stage_4:
   162                                  
   163 000006FE 68[4F07]E8BCF983C4-             cdecl   puts, .s0
   163 00000706 02                 
   164                                  
   165                                          ;A20ゲートの有効化
   166 00000707 FA                              cli                             ; 割込み禁止             
   167 00000708 68AD00E848FE83C402              cdecl   KBC_Cmd_Write, 0xAD     ; キーボード無効化
   168 00000711 68D000E83FFE83C402              cdecl   KBC_Cmd_Write, 0xD0     ; 出力ポート読み出しコマンド
   169 0000071A 68[7307]E814FE83C4-             cdecl   KBC_Data_Read, .key     ; 出力ポート
   169 00000722 02                 
   170                                  
   171 00000723 8A1E[7307]                      mov     bl, [.key]              ; bl = key
   172 00000727 80CB02                          or      bl, 0x02                ; bl |= 0x02  A20ゲート有効化
   173                                  
   174 0000072A 68D100E826FE83C402              cdecl   KBC_Cmd_Write, 0xD1     ; 出力ポート書き込みコマンド
   175 00000733 53E8DFFD83C402                  cdecl   KBC_Data_Write, bx      ;さっきのbxの設定からA20ゲート有効 
   176                                  
   177 0000073A 68AE00E816FE83C402              cdecl   KBC_Cmd_Write, 0xAE     ; キーボード有効化
   178                                  
   179 00000743 FB                              sti                             ;割り込み許可
   180                                  
   181 00000744 68[5E07]E876F983C4-             cdecl	puts, .s1
   181 0000074C 02                 
   182                                  
   183 0000074D EBFE                            jmp     $               ;ループ
   184                                  
   185 0000074F 347468207374616765-     .s0:	db	"4th stage...", 0x0A, 0x0D, 0
   185 00000758 2E2E2E0A0D00       
   186 0000075E 204132302047617465-     .s1:	db	" A20 Gate Enabled.", 0x0A, 0x0D, 0
   186 00000767 20456E61626C65642E-
   186 00000770 0A0D00             
   187                                  
   188 00000773 0000                    .key:   dw      0
   189                                  
   190                                  ;パディング     ブートファイルのサイズを定義したとおりにする
   191 00000775 00<rept>                        times BOOT_SIZE - ($ - $$)  db 0
