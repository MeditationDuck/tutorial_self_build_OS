     1                                  ;マクロ
     2                                  %include        "../include/define.s"
     1                              <1> 
     2                              <1> BOOT_SIZE       equ     (1024 * 8)              ;ブートコードサイズ
     3                              <1> KERNEL_SIZE     equ     (1024 * 8)   
     4                              <1> BOOT_LOAD       equ     0x7c00                  ;ブートプログラムのロード位置
     5                              <1>                                                 ;これがないと0x0000にロードされることになってしまうが
     6                              <1>                                                 ;BIOSそこはがすでに使っている領域である
     7                              <1> 
     8                              <1> BOOT_END        equ     (BOOT_LOAD + BOOT_SIZE)
     9                              <1> SECT_SIZE       equ     (512)                   ;セクタサイズ
    10                              <1> BOOT_SECT       equ     (BOOT_SIZE/SECT_SIZE)   ;ブートプログラムのセクタサイズ
    11                              <1> KERNEL_SECT     equ     (KERNEL_SIZE/SECT_SIZE)
    12                              <1> 
    13                              <1> E820_RECORD_SIZE    equ     20
    14                              <1> 
    15                              <1> KERNEL_LOAD     equ     0x0010_1000
    16                              <1> 
    17                              <1>   
     3                                  %include        "../include/macro.s"
     1                              <1> %macro      cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__>>3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 <res 00000002>      <1>         .no     resw    1
    19 00000002 <res 00000002>      <1>         .cyln   resw    1
    20 00000004 <res 00000002>      <1>         .head   resw    1
    21 00000006 <res 00000002>      <1>         .sect   resw    1
    22                              <1> endstruc
    23                              <1> 
     4                                  
     5                                          ORG     BOOT_LOAD               ;アセンブラに指示 
     6                                  
     7                                  ;エントリーポイント
     8                                  
     9                                  entry:
    10                                  ;BPB(Bios Parameter Block)
    11 00000000 EB58                            jmp     ipl
    12 00000002 90<rept>                        times 90 - ($ - $$) db 0x90
    13                                  ;IPL(Initial Program Loader)
    14                                  
    15                                  ipl:
    16 0000005A FA                              cli                     ;割込み禁止
    17                                  
    18 0000005B B80000                          mov     ax, 0x0000        ;セグメントレジスタの値を設定
    19 0000005E 8ED8                            mov     ds, ax            
    20 00000060 8EC0                            mov     es, ax
    21 00000062 8ED0                            mov     ss, ax
    22 00000064 BC007C                          mov     sp, BOOT_LOAD
    23                                  
    24 00000067 FB                              sti                    ;割込み禁止解除
    25                                  
    26 00000068 8816[B800]                      mov     [BOOT + drive.no], dl  ;ブートドライブの保存
    27                                  
    28                                  ;文字列を表示
    29 0000006C 68[9900]E84E0083C4-             cdecl   puts, .s0        
    29 00000074 02                 
    30                                  
    31                                  ;次の512バイトを読み込む
    32                                  
    33 00000075 BB0F00                          mov     bx, BOOT_SECT - 1           ;bx = 残りのぶーとセクタ数
    34 00000078 B9007E                          mov     cx, BOOT_LOAD + SECT_SIZE   ;cx = 次のロードアドレス
    35                                  
    36 0000007B 515368[B800]E89B00-             cdecl   read_chs, BOOT, bx, cx      ;ax = read_chs(BOOT, bx, cx)
    36 00000083 83C406             
    37                                  
    38 00000086 39D8                            cmp     ax, bx
    39 00000088 740C                    .10Q:   jz      .10E
    40 0000008A 68[A600]E8300083C4-     .10T:   cdecl   puts, .e0
    40 00000092 02                 
    41 00000093 E84900                          call    reboot
    42                                  
    43                                  .10E:
    44 00000096 E94D05                          jmp     stage_2    ;次のステージへ移行
    45                                  
    46                                  ;データ
    47 00000099 426F6F74696E672E2E-     .s0     db      "Booting...", 0x0A, 0x0D, 0
    47 000000A2 2E0A0D00           
    48 000000A6 4572726F723A736563-     .e0     db      "Error:sector read", 0
    48 000000AF 746F72207265616400 
    49                                  
    50                                  ALIGN 2, db 0
    51                                  BOOT:                   ;ブートドライブに関する情報
    52                                      istruc  drive
    53 000000B8 0000                            at  drive.no,       dw  0       ; ドライブ番号
    54 000000BA 0000                            at  drive.cyln,     dw  0       ; C:シリンダ
    55 000000BC 0000                            at  drive.head,     dw  0       ; H:ヘッド
    56 000000BE 0200                            at  drive.sect,     dw  2       ; S:セクタ
    57                                      iend
    58                                  
    59                                  ; モジュール
    60                                  
    61                                  %include    "../modules/real/puts.s"
     1                              <1> puts:
     2 000000C0 55                  <1>         push    bp
     3 000000C1 89E5                <1>         mov     bp, sp
     4                              <1> 
     5 000000C3 50                  <1>         push    ax
     6 000000C4 53                  <1>         push    bx
     7 000000C5 56                  <1>         push    si
     8                              <1> 
     9 000000C6 8B7604              <1>         mov     si, [bp + 4]
    10                              <1> 
    11 000000C9 B40E                <1>         mov     ah, 0x0e
    12 000000CB BB0000              <1>         mov     bx, 0x0000
    13 000000CE FC                  <1>         cld
    14                              <1> .10L:
    15                              <1> 
    16 000000CF AC                  <1>         lodsb
    17                              <1> 
    18 000000D0 3C00                <1>         cmp     al, 0
    19 000000D2 7404                <1>         je      .10E
    20                              <1> 
    21 000000D4 CD10                <1>         int     0x10
    22 000000D6 EBF7                <1>         jmp     .10L
    23                              <1> .10E:
    24                              <1> 
    25 000000D8 5E                  <1>         pop     si
    26 000000D9 5B                  <1>         pop     bx
    27 000000DA 58                  <1>         pop     ax
    28                              <1> 
    29 000000DB 89EC                <1>         mov     sp, bp
    30 000000DD 5D                  <1>         pop     bp
    31                              <1> 
    32 000000DE C3                  <1>         ret
    62                                  %include    "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1> 
     3 000000DF 68[FB00]E8DBFF83C4- <1>         cdecl   puts, .s0   ;メッセージの表示
     3 000000E7 02                  <1>
     4                              <1> 
     5                              <1> ; キー入力待ち
     6                              <1> 
     7                              <1> .10L:
     8 000000E8 B410                <1>         mov     ah, 0x10
     9 000000EA CD16                <1>         int     0x16
    10                              <1> 
    11 000000EC 3C20                <1>         cmp     al, ' '
    12 000000EE 75F8                <1>         jne     .10L
    13                              <1> 
    14                              <1> ;改行を出力
    15 000000F0 68[1901]E8CAFF83C4- <1>         cdecl   puts, .s1
    15 000000F8 02                  <1>
    16                              <1> 
    17                              <1> ;再起動
    18 000000F9 CD19                <1>         int     0x19    ; BIOS(0x19)
    19                              <1> 
    20                              <1> ;文字列データ
    21 000000FB 0A0D50757368205350- <1> .s0     db      0x0A, 0x0D, "Push SPACE key to reboot...", 0
    21 00000104 414345206B65792074- <1>
    21 0000010D 6F207265626F6F742E- <1>
    21 00000116 2E2E00              <1>
    22 00000119 0A0D0A0D00          <1> .s1     db      0x0A, 0x0D, 0x0A, 0x0D, 0
    63                                  %include    "../modules/real/read_chs.s"
     1                              <1> read_chs:
     2                              <1>                             
     3 0000011E 55                  <1>         push    bp
     4 0000011F 89E5                <1>         mov     bp, sp
     5 00000121 6A03                <1>         push    3           ; リトライ回数
     6 00000123 6A00                <1>         push    0           ; 読み込みセクタ数
     7                              <1> 
     8 00000125 53                  <1>         push    bx
     9 00000126 51                  <1>         push    cx
    10 00000127 52                  <1>         push    dx
    11 00000128 06                  <1>         push    es
    12 00000129 56                  <1>         push    si
    13                              <1> 
    14 0000012A 8B7604              <1>         mov     si, [bp + 4]    ;si = srcバッファ
    15                              <1> 
    16                              <1> ; cxレジスタの設定
    17                              <1> 
    18 0000012D 8A6C02              <1>         mov     ch, [si + drive.cyln + 0]   ; ch = シリンダ番号（上位バイト）
    19 00000130 8A4C03              <1>         mov     cl, [si + drive.cyln + 1]   ; cl = シリンダ番号（下位バイト）
    20 00000133 C0E106              <1>         shl     cl, 6                       ; cl <<=6 最上位２ビットにシフト
    21 00000136 0A4C06              <1>         or      cl, [si + drive.sect]       ;セクタ番号
    22                              <1> 
    23                              <1> ; セクタ読み込み
    24 00000139 8A7404              <1>         mov     dh, [si + drive.head]       ;dh = ヘッド番号
    25 0000013C 8A14                <1>         mov     dl, [si + 0]                ;dl = ドライブ番号
    26 0000013E B80000              <1>         mov     ax, 0x0000                  
    27 00000141 8EC0                <1>         mov     es, ax
    28 00000143 8B5E08              <1>         mov     bx, [bp + 8]                ; コピー先
    29                              <1> .10L:
    30                              <1> 
    31 00000146 B402                <1>         mov     ah, 0x02                    ; セクタ読み込み
    32 00000148 8A4606              <1>         mov     al, [bp + 6]                ; セクタ数
    33                              <1> 
    34 0000014B CD13                <1>         int     0x13           
    35 0000014D 7304                <1>         jnc     .11E
    36                              <1> 
    37 0000014F B000                <1>         mov     al, 0                       
    38 00000151 EB0C                <1>         jmp     .10E
    39                              <1> 
    40                              <1> .11E:                                           ; うまく行かなかったときのループ
    41                              <1> 
    42 00000153 3C00                <1>         cmp     al, 0   
    43 00000155 7508                <1>         jne     .10E
    44                              <1> 
    45 00000157 B80000              <1>         mov     ax, 0
    46 0000015A FF4EFE              <1>         dec     word [bp - 2]                   ;リトライ回数を１引く
    47 0000015D 75E7                <1>         jnz     .10L
    48                              <1> 
    49                              <1> .10E:    
    50 0000015F B400                <1>         mov     ah, 0                          
    51                              <1> 
    52                              <1> 
    53 00000161 5E                  <1>         pop     si
    54 00000162 07                  <1>         pop     es
    55 00000163 5A                  <1>         pop     dx
    56 00000164 59                  <1>         pop     cx
    57 00000165 5B                  <1>         pop     bx
    58                              <1> 
    59 00000166 89EC                <1>         mov     sp, bp
    60 00000168 5D                  <1>         pop     bp
    61                              <1> 
    62 00000169 C3                  <1>         ret
    64                                  
    65                                  ;ブートフラグ
    66                                  
    67 0000016A 00<rept>                        times 510 - ($ - $$) db 0x00    ;先頭512バイトの最後を0x55AAにすることでブートプログラムである条件を満たす
    68 000001FE 55AA                            db 0x55, 0xAA 
    69                                  ; リアルモード時に取得した情報
    70                                  FONT:
    71 00000200 0000                    .seg:   dw  0
    72 00000202 0000                    .off:   dw  0
    73                                  ACPI_DATA:
    74 00000204 00000000                .adr:   dd  0
    75 00000208 00000000                .len:   dd  0
    76                                  
    77                                  
    78                                  ;モジュール 先頭512バイト以降に配置 
    79                                  
    80                                  %include    "../modules/real/itoa.s"
     1                              <1> itoa:
     2 0000020C 55                  <1>         push    bp
     3 0000020D 89E5                <1>         mov     bp, sp
     4                              <1> 
     5 0000020F 50                  <1>         push    ax
     6 00000210 53                  <1>         push    bx
     7 00000211 51                  <1>         push    cx
     8 00000212 52                  <1>         push    dx
     9 00000213 56                  <1>         push    si
    10 00000214 57                  <1>         push    di
    11                              <1> 
    12                              <1> ;引数を取得
    13                              <1> 
    14 00000215 8B4604              <1>         mov     ax, [bp + 4]        ; 数値
    15 00000218 8B7606              <1>         mov     si, [bp + 6]        ; バッファアドレス
    16 0000021B 8B4E08              <1>         mov     cx, [bp + 8]        ;バッファサイズ
    17                              <1> 
    18 0000021E 89F7                <1>         mov     di, si
    19 00000220 01CF                <1>         add     di, cx
    20 00000222 4F                  <1>         dec     di      ;バッファの最後尾
    21                              <1> 
    22 00000223 8B5E0C              <1>         mov     bx, word[bp + 12] ;flags = オプション
    23                              <1> 
    24                              <1> ;符号付き判定
    25                              <1> 
    26 00000226 F7C30100            <1>         test    bx, 0b001
    27 0000022A 7408                <1> .10Q:   je      .10E
    28 0000022C 83F800              <1>         cmp     ax, 0
    29 0000022F 7D03                <1> .12Q:   jge     .12E
    30 00000231 83CB02              <1>         or      bx, 0b0010
    31                              <1> .12E:
    32                              <1> .10E:
    33                              <1> 
    34                              <1> ;符号出力判定
    35                              <1> 
    36 00000234 F7C30200            <1>         test    bx, 0b0010
    37 00000238 7410                <1> .20Q:   je      .20E
    38 0000023A 83F800              <1>         cmp     ax, 0
    39 0000023D 7D07                <1> .22Q:   jge     .22F
    40 0000023F F7D8                <1>         neg     ax
    41 00000241 C6042D              <1>         mov     [si], byte '-'   ;先頭にマイナスを表示
    42 00000244 EB03                <1>         jmp     .22E
    43                              <1> .22F:   
    44                              <1> 
    45 00000246 C6042B              <1>         mov     [si], byte '+'  ;先頭にプラスを表示
    46                              <1> 
    47                              <1> .22E:   
    48 00000249 49                  <1>         dec     cx
    49                              <1> 
    50                              <1> .20E:
    51                              <1> 
    52                              <1> ; ASCII変換
    53 0000024A 8B5E0A              <1>         mov bx, [bp + 10]        ;基数
    54                              <1> 
    55                              <1> .30L:
    56 0000024D BA0000              <1>         mov     dx, 0                   ;基数で割ることによって基数に合わせた数値にする
    57 00000250 F7F3                <1>         div     bx                     ; dx = dx:ax % bx
    58                              <1> 
    59 00000252 89D6                <1>         mov     si, dx                              
    60 00000254 8A94[7C02]          <1>         mov     dl, byte [.ascii + si]
    61                              <1> 
    62 00000258 8815                <1>         mov     [di], dl                ;diは一番うしろの数値のアドレス
    63 0000025A 4F                  <1>         dec     di
    64                              <1> 
    65 0000025B 83F800              <1>         cmp     ax, 0
    66 0000025E E0ED                <1>         loopnz  .30L
    67                              <1> .30E:
    68                              <1> 
    69                              <1> ;空欄を埋める
    70                              <1> 
    71 00000260 83F900              <1>         cmp     cx, 0
    72 00000263 740D                <1> .40Q:   je      .40E
    73 00000265 B020                <1>         mov     al, ' '
    74 00000267 837E0C04            <1>         cmp     [bp + 12], word 0b0100             ;フラグ
    75 0000026B 7502                <1> .42Q:   jne     .42E
    76 0000026D B030                <1>         mov     al, '0'
    77                              <1> .42E:
    78 0000026F FD                  <1>         std
    79 00000270 F3AA                <1>         rep stosb
    80                              <1> .40E:
    81                              <1> 
    82                              <1> ;レジスタ復帰とスタックフレームの廃棄
    83                              <1> 
    84 00000272 5F                  <1>         pop     di
    85 00000273 5E                  <1>         pop     si
    86 00000274 5A                  <1>         pop     dx 
    87 00000275 59                  <1>         pop     cx
    88 00000276 5B                  <1>         pop     bx
    89 00000277 58                  <1>         pop     ax
    90                              <1> 
    91 00000278 89EC                <1>         mov     sp, bp
    92 0000027A 5D                  <1>         pop     bp
    93                              <1> 
    94 0000027B C3                  <1>         ret
    95                              <1> 
    96 0000027C 303132333435363738- <1> .ascii:  db      "0123456789ABCDEF"          ;変換テーブル
    96 00000285 39414243444546      <1>
    81                                  %include    "../modules/real/get_drive_param.s"
     1                              <1> get_drive_param:
     2                              <1>         
     3 0000028C 55                  <1>         push    bp
     4 0000028D 89E5                <1>         mov     bp, sp
     5                              <1> 
     6 0000028F 53                  <1>         push    bx
     7 00000290 51                  <1>         push    cx
     8 00000291 06                  <1>         push    es
     9 00000292 56                  <1>         push    si
    10 00000293 57                  <1>         push    di
    11                              <1> 
    12 00000294 8B7604              <1>         mov     si, [bp + 4]
    13 00000297 B80000              <1>         mov     ax, 0
    14 0000029A 8EC0                <1>         mov     es, ax
    15 0000029C 89C7                <1>         mov     di, ax
    16                              <1> 
    17 0000029E B408                <1>         mov     ah, 8                   ;get drive parameters
    18 000002A0 8A14                <1>         mov     dl, [si + drive.no]     ;dl = ドライブ番号
    19 000002A2 CD13                <1>         int     0x13                    ;cf = bios(0x13, 8)
    20 000002A4 721B                <1> .10Q:   jc      .10F
    21                              <1> .10T:   
    22 000002A6 88C8                <1>         mov     al, cl                  ;ax = セクタ数
    23 000002A8 25F300              <1>         and     ax, 0xF3                ;下位6ビットのみ有効
    24                              <1> 
    25 000002AB C0E906              <1>         shr     cl, 6                   ; cx = シリンダ数
    26 000002AE C1C908              <1>         ror     cx, 8                   ;
    27 000002B1 41                  <1>         inc     cx
    28                              <1> 
    29 000002B2 0FB6DE              <1>         movzx   bx, dh
    30 000002B5 43                  <1>         inc     bx
    31                              <1> 
    32 000002B6 894C02              <1>         mov     [si + drive.cyln], cx    ; drive.syln シリンダ数
    33 000002B9 895C04              <1>         mov     [si + drive.head], bx    ; drive.head ヘッド数
    34 000002BC 894406              <1>         mov     [si + drive.sect], ax    ; drive.sect セクタ数
    35                              <1> 
    36 000002BF EB03                <1>         jmp     .10E
    37                              <1> 
    38                              <1> .10F:   
    39 000002C1 B80000              <1>         mov     ax, 0
    40                              <1> .10E:
    41                              <1> 
    42 000002C4 5F                  <1>         pop     di
    43 000002C5 5E                  <1>         pop     si
    44 000002C6 07                  <1>         pop     es
    45 000002C7 59                  <1>         pop     cx
    46 000002C8 5B                  <1>         pop     bx
    47                              <1> 
    48 000002C9 89EC                <1>         mov     sp, bp
    49 000002CB 5D                  <1>         pop     bp
    50                              <1> 
    51 000002CC C3                  <1>         ret
    82                                  %include    "../modules/real/get_font_adr.s"
     1                              <1> get_font_adr:     
     2                              <1>                             ;    +4|  フォントアドレス格納場所        
     3 000002CD 55                  <1>         push    bp          ;    +2|   IP戻り値
     4 000002CE 89E5                <1>         mov     bp, sp      ;  BP+0|   BP
     5                              <1> 
     6                              <1> 
     7 000002D0 50                  <1>         push    ax
     8 000002D1 53                  <1>         push    bx
     9 000002D2 56                  <1>         push    si
    10 000002D3 06                  <1>         push    es
    11 000002D4 55                  <1>         push    bp
    12                              <1> 
    13 000002D5 8B7604              <1>         mov     si, [bp + 4]        ;引数であるフォントアドレス格納場所を取得
    14                              <1>         
    15 000002D8 B83011              <1>         mov     ax, 0x1130       ;BIOS から フォントアドレスを取得するためのもの
    16 000002DB B706                <1>         mov     bh, 0x06           ;サイズの指定 8x16 font (vga/mcga)
    17 000002DD CD10                <1>         int     10h
    18                              <1> 
    19 000002DF 8C04                <1>         mov     [si + 0], es      ;dst[0] = セグメント
    20 000002E1 896C02              <1>         mov     [si + 2], bp      ;dst[1] = オフセット
    21                              <1> 
    22 000002E4 5D                  <1>         pop     bp 
    23 000002E5 07                  <1>         pop     es
    24 000002E6 5E                  <1>         pop     si
    25 000002E7 5B                  <1>         pop     bx
    26 000002E8 58                  <1>         pop     ax
    27                              <1> 
    28 000002E9 89EC                <1>         mov     sp, bp
    29 000002EB 5D                  <1>         pop     bp
    30                              <1> 
    31 000002EC C3                  <1>         ret
    83                                  %include    "../modules/real/get_mem_info.s"
     1                              <1> get_mem_info:
     2                              <1> 
     3 000002ED 6650                <1>         push    eax
     4 000002EF 6653                <1>         push    ebx
     5 000002F1 6651                <1>         push    ecx
     6 000002F3 6652                <1>         push    edx
     7 000002F5 56                  <1>         push    si
     8 000002F6 57                  <1>         push    di
     9 000002F7 55                  <1>         push    bp
    10                              <1> 
    11 000002F8 BD0000              <1>         mov     bp, 0                   ; lines = 0 //行数
    12 000002FB 66BB00000000        <1>         mov     ebx, 0                  ; index = 0
    13                              <1> .10L:
    14                              <1> 
    15 00000301 66B820E80000        <1>         mov    eax, 0x0000E820          ; EAX = 0xE820
    16                              <1> 
    17 00000307 66B914000000        <1>         mov     ecx, E820_RECORD_SIZE   ;ebx = インデックス
    18 0000030D 66BA50414D53        <1>         mov     edx, 'PAMS'             ; ecx = サイズ
    19 00000313 BF[9203]            <1>         mov     di, .b0                 ; edx = 'SMAP'
    20 00000316 CD15                <1>         int     0x15                    ; es:di = バッファ
    21                              <1> 
    22 00000318 663D50414D53        <1>         cmp     eax, 'PAMS'
    23 0000031E 7402                <1>         je      .12E
    24 00000320 EB4E                <1>         jmp     .10E
    25                              <1> .12E:
    26 00000322 7302                <1>         jnc     .14E
    27 00000324 EB4A                <1>         jmp     .10E
    28                              <1> 
    29                              <1> .14E:
    30 00000326 57E87C0083C402      <1>         cdecl   put_mem_info, di       ; 1レコード分のメモリ情報を表示
    31                              <1> 
    32                              <1>         ; acpi data のアドレスを取得
    33                              <1> 
    34 0000032D 668B4510            <1>         mov     eax, [di + 16]          ; eax = レコードタイプ
    35 00000331 66B803000000        <1>         mov     eax, 3                  ; 3 の時 acpiデータが有る
    36 00000337 750F                <1>         jne     .15E
    37                              <1> 
    38 00000339 668B05              <1>         mov     eax, [di + 0]
    39 0000033C 66A3[0402]          <1>         mov     [ACPI_DATA.adr], eax         
    40                              <1> 
    41 00000340 668B4508            <1>         mov     eax, [di + 8]
    42 00000344 66A3[0802]          <1>         mov     [ACPI_DATA.len], eax 
    43                              <1> .15E:
    44 00000348 6683FB00            <1>         cmp     ebx, 0              ;   if(ebx != 0) // 最終レコードを取得するとebx に0が入る
    45 0000034C 741C                <1>         jz      .16E
    46                              <1> 
    47 0000034E 45                  <1>         inc     bp                  ;line++
    48 0000034F 83E507              <1>         and     bp, 0x07            ;lines &= 0x07
    49 00000352 7516                <1>         jnz     .16E                ;if lines==0
    50                              <1> 
    51 00000354 68[7C03]E866FD83C4- <1>         cdecl   puts, .s2
    51 0000035C 02                  <1>
    52                              <1> 
    53 0000035D B410                <1>         mov     ah, 0x10            ; al = bios(0x16, 0x10) キー入力待ち
    54 0000035F CD16                <1>         int     0x16
    55                              <1> 
    56 00000361 68[8603]E859FD83C4- <1>         cdecl   puts, .s3
    56 00000369 02                  <1>
    57                              <1> .16E:
    58 0000036A 6683FB00            <1>         cmp     ebx, 0
    59 0000036E 7591                <1>         jne     .10L
    60                              <1> .10E:
    61 00000370 5D                  <1> 	pop	bp
    62 00000371 5F                  <1> 	pop	di
    63 00000372 5E                  <1> 	pop	si
    64 00000373 665A                <1> 	pop	edx
    65 00000375 6659                <1> 	pop	ecx
    66 00000377 665B                <1> 	pop	ebx
    67 00000379 6658                <1> 	pop	eax
    68                              <1> 
    69 0000037B C3                  <1> 	ret
    70                              <1> 
    71                              <1> 
    72 0000037C 3C6D6F72652E2E2E3E- <1> .s2:    db "<more...>", 0
    72 00000385 00                  <1>
    73 00000386 0D2020202020202020- <1> .s3:    db 0x0D, "         ", 0x0D, 0
    73 0000038F 200D00              <1>
    74                              <1> 
    75                              <1> 
    76 00000392 00<rept>            <1> .b0:	times E820_RECORD_SIZE db 0
    77                              <1> 
    78                              <1> put_mem_info:
    79                              <1>         
    80 000003A6 55                  <1>         push    bp
    81 000003A7 89E5                <1>         mov     bp, sp
    82                              <1> 
    83 000003A9 53                  <1>         push    bx
    84 000003AA 56                  <1>         push    si
    85                              <1> 
    86 000003AB 8B7604              <1>         mov     si, [bp + 4]
    87                              <1> 
    88 000003AE 6A046A106A0468-     <1>         cdecl   itoa, word [si + 6], .p2 + 0, 4, 16, 0b0100
    88 000003B5 [8504]FF7406E84FFE- <1>
    88 000003BD 83C40A              <1>
    89 000003C0 6A046A106A0468-     <1>         cdecl   itoa, word [si + 4], .p2 + 4, 4, 16, 0b0100
    89 000003C7 [8904]FF7404E83DFE- <1>
    89 000003CF 83C40A              <1>
    90 000003D2 6A046A106A0468-     <1>         cdecl   itoa, word [si + 2], .p3 + 0, 4, 16, 0b0100
    90 000003D9 [8E04]FF7402E82BFE- <1>
    90 000003E1 83C40A              <1>
    91 000003E4 6A046A106A0468-     <1>         cdecl   itoa, word [si + 0], .p3 + 4, 4, 16, 0b0100
    91 000003EB [9204]FF34E81AFE83- <1>
    91 000003F3 C40A                <1>
    92                              <1> 
    93 000003F5 6A046A106A0468-     <1>         cdecl   itoa, word [si + 14], .p4 + 0, 4, 16, 0b0100
    93 000003FC [9704]FF740EE808FE- <1>
    93 00000404 83C40A              <1>
    94 00000407 6A046A106A0468-     <1>         cdecl   itoa, word [si + 12], .p4 + 4, 4, 16, 0b0100
    94 0000040E [9B04]FF740CE8F6FD- <1>
    94 00000416 83C40A              <1>
    95 00000419 6A046A106A0468-     <1>         cdecl   itoa, word [si + 10], .p5 + 0, 4, 16, 0b0100
    95 00000420 [A004]FF740AE8E4FD- <1>
    95 00000428 83C40A              <1>
    96 0000042B 6A046A106A0468-     <1>         cdecl   itoa, word [si + 8], .p5 + 4, 4, 16, 0b0100
    96 00000432 [A404]FF7408E8D2FD- <1>
    96 0000043A 83C40A              <1>
    97                              <1> 
    98 0000043D 6A046A106A0468-     <1>         cdecl   itoa, word [si + 6], .p2 + 0, 4, 16, 0b0100
    98 00000444 [8504]FF7406E8C0FD- <1>
    98 0000044C 83C40A              <1>
    99 0000044F 6A046A106A0468-     <1>         cdecl   itoa, word [si + 6], .p2 + 0, 4, 16, 0b0100
    99 00000456 [8504]FF7406E8AEFD- <1>
    99 0000045E 83C40A              <1>
   100                              <1> 
   101 00000461 68[8404]E859FC83C4- <1>         cdecl   puts, .s1
   101 00000469 02                  <1>
   102                              <1> 
   103 0000046A 8B5C10              <1>         mov     bx, [si + 16]   ;Type文字列を表示したい
   104 0000046D 83E307              <1>         and     bx, 0x07                
   105 00000470 D1E3                <1>         shl     bx, 1
   106 00000472 81C3[0605]          <1>         add     bx, .t0         ;テーブルの先頭アドレスを加算
   107 00000476 FF37E845FC83C402    <1>         cdecl   puts, word[bx]
   108                              <1> 
   109 0000047E 5E                  <1>         pop     si
   110 0000047F 5B                  <1> 	pop	bx
   111                              <1> 
   112 00000480 89EC                <1> 	mov	sp, bp
   113 00000482 5D                  <1> 	pop	bp
   114                              <1> 
   115 00000483 C3                  <1> 	ret
   116                              <1> 
   117                              <1> 
   118                              <1> 
   119 00000484 20                  <1> .s1:	db " "
   120 00000485 5A5A5A5A5A5A5A5A5F  <1> .p2:	db "ZZZZZZZZ_"
   121 0000048E 5A5A5A5A5A5A5A5A20  <1> .p3:	db "ZZZZZZZZ "
   122 00000497 5A5A5A5A5A5A5A5A5F  <1> .p4:	db "ZZZZZZZZ_"
   123 000004A0 5A5A5A5A5A5A5A5A20  <1> .p5:	db "ZZZZZZZZ "
   124 000004A9 5A5A5A5A5A5A5A5A00  <1> .p6:	db "ZZZZZZZZ", 0
   125                              <1> 
   126 000004B2 2028556E6B6E6F776E- <1> .s4:	db " (Unknown)", 0x0A, 0x0D, 0
   126 000004BB 290A0D00            <1>
   127 000004BF 2028757361626C6529- <1> .s5:	db " (usable)", 0x0A, 0x0D, 0
   127 000004C8 0A0D00              <1>
   128 000004CB 202872657365727665- <1> .s6:	db " (reserved)", 0x0A, 0x0D, 0
   128 000004D4 64290A0D00          <1>
   129 000004D9 202841435049206461- <1> .s7:	db " (ACPI data)", 0x0A, 0x0D, 0
   129 000004E2 7461290A0D00        <1>
   130 000004E8 202841435049204E56- <1> .s8:	db " (ACPI NVS)", 0x0A, 0x0D, 0
   130 000004F1 53290A0D00          <1>
   131 000004F6 2028626164206D656D- <1> .s9:	db " (bad memory)", 0x0A, 0x0D, 0
   131 000004FF 6F7279290A0D00      <1>
   132                              <1> 
   133 00000506 [B204][BF04][CB04]- <1> .t0:	dw .s4, .s5, .s6, .s7, .s8, .s9, .s4, .s4
   133 0000050C [D904][E804][F604]- <1>
   133 00000512 [B204][B204]        <1>
   134                              <1> 
   135                              <1>         
    84                                  %include    "../modules/real/kbc.s"
     1                              <1> KBC_Data_Write:
     2 00000516 55                  <1>         push    bp
     3 00000517 89E5                <1>         mov     bp, sp
     4 00000519 51                  <1>         push    cx
     5                              <1> 
     6 0000051A B90000              <1>         mov     cx, 0
     7                              <1> .10L:
     8 0000051D E464                <1>         in      al, 0x64        ; AL = inp(0x64) KBCステータス
     9 0000051F A802                <1>         test    al, 0x02        ; ZF = AL & 0x02  書き込み可能か？
    10 00000521 E1FA                <1>         loopz  .10L
    11                              <1> 
    12 00000523 83F900              <1>         cmp     cx, 0
    13 00000526 7405                <1>         jz     .20E
    14                              <1> 
    15 00000528 8A4604              <1>         mov     al, [bp + 4]    ; AL = データ
    16 0000052B E660                <1>         out     0x60, al        ; outp(0x60, AL) 60番ポートつまりデータとしてpcが解釈
    17                              <1> .20E:
    18 0000052D 89C8                <1>         mov     ax, cx
    19                              <1>         
    20 0000052F 59                  <1>         pop     cx
    21 00000530 89EC                <1>         mov     sp, bp
    22 00000532 5D                  <1>         pop     bp
    23 00000533 C3                  <1>         ret                     ;うまくいくとゼロ以外が帰る
    24                              <1> 
    25                              <1> KBC_Data_Read:
    26 00000534 55                  <1>         push    bp
    27 00000535 89E5                <1>         mov     bp, sp
    28 00000537 51                  <1>         push    cx
    29                              <1> 
    30 00000538 B90000              <1>         mov     cx, 0
    31                              <1> .10L:
    32 0000053B E464                <1>         in      al, 0x64        ; AL = inp(0x64) KBCステータス
    33 0000053D A801                <1>         test    al, 0x01        ; ZF = AL & 0x01  読み込み可能か？
    34 0000053F E1FA                <1>         loopz  .10L
    35                              <1> 
    36 00000541 83F900              <1>         cmp     cx, 0
    37 00000544 7409                <1>         jz     .20E
    38                              <1> 
    39 00000546 B000                <1>         mov     al, 0x00        ; ah = 0x00
    40 00000548 E460                <1>         in      al, 0x60        ; al = inp(0x60)
    41                              <1> 
    42 0000054A 8B7E04              <1>         mov     di, [bp + 4]    ; di = ptr
    43 0000054D 8905                <1>         mov     [di + 0], ax    ; 
    44                              <1> .20E:
    45 0000054F 89C8                <1>         mov     ax, cx
    46                              <1>         
    47 00000551 59                  <1>         pop     cx
    48 00000552 89EC                <1>         mov     sp, bp
    49 00000554 5D                  <1>         pop     bp
    50 00000555 C3                  <1>         ret
    51                              <1> 
    52                              <1> KBC_Cmd_Write:         ; KBC_Data_Writeとほぼ同じ
    53 00000556 55                  <1>         push    bp
    54 00000557 89E5                <1>         mov     bp, sp
    55 00000559 51                  <1>         push    cx
    56                              <1> 
    57 0000055A B90000              <1>         mov     cx, 0
    58                              <1> .10L:
    59 0000055D E464                <1>         in      al, 0x64        
    60 0000055F A802                <1>         test    al, 0x02        
    61 00000561 E1FA                <1>         loopz  .10L
    62                              <1> 
    63 00000563 83F900              <1>         cmp     cx, 0
    64 00000566 7405                <1>         jz     .20E
    65                              <1> 
    66 00000568 8A4604              <1>         mov     al, [bp + 4]   
    67 0000056B E664                <1>         out     0x64, al        ; outp(0x64, AL)  64ポート つまり コマンド書き込みとしてPCが解釈
    68                              <1> .20E:
    69 0000056D 89C8                <1>         mov     ax, cx
    70                              <1>         
    71 0000056F 59                  <1>         pop     cx
    72 00000570 89EC                <1>         mov     sp, bp
    73 00000572 5D                  <1>         pop     bp
    74 00000573 C3                  <1>         ret
    85                                  %include    "../modules/real/lba_chs.s"
     1                              <1> lba_chs:
     2                              <1> ;■書式		: void lba_chs(drive, drv_chs, lba);
     3                              <1> ;
     4                              <1> ;■引数
     5                              <1> ;	drive	: drive構造体のアドレス
     6                              <1> ;			:（ドライブパラメータが格納されている）
     7                              <1> ;	drv_chs	: drive構造体のアドレス
     8                              <1> ;			:（変換後のシリンダ番号、ヘッド番号そしてセクタ番号を保存する）
     9                              <1> ;	lba		: LBA
    10                              <1> ;
    11                              <1> ;■戻り値	: 成功(0以外)、失敗(0)
    12                              <1> 
    13 00000574 55                  <1>         push    bp
    14 00000575 89E5                <1>         mov     bp, sp
    15                              <1> 
    16 00000577 50                  <1>         push    ax
    17 00000578 53                  <1>         push    bx 
    18 00000579 52                  <1>         push    dx
    19 0000057A 56                  <1>         push    si
    20 0000057B 57                  <1>         push    di
    21                              <1> 
    22 0000057C 8B7604              <1>         mov     si, [bp + 4]
    23 0000057F 8B7E06              <1>         mov     di, [bp + 6]
    24                              <1> 
    25 00000582 8A4404              <1>         mov     al, [si + drive.head]       ;最大ヘッド数
    26 00000585 F66406              <1>         mul     byte [si + drive.sect]      ; 上 * 最大シリンダ数 
    27 00000588 89C3                <1>         mov     bx, ax
    28 0000058A BA0000              <1>         mov     dx, 0                       ;LBA上位2バイト
    29 0000058D 8B4608              <1>         mov     ax, [bp + 8]                ; 下位バイト
    30 00000590 F7F3                <1>         div     bx                          ; dx:ax % bx ; 残り
    31                              <1>                                             ; dx:ax / bx ; シリンダ番号
    32 00000592 894502              <1>         mov     [di + drive.cyln], ax       ; シリンダ番号
    33                              <1> 
    34 00000595 89D0                <1>         mov     ax, dx
    35 00000597 F67406              <1>         div     byte [si + drive.sect]      ; ah = ax % 最大セクタ数
    36                              <1> 
    37 0000059A 0FB6D4              <1>         movzx   dx, ah                      ; dx = セクタ番号
    38 0000059D 42                  <1>         inc dx                              ; 自然数にするため
    39                              <1> 
    40 0000059E B400                <1>         mov     ah, 0x00                    ; AX = ヘッド位置
    41                              <1> 
    42 000005A0 894504              <1>         mov     [di + drive.head], ax       ;  ヘッダ番号
    43 000005A3 895506              <1>         mov     [di + drive.sect], dx       ; drv_chs.sect = セクタ番号
    44                              <1> 
    45 000005A6 5F                  <1>         pop     di
    46 000005A7 5E                  <1>         pop     si
    47 000005A8 5A                  <1>         pop     dx
    48 000005A9 5B                  <1>         pop     bx
    49 000005AA 58                  <1>         pop     ax
    50                              <1> 
    51 000005AB 89EC                <1>         mov     sp, bp
    52 000005AD 5D                  <1>         pop     bp
    53                              <1> 
    54 000005AE C3                  <1>         ret
    86                                  %include    "../modules/real/read_lba.s"
     1                              <1> read_lba:
     2                              <1> 
     3 000005AF 55                  <1>         push    bp
     4 000005B0 89E5                <1>         mov     bp, sp
     5 000005B2 56                  <1>         push    si
     6                              <1> 
     7 000005B3 8B7604              <1>         mov     si, [bp + 4]        ; ドライブ情報
     8                              <1> 
     9 000005B6 8B4606              <1>         mov     ax, [bp + 6]        ; LBA
    10 000005B9 5068[DE05]56E8B3FF- <1>         cdecl   lba_chs, si, .chs, ax; lba_chs(drive, .chs, ax);
    10 000005C1 83C406              <1>
    11                              <1> 
    12 000005C4 8A04                <1>         mov     al, [si + drive.no]
    13 000005C6 A2[DE05]            <1>         mov     [.chs + drive.no], al; ドライブ番号
    14                              <1> 
    15 000005C9 FF760AFF760868-     <1>         cdecl   read_chs, .chs, word [bp + 8], word [bp + 10] ; ax = read_chs(.chs, セクタ数, ofs)
    15 000005D0 [DE05]E849FB83C406  <1>
    16                              <1> 
    17 000005D8 5E                  <1>         pop     si
    18 000005D9 89EC                <1>         mov     sp, bp
    19 000005DB 5D                  <1>         pop     bp
    20                              <1> 
    21 000005DC C3                  <1>         ret
    22                              <1> 
    23 000005DD 90                  <1> ALIGN 2
    24 000005DE 00<rept>            <1> .chs:   times drive_size        db  0
    87                                  
    88                                  ; ブート処理第二のステージ
    89                                  stage_2:
    90                                  
    91 000005E6 68[6006]E8D4FA83C4-             cdecl   puts, .s0    ;文字列を表示
    91 000005EE 02                 
    92                                  
    93                                          ;ドライブ情報を取得
    94 000005EF 68[B800]E897FC83C4-             cdecl   get_drive_param, BOOT   ;get_drive_param(DX, BOOT.CYLN);
    94 000005F7 02                 
    95 000005F8 83F800                          cmp     ax, 0
    96 000005FB 750C                    .10Q:   jne     .10E
    97 000005FD 68[9606]E8BDFA83C4-     .10T:   cdecl   puts, .e0
    97 00000605 02                 
    98 00000606 E8D6FA                          call    reboot
    99                                  .10E:
   100                                          ;取得したドライブ情報を表示
   101 00000609 A1[B800]                        mov     ax, [BOOT + drive.no]   ;ドライブ ナンバー を表示
   102 0000060C 6A046A106A0268-                 cdecl   itoa, ax, .p1, 2, 16, 0b0100
   102 00000613 [7706]50E8F3FB83C4-
   102 0000061B 0A                 
   103 0000061C A1[BA00]                        mov     ax, [BOOT + drive.cyln]         ;シリンダ数
   104 0000061F 6A046A106A0468-                 cdecl   itoa, ax, .p2, 4, 16, 0b0100
   104 00000626 [7F06]50E8E0FB83C4-
   104 0000062E 0A                 
   105 0000062F A1[BC00]                        mov     ax, [BOOT + drive.head]         ;ヘッダ数
   106 00000632 6A046A106A0268-                 cdecl   itoa, ax, .p3, 2, 16, 0b0100
   106 00000639 [8906]50E8CDFB83C4-
   106 00000641 0A                 
   107 00000642 A1[BE00]                        mov     ax, [BOOT + drive.sect]         ;シリンダ数
   108 00000645 6A046A106A0268-                 cdecl   itoa, ax, .p4, 2, 16, 0b0100
   108 0000064C [9106]50E8BAFB83C4-
   108 00000654 0A                 
   109 00000655 68[6F06]E865FA83C4-             cdecl   puts, .s1
   109 0000065D 02                 
   110                                  
   111                                  
   112 0000065E EB51                            jmp     stage_3rd    ;次のステージへ
   113                                  
   114 00000660 326E64207374616765-     .s0     db      "2nd stage...", 0x0A, 0x0D, 0
   114 00000669 2E2E2E0A0D00       
   115 0000066F 44726976653A3078        .s1     db      "Drive:0x"
   116 00000677 20202C20433A3078        .p1     db      "  , C:0x"
   117 0000067F 202020202C20483A30-     .p2     db      "    , H:0x"
   117 00000688 78                 
   118 00000689 20202C20533A3078        .p3     db      "  , S:0x"
   119 00000691 20200A0D00              .p4     db      "  ", 0x0A, 0x0D, 0
   120                                  
   121 00000696 43616E277420676574-     .e0     db      "Can't get drive parameter.", 0
   121 0000069F 206472697665207061-
   121 000006A8 72616D657465722E00 
   122                                  
   123                                  ;ブート処理第3のステージ
   124                                  stage_3rd:
   125                                  
   126                                          ;文字列の表示
   127 000006B1 68[2E07]E809FA83C4-             cdecl   puts, .s0
   127 000006B9 02                 
   128                                  
   129                                          ;プロテクトモードでもBIOS内蔵フォントを使う
   130 000006BA 68[0002]E80DFC83C4-             cdecl   get_font_adr, FONT
   130 000006C2 02                 
   131                                  
   132 000006C3 6A046A106A0468-                 cdecl   itoa, word [FONT.seg], .p1, 4, 16, 0b0100
   132 000006CA [4B07]FF36[0002]E8-
   132 000006D1 39FB83C40A         
   133                                  
   134 000006D6 6A046A106A0468-                 cdecl   itoa, word [FONT.off], .p2, 4, 16, 0b0100
   134 000006DD [5007]FF36[0202]E8-
   134 000006E4 26FB83C40A         
   135 000006E9 68[3D07]E8D1F983C4-             cdecl   puts, .s1
   135 000006F1 02                 
   136                                  
   137                                          ; メモリ情報の取得と表示
   138 000006F2 E8F8FB                          cdecl   get_mem_info         ;get_mem_info
   139                                  
   140 000006F5 66A1[0402]                      mov     eax, [ACPI_DATA.adr]
   141 000006F9 6683F800                        cmp     eax, 0                          ; ACPIのデータがないつまりアドレスがなかったらジャンプ
   142 000006FD 742D                            je      .10E
   143                                  
   144 000006FF 6A046A106A0468-                 cdecl   itoa, ax, .p4, 4, 16, 0b0100    ;下位アドレスの変換
   144 00000706 [6907]50E800FB83C4-
   144 0000070E 0A                 
   145 0000070F 66C1E810                        shr     eax, 16                         ;シフトして上位アドレスに持ってくる
   146 00000713 6A046A106A0468-                 cdecl   itoa, ax, .p3, 4, 16, 0b0100    ;下位アドレスの変換
   146 0000071A [6507]50E8ECFA83C4-
   146 00000722 0A                 
   147 00000723 68[5A07]E897F983C4-             cdecl   puts, .s2                       ; アドレスを表示
   147 0000072B 02                 
   148                                  .10E:
   149                                  
   150 0000072C EB42                            jmp     stage_4
   151                                  
   152 0000072E 337264207374616765-     .s0:     db      "3rd stage...", 0x0A, 0x0D, 0
   152 00000737 2E2E2E0A0D00       
   153                                  
   154 0000073D 20466F6E7420416464-     .s1:    db      " Font Address="
   154 00000746 726573733D         
   155 0000074B 5A5A5A5A3A              .p1:    db      "ZZZZ:"
   156 00000750 5A5A5A5A0A0D00          .p2:    db      "ZZZZ", 0x0A, 0x0D, 0
   157 00000757 0A0D00                          db      0x0A, 0x0D, 0
   158                                  
   159 0000075A 204143504920646174-     .s2     db      " ACPI data="
   159 00000763 613D               
   160 00000765 5A5A5A5A                .p3     db      "ZZZZ"
   161 00000769 5A5A5A5A0A0D00          .p4     db      "ZZZZ", 0x0A, 0x0D, 0
   162                                  
   163                                  stage_4:
   164                                  
   165 00000770 68[4408]E84AF983C4-             cdecl   puts, .s0
   165 00000778 02                 
   166                                  
   167                                          ;A20ゲートの有効化
   168 00000779 FA                              cli                             ; 割込み禁止             
   169 0000077A 68AD00E8D6FD83C402              cdecl   KBC_Cmd_Write, 0xAD     ; キーボード無効化
   170 00000783 68D000E8CDFD83C402              cdecl   KBC_Cmd_Write, 0xD0     ; 出力ポート読み出しコマンド
   171 0000078C 68[8D08]E8A2FD83C4-             cdecl   KBC_Data_Read, .key     ; 出力ポート
   171 00000794 02                 
   172                                  
   173 00000795 8A1E[8D08]                      mov     bl, [.key]              ; bl = key
   174 00000799 80CB02                          or      bl, 0x02                ; bl |= 0x02  A20ゲート有効化
   175                                  
   176 0000079C 68D100E8B4FD83C402              cdecl   KBC_Cmd_Write, 0xD1     ; 出力ポート書き込みコマンド
   177 000007A5 53E86DFD83C402                  cdecl   KBC_Data_Write, bx      ;さっきのbxの設定からA20ゲート有効 
   178                                  
   179 000007AC 68AE00E8A4FD83C402              cdecl   KBC_Cmd_Write, 0xAE     ; キーボード有効化
   180                                  
   181 000007B5 FB                              sti                             ;割り込み許可
   182                                  
   183 000007B6 68[5308]E804F983C4-             cdecl	puts, .s1
   183 000007BE 02                 
   184                                  
   185                                          ;キーボードLEDテスト  
   186 000007BF 68[6808]E8FBF883C4-     	cdecl	puts, .s2					
   186 000007C7 02                 
   187 000007C8 BB0000                  	mov	bx, 0							
   188                                  .10L:											
   189 000007CB B400                    	mov	ah, 0x00						
   190 000007CD CD16                    	int	0x16							
   191                                   
   192 000007CF 3C31                            cmp	al, '1'							
   193 000007D1 7266                    	jb	.10E							 
   194 000007D3 3C33                    	cmp	al, '3'							
   195 000007D5 7762                    	ja	.10E							
   196 000007D7 88C1                    	mov	cl, al							
   197 000007D9 FEC9                    	dec	cl							
   198 000007DB 80E103                  	and	cl, 0x03						
   199 000007DE B80100                  	mov	ax, 0x0001						
   200 000007E1 D3E0                            shl	ax, cl
   201 000007E3 31C3                    	xor	bx, ax							
   202                                  
   203                                  	
   204 000007E5 FA                      	cli										 
   205 000007E6 68AD00E86AFD83C402      	cdecl	KBC_Cmd_Write, 0xAD				
   206                                  
   207 000007EF 68ED00E821FD83C402      	cdecl	KBC_Data_Write, 0xED		
   208 000007F8 68[8D08]E836FD83C4-     	cdecl	KBC_Data_Read, .key			
   208 00000800 02                 
   209                                  
   210 00000801 803E[8D08]FA            	cmp	[.key], byte 0xFA				
   211 00000806 7509                    	jne	.11F						
   212 00000808 53E80AFD83C402          	cdecl	KBC_Data_Write, bx				
   213 0000080F EB1C                    	jmp	.11E							
   214                                  .11F:										
   215 00000811 6A046A106A0268-         	cdecl	itoa, word [.key], .e1, 2, 16, 0b0100
   215 00000818 [8908]FF36[8D08]E8-
   215 0000081F EBF983C40A         
   216 00000824 68[8808]E896F883C4-     	cdecl	puts, .e0					
   216 0000082C 02                 
   217                                  .11E:										 
   218 0000082D 68AE00E823FD83C402      	cdecl	KBC_Cmd_Write, 0xAE				  
   219 00000836 FB                      	sti								
   220 00000837 EB92                    	jmp		.10L						
   221                                  .10E:
   222                                  	
   223 00000839 68[7E08]E881F883C4-     	cdecl	puts, .s3
   223 00000841 02                 
   224                                  
   225 00000842 EB4B                    	jmp     stage_5							
   226                                  
   227 00000844 347468207374616765-     .s0:	db	"4th stage...", 0x0A, 0x0D, 0
   227 0000084D 2E2E2E0A0D00       
   228 00000853 204132302047617465-     .s1:	db	" A20 Gate Enabled.", 0x0A, 0x0D, 0
   228 0000085C 20456E61626C65642E-
   228 00000865 0A0D00             
   229 00000868 204B6579626F617264-     .s2:	db	" Keyboard LED Test...", 0
   229 00000871 204C45442054657374-
   229 0000087A 2E2E2E00           
   230 0000087E 2028646F6E65290A0D-     .s3:	db	" (done)", 0x0A, 0x0D, 0
   230 00000887 00                 
   231 00000888 5B                      .e0:	db	"["
   232 00000889 5A5A5D00                .e1:	db	"ZZ]", 0
   233                                  
   234 0000088D 0000                    .key:	dw	0
   235                                  
   236                                  stage_5:
   237 0000088F 68[BB08]E82BF883C4-             cdecl   puts, .s0
   237 00000897 02                 
   238                                  
   239                                          ; カーネルの読み込み！
   240 00000898 68009C6A106A1068-               cdecl   read_lba, BOOT, BOOT_SECT, KERNEL_SECT, BOOT_END
   240 000008A0 [B800]E80AFD83C408 
   241                                  
   242 000008A8 83F810                          cmp     ax, KERNEL_SECT
   243 000008AB 740C                    .10Q:   jz      .10E
   244 000008AD 68[CA08]E80DF883C4-     .10T:   cdecl   puts, .e0
   244 000008B5 02                 
   245 000008B6 E826F8                          call    reboot
   246                                  .10E:
   247 000008B9 EB28                            jmp     stage_6  
   248                                  
   249 000008BB 357468207374616765-     .s0     db      "5th stage...", 0x0A, 0x0D, 0
   249 000008C4 2E2E2E0A0D00       
   250 000008CA 4661696C757265206C-     .e0     db      "Failure load kernel...", 0x0A, 0x0D, 0
   250 000008D3 6F6164206B65726E65-
   250 000008DC 6C2E2E2E0A0D00     
   251                                  
   252                                  stage_6:
   253 000008E3 68[FB08]E8D7F783C4-             cdecl   puts, .s0
   253 000008EB 02                 
   254                                  
   255                                          ;ユーザーからの入力待ち
   256                                  .10L:   
   257 000008EC B400                            mov     ah, 0x00
   258 000008EE CD16                            int     0x16            ; キー入力待ち
   259 000008F0 3C20                            cmp     al, ' '
   260 000008F2 75F8                            jne     .10L
   261                                  
   262                                          ; ビデオモードの設定
   263 000008F4 B81200                          mov     ax, 0x0012      ; vga 640x480
   264 000008F7 CD10                            int     0x10            ;ビデオモードの設定
   265                                  
   266 000008F9 EB5D                            jmp     stage_7
   267                                  
   268 000008FB 367468207374616765-     .s0	db	"6th stage...", 0x0A, 0x0D, 0x0A, 0x0D
   268 00000904 2E2E2E0A0D0A0D     
   269 0000090B 205B50757368205350-     	db	" [Push SPACE key to protect mode...]", 0x0A, 0x0D, 0      
   269 00000914 414345206B65792074-
   269 0000091D 6F2070726F74656374-
   269 00000926 206D6F64652E2E2E5D-
   269 0000092F 0A0D00             
   270                                  
   271                                  ; セグメントディスクリプタの配列
   272                                  
   273 00000932 00<rept>                ALIGN 4, db 0
   274 00000934 0000000000000000        GDT:            dq      0x00_0_0_0_0_000000_0000        ;NULL
   275 0000093C FFFF0000009ACF00        .cs:            dq      0x00_C_F_9_A_000000_FFFF        ;CODE 4G
   276 00000944 FFFF00000092CF00        .ds:            dq      0x00_C_F_9_2_000000_FFFF        ;DATA 4G
   277                                  .gdt_end:
   278                                  
   279                                  ; セレクタ
   280                                  SEL_CODE        equ     .cs - GDT                       ; コード用セレクタ
   281                                  SEL_DATA        equ     .ds - GDT                       ; データ用
   282                                  
   283                                  ; GDT
   284 0000094C 1700                    GDTR:           dw      GDT.gdt_end - GDT - 1           ; ディスクリプタテーブルのリミット
   285 0000094E [34090000]                              dd      GDT                             ; ディスクリプタテーブルのアドレス
   286                                  ;IDT    ; 割り込みディスクリプタテーブル
   287 00000952 0000                    IDTR:           dw      0               ; リミット
   288 00000954 00000000                                dd      0               ; アドレス
   289                                  
   290                                  stage_7:
   291 00000958 FA                              cli
   292                                          ; GDT ロード
   293 00000959 0F0116[4C09]                    lgdt    [GDTR]
   294 0000095E 0F011E[5209]                    lidt    [IDTR]
   295                                  
   296                                          ; プロテクトモードに移行
   297                                  
   298 00000963 0F20C0                          mov     eax, cr0
   299 00000966 83C801                          or      ax, 1
   300 00000969 0F22C0                          mov     cr0, eax
   301                                  
   302 0000096C EB00                            jmp     $ + 2
   303                                  
   304                                  [BITS 32]
   305 0000096E 66                              DB      0x66                    ; オペランドサイズオーバーライドプレフィックス
   306 0000096F EA[76090000]0800                jmp     SEL_CODE:CODE_32
   307                                  
   308                                  ; 32ビットコード開始
   309                                  CODE_32:
   310                                          ;セレクタを初期化
   311 00000976 66B80800                        mov     ax, SEL_CODE
   312 0000097A 8ED8                            mov     ds, ax
   313 0000097C 8EC0                            mov     es, ax
   314 0000097E 8EE0                            mov     fs, ax
   315 00000980 8EE8                            mov     gs, ax
   316 00000982 8ED0                            mov     ss, ax
   317                                          
   318                                          ; カーネル部をコピー
   319 00000984 B900080000                      mov     ecx, (KERNEL_SIZE) / 4          ; 4バイトごと
   320 00000989 BE009C0000                      mov     esi, BOOT_END                   ;0X0000_9C00
   321 0000098E BF00101000                      mov     edi, KERNEL_LOAD                ;0X0010_1000
   322 00000993 FC                              cld                                     ;dfクリア
   323 00000994 F3A5                            rep movsd                               ;while (--ecx) 
   324                                  
   325 00000996 E9(00101000)                    jmp     KERNEL_LOAD
   326                                  
   327                                  
   328                                  
   329                                  ;パディング     ブートファイルのサイズを定義したとおりにする
   330 0000099B 00<rept>                        times BOOT_SIZE - ($ - $$)  db 0
