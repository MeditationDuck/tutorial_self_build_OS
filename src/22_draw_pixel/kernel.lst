     1                                  %include       "../include/define.s"
     1                              <1> 
     2                              <1> BOOT_SIZE       equ     (1024 * 8)              ;ブートコードサイズ
     3                              <1> KERNEL_SIZE     equ     (1024 * 8)   
     4                              <1> BOOT_LOAD       equ     0x7c00                  ;ブートプログラムのロード位置
     5                              <1>                                                 ;これがないと0x0000にロードされることになってしまうが
     6                              <1>                                                 ;BIOSそこはがすでに使っている領域である
     7                              <1> 
     8                              <1> BOOT_END        equ     (BOOT_LOAD + BOOT_SIZE)
     9                              <1> SECT_SIZE       equ     (512)                   ;セクタサイズ
    10                              <1> BOOT_SECT       equ     (BOOT_SIZE/SECT_SIZE)   ;ブートプログラムのセクタサイズ
    11                              <1> KERNEL_SECT     equ     (KERNEL_SIZE/SECT_SIZE)
    12                              <1> 
    13                              <1> E820_RECORD_SIZE    equ     20
    14                              <1> 
    15                              <1> KERNEL_LOAD     equ     0x0010_1000
    16                              <1> 
    17                              <1>   
     2                                  %include       "../include/macro.s"
     1                              <1> %macro      cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__>>3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 <res 00000002>      <1>         .no     resw    1
    19 00000002 <res 00000002>      <1>         .cyln   resw    1
    20 00000004 <res 00000002>      <1>         .head   resw    1
    21 00000006 <res 00000002>      <1>         .sect   resw    1
    22                              <1> endstruc
    23                              <1> 
     3                                  
     4                                      ORG      KERNEL_LOAD
     5                                  
     6                                  [BITS 32]
     7                                  
     8                                  ; エントリーポイント
     9                                  
    10                                  kernel:
    11                                      
    12                                      ; フォントアドレスを取得
    13 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE
    14 00000005 0FB706                          movzx   eax, word [esi + 0]
    15 00000008 0FB75E02                        movzx   ebx, word [esi + 2]
    16 0000000C C1E004                          shl     eax, 4
    17 0000000F 01D8                            add     eax, ebx
    18 00000011 A3[58010000]                    mov     [FONT_ADR], eax
    19                                  
    20                                  		;---------------------------------------
    21                                  		; フォントの一覧表示
    22                                  		;---------------------------------------
    23 00000016 6A0D6A3FE8B4020000-     		cdecl	draw_font, 63, 13				; // フォントの一覧表示
    23 0000001F 6683C408           
    24 00000023 6A046A3FE835030000-     		cdecl	draw_color_bar, 63, 4			; // カラーバーの表示
    24 0000002C 6683C408           
    25                                  
    26                                  
    27 00000030 6A0D6A3FE89A020000-             cdecl   draw_font, 63, 13
    27 00000039 6683C408           
    28                                  
    29                                  		;---------------------------------------
    30                                  		; 文字列の表示
    31                                  		;---------------------------------------
    32 0000003D 68[46010000]680F01-     		cdecl	draw_str, 25, 14, 0x010F, .s0	; draw_str();
    32 00000045 00006A0E6A19E8C802-
    32 0000004E 00006683C410       
    33                                  
    34                                  		;---------------------------------------
    35                                  		; ピクセルを出力
    36                                  		;---------------------------------------
    37 00000054 6A016A046A08E87803-     		cdecl	draw_pixel,  8, 4, 0x01
    37 0000005D 00006683C40C       
    38 00000063 6A016A056A09E86903-     		cdecl	draw_pixel,  9, 5, 0x01
    38 0000006C 00006683C40C       
    39 00000072 6A026A066A0AE85A03-     		cdecl	draw_pixel, 10, 6, 0x02
    39 0000007B 00006683C40C       
    40 00000081 6A026A076A0BE84B03-     		cdecl	draw_pixel, 11, 7, 0x02
    40 0000008A 00006683C40C       
    41 00000090 6A036A086A0CE83C03-     		cdecl	draw_pixel, 12, 8, 0x03
    41 00000099 00006683C40C       
    42 0000009F 6A036A096A0DE82D03-     		cdecl	draw_pixel, 13, 9, 0x03
    42 000000A8 00006683C40C       
    43 000000AE 6A046A0A6A0EE81E03-     		cdecl	draw_pixel, 14,10, 0x04
    43 000000B7 00006683C40C       
    44 000000BD 6A046A0B6A0FE80F03-     		cdecl	draw_pixel, 15,11, 0x04
    44 000000C6 00006683C40C       
    45                                  
    46 000000CC 6A036A046A0FE80003-     		cdecl	draw_pixel, 15, 4, 0x03
    46 000000D5 00006683C40C       
    47 000000DB 6A036A056A0EE8F102-     		cdecl	draw_pixel, 14, 5, 0x03
    47 000000E4 00006683C40C       
    48 000000EA 6A046A066A0DE8E202-     		cdecl	draw_pixel, 13, 6, 0x04
    48 000000F3 00006683C40C       
    49 000000F9 6A046A076A0CE8D302-     		cdecl	draw_pixel, 12, 7, 0x04
    49 00000102 00006683C40C       
    50 00000108 6A016A086A0BE8C402-     		cdecl	draw_pixel, 11, 8, 0x01
    50 00000111 00006683C40C       
    51 00000117 6A016A096A0AE8B502-     		cdecl	draw_pixel, 10, 9, 0x01
    51 00000120 00006683C40C       
    52 00000126 6A026A0A6A09E8A602-     		cdecl	draw_pixel,  9,10, 0x02
    52 0000012F 00006683C40C       
    53 00000135 6A026A0B6A08E89702-     		cdecl	draw_pixel,  8,11, 0x02
    53 0000013E 00006683C40C       
    54                                  
    55                                  
    56 00000144 EBFE                            jmp     $
    57                                  
    58 00000146 2048656C6C6F2C204B-     .s0         db  " Hello, Kernel! ", 0
    58 0000014F 65726E656C212000   
    59                                  
    60 00000157 00                      ALIGN 4, db 0
    61 00000158 00000000                FONT_ADR: dd 0
    62                                  ;   モジュール
    63                                  %include	"../modules/protect/vga.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	読み込みプレーンの選択
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void vga_set_read_plane(plane);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	plane	: 読み込みプレーン
     8                              <1> ;
     9                              <1> ;■戻り値	: 無し
    10                              <1> ;************************************************************************
    11                              <1> vga_set_read_plane:
    12                              <1> 		;---------------------------------------
    13                              <1> 		; 【スタックフレームの構築】
    14                              <1> 		;---------------------------------------
    15                              <1> 												; EBP+ 8| プレーン（インデックス）
    16                              <1> 												; ------+----------------
    17 0000015C 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    18 0000015D 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    19                              <1> 												; ------+----------------
    20                              <1> 
    21                              <1> 		;---------------------------------------
    22                              <1> 		; 【レジスタの保存】
    23                              <1> 		;---------------------------------------
    24 0000015F 50                  <1> 		push	eax
    25 00000160 52                  <1> 		push	edx
    26                              <1> 
    27                              <1> 		;---------------------------------------
    28                              <1> 		; 読み込みプレーンの選択
    29                              <1> 		;---------------------------------------
    30 00000161 8A6508              <1> 		mov		ah, [ebp + 8]					; AH  = プレーンを選択（3=輝度, 2～0=RGB）
    31 00000164 80E403              <1> 		and		ah, 0x03						; AH &= 0x03; // 余計なビットをマスク
    32 00000167 B004                <1> 		mov		al, 0x04						; AL  = 読み込みプレーン選択レジスタ
    33 00000169 66BACE03            <1> 		mov		dx, 0x03CE						; DX  = グラフィックス制御ポート
    34 0000016D 66EF                <1> 		out		dx, ax							; // ポート出力
    35                              <1> 
    36                              <1> 		;---------------------------------------
    37                              <1> 		; 【レジスタの復帰】
    38                              <1> 		;---------------------------------------
    39 0000016F 5A                  <1> 		pop		edx
    40 00000170 58                  <1> 		pop		eax
    41                              <1> 
    42                              <1> 		;---------------------------------------
    43                              <1> 		; 【スタックフレームの破棄】
    44                              <1> 		;---------------------------------------
    45 00000171 89EC                <1> 		mov		esp, ebp
    46 00000173 5D                  <1> 		pop		ebp
    47                              <1> 
    48 00000174 C3                  <1> 		ret
    49                              <1> 
    50                              <1> ;************************************************************************
    51                              <1> ;	書き込みプレーンを選択
    52                              <1> ;========================================================================
    53                              <1> ;■書式		: void vga_set_write_plane(plane);
    54                              <1> ;
    55                              <1> ;■引数
    56                              <1> ;	plane	: 書き込みプレーン
    57                              <1> ;
    58                              <1> ;■戻り値	: 無し
    59                              <1> ;************************************************************************
    60                              <1> vga_set_write_plane:
    61                              <1> 		;---------------------------------------
    62                              <1> 		; 【スタックフレームの構築】
    63                              <1> 		;---------------------------------------
    64                              <1> 												; EBP+ 8| プレーン（ビット指定）
    65                              <1> 												; ------+----------------
    66 00000175 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    67 00000176 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    68                              <1> 												; ------+----------------
    69                              <1> 
    70                              <1> 		;---------------------------------------
    71                              <1> 		; 【レジスタの保存】
    72                              <1> 		;---------------------------------------
    73 00000178 50                  <1> 		push	eax
    74 00000179 52                  <1> 		push	edx
    75                              <1> 
    76                              <1> 		;---------------------------------------
    77                              <1> 		; 書き込みプレーンの選択
    78                              <1> 		;---------------------------------------
    79 0000017A 8A6508              <1> 		mov		ah, [ebp + 8]					; AH = 書き込みプレーンを指定(Bit:----IRGB)
    80 0000017D 80E40F              <1> 		and		ah, 0x0F						; AH = 0x0F; // 余計なビットをマスク
    81 00000180 B002                <1> 		mov		al, 0x02						; AL = 書き込みプレーン選択
    82 00000182 66BAC403            <1> 		mov		dx, 0x03C4						; DX = シーケンサ制御ポート
    83 00000186 66EF                <1> 		out		dx, ax							; // ポート出力
    84                              <1> 
    85                              <1> 		;---------------------------------------
    86                              <1> 		; 【レジスタの復帰】
    87                              <1> 		;---------------------------------------
    88 00000188 5A                  <1> 		pop		edx
    89 00000189 58                  <1> 		pop		eax
    90                              <1> 
    91                              <1> 		;---------------------------------------
    92                              <1> 		; 【スタックフレームの破棄】
    93                              <1> 		;---------------------------------------
    94 0000018A 89EC                <1> 		mov		esp, ebp
    95 0000018C 5D                  <1> 		pop		ebp
    96                              <1> 
    97 0000018D C3                  <1> 		ret
    98                              <1> 
    99                              <1> ;************************************************************************
   100                              <1> ;	フォントの書き込み
   101                              <1> ;========================================================================
   102                              <1> ;■書式		: void vram_font_copy(font, vram, plane, color);
   103                              <1> ;
   104                              <1> ;■引数
   105                              <1> ;	font	: FONTアドレス
   106                              <1> ;	vram	: VRAMアドレス
   107                              <1> ;	plane	: 出力プレーン（１つのプレーンのみをビットで指定）
   108                              <1> ;	color	: 描画色
   109                              <1> ;
   110                              <1> ;■戻り値	: 無し
   111                              <1> ;************************************************************************
   112                              <1> vram_font_copy:
   113                              <1> 		;---------------------------------------
   114                              <1> 		; 【スタックフレームの構築】
   115                              <1> 		;---------------------------------------
   116                              <1> 												; EBP+20| 色（背景/前景色）
   117                              <1> 												; EBP+16| プレーン（ビット指定）
   118                              <1> 												; EBP+12| VRAMアドレス
   119                              <1> 												; EBP+ 8| FONTアドレス
   120                              <1> 												; ------+----------------
   121 0000018E 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   122 0000018F 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   123                              <1> 												; ------+----------------
   124                              <1> 
   125                              <1> 		;---------------------------------------
   126                              <1> 		; 【レジスタの保存】
   127                              <1> 		;---------------------------------------
   128 00000191 50                  <1> 		push	eax
   129 00000192 53                  <1> 		push	ebx
   130 00000193 51                  <1> 		push	ecx
   131 00000194 52                  <1> 		push	edx
   132 00000195 56                  <1> 		push	esi
   133 00000196 57                  <1> 		push	edi
   134                              <1> 
   135                              <1> 		;---------------------------------------
   136                              <1> 		; 【処理の開始】
   137                              <1> 		;---------------------------------------
   138 00000197 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = フォントアドレス;
   139 0000019A 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   140 0000019D 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   141 000001A1 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 色;
   142                              <1> 
   143 000001A5 84C7                <1> 		test	bh, al							; ZF = (背景色 & プレーン);
   144 000001A7 0F94C6              <1> 		setz	dh								; AH = ZF ? 0x01 : 0x00
   145 000001AA FECE                <1> 		dec		dh								; AH--; // 0x00 or 0xFF
   146                              <1> 
   147 000001AC 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   148 000001AE 0F94C2              <1> 		setz	dl								; AL = ZF ? 0x01 : 0x00
   149 000001B1 FECA                <1> 		dec		dl								; AL--; // 0x00 or 0xFF
   150                              <1> 
   151                              <1> 		;---------------------------------------
   152                              <1> 		; 16ドットフォントのコピー
   153                              <1> 		;---------------------------------------
   154 000001B3 FC                  <1> 		cld										; DF  = 0; // アドレス加算
   155                              <1> 
   156 000001B4 B910000000          <1> 		mov		ecx, 16							; ECX = 16; // 16ドット
   157                              <1> .10L:											; do
   158                              <1> 												; {
   159                              <1> 		;---------------------------------------
   160                              <1> 		; フォントマスクの作成
   161                              <1> 		;---------------------------------------
   162 000001B9 AC                  <1> 		lodsb									;   AL  = *ESI++; //  フォント
   163 000001BA 88C4                <1> 		mov		ah, al							;   AH ~= AL;     // !フォント（ビット反転）
   164 000001BC F6D4                <1> 		not		ah								;   
   165                              <1> 
   166                              <1> 		;---------------------------------------
   167                              <1> 		; 前景色
   168                              <1> 		;---------------------------------------
   169 000001BE 20D0                <1> 		and		al, dl							;   AL = 前景色 & フォント;
   170                              <1> 
   171                              <1> 		;---------------------------------------
   172                              <1> 		; 背景色
   173                              <1> 		;---------------------------------------
   174 000001C0 F7C310000000        <1> 		test	ebx, 0x0010						;   if (透過モード)
   175 000001C6 7404                <1> 		jz		.11F							;   {
   176 000001C8 2227                <1> 		and		ah, [edi]						;     AH = !フォント & [EDI] // 現在値
   177 000001CA EB02                <1> 		jmp		.11E							;   }
   178                              <1> .11F:											;   else
   179                              <1> 												;   {
   180 000001CC 20F4                <1> 		and		ah, dh							;     AH = !フォント & 背景色;
   181                              <1> .11E:											;   }
   182                              <1> 
   183                              <1> 		;---------------------------------------
   184                              <1> 		; 前景色と背景色を合成
   185                              <1> 		;---------------------------------------
   186 000001CE 08E0                <1> 		or		al, ah							;   AL  = 背景 | 前景;
   187                              <1> 
   188                              <1> 		;---------------------------------------
   189                              <1> 		; 新しい値を出力
   190                              <1> 		;---------------------------------------
   191 000001D0 8807                <1> 		mov		[edi], al						;   [EDI] = AL; // プレーンに書き込む
   192                              <1> 
   193 000001D2 83C750              <1> 		add		edi, 80							;   EDI += 80;
   194 000001D5 E2E2                <1> 		loop	.10L							; } while (--ECX);
   195                              <1> .10E:											; 
   196                              <1> 
   197                              <1> 		;---------------------------------------
   198                              <1> 		; 【レジスタの復帰】
   199                              <1> 		;---------------------------------------
   200 000001D7 5F                  <1> 		pop		edi
   201 000001D8 5E                  <1> 		pop		esi
   202 000001D9 5A                  <1> 		pop		edx
   203 000001DA 59                  <1> 		pop		ecx
   204 000001DB 5B                  <1> 		pop		ebx
   205 000001DC 58                  <1> 		pop		eax
   206                              <1> 
   207                              <1> 		;---------------------------------------
   208                              <1> 		; 【スタックフレームの破棄】
   209                              <1> 		;---------------------------------------
   210 000001DD 89EC                <1> 		mov		esp, ebp
   211 000001DF 5D                  <1> 		pop		ebp
   212                              <1> 
   213 000001E0 C3                  <1> 		ret
   214                              <1> 
   215                              <1> ;************************************************************************
   216                              <1> ;	ビットパターンの書き込み
   217                              <1> ;========================================================================
   218                              <1> ;■書式		: void vram_bit_copy(bit, vram, flag);
   219                              <1> ;
   220                              <1> ;■引数
   221                              <1> ;	bit		: 出力ビットパターン
   222                              <1> ;	vram	: VRAMアドレス
   223                              <1> ;	flag	: 1:セット, 0:クリア
   224                              <1> ;
   225                              <1> ;■戻り値	: 無し
   226                              <1> ;************************************************************************
   227                              <1> vram_bit_copy:
   228                              <1> 		;---------------------------------------
   229                              <1> 		; 【スタックフレームの構築】
   230                              <1> 		;---------------------------------------
   231                              <1> 												; EBP+20| 色（背景/前景色）
   232                              <1> 												; EBP+16| プレーン（ビット指定）
   233                              <1> 												; EBP+12| VRAMアドレス
   234                              <1> 												; EBP+ 8| 出力ビットパターン
   235                              <1> 												; ------+----------------
   236 000001E1 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   237 000001E2 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   238                              <1> 												; ------+----------------
   239                              <1> 
   240                              <1> 		;---------------------------------------
   241                              <1> 		; 【レジスタの保存】
   242                              <1> 		;---------------------------------------
   243 000001E4 50                  <1> 		push	eax
   244 000001E5 53                  <1> 		push	ebx
   245 000001E6 57                  <1> 		push	edi
   246                              <1> 
   247                              <1> 		;---------------------------------------
   248                              <1> 		; 【処理の開始】
   249                              <1> 		;---------------------------------------
   250 000001E7 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   251 000001EA 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   252 000001EE 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 表示色;
   253                              <1> 
   254 000001F2 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   255 000001F4 0F94C3              <1> 		setz	bl								; BL = ZF ? 0x01 : 0x00
   256 000001F7 FECB                <1> 		dec		bl								; BL--; // 0x00 or 0xFF
   257                              <1> 
   258                              <1> 		;---------------------------------------
   259                              <1> 		; マスクデータの作成
   260                              <1> 		;---------------------------------------
   261 000001F9 8A4508              <1> 		mov		al, [ebp + 8]					; AL = 出力ビットパターン;
   262 000001FC 88C4                <1> 		mov		ah, al							; AH ~= AL;     // !出力ビットパターン（ビット反転）
   263 000001FE F6D4                <1> 		not		ah								; 
   264                              <1> 
   265                              <1> 		;---------------------------------------
   266                              <1> 		; 現在値の出力を取得
   267                              <1> 		;---------------------------------------
   268 00000200 2227                <1> 		and		ah, [edi]						; AH  = 現在値 & !出力ビットパターン
   269 00000202 20D8                <1> 		and		al, bl							; AL  = 表示色 &  出力ビットパターン
   270 00000204 08E0                <1> 		or		al, ah							; AL |= AH;
   271                              <1> 
   272                              <1> 		;---------------------------------------
   273                              <1> 		; 新しい値を出力
   274                              <1> 		;---------------------------------------
   275 00000206 8807                <1> 		mov		[edi], al						; [EDI] = BL; // プレーンに書き込む
   276                              <1> 
   277                              <1> 		;---------------------------------------
   278                              <1> 		; 【レジスタの復帰】
   279                              <1> 		;---------------------------------------
   280 00000208 5F                  <1> 		pop		edi
   281 00000209 5B                  <1> 		pop		ebx
   282 0000020A 58                  <1> 		pop		eax
   283                              <1> 
   284                              <1> 		;---------------------------------------
   285                              <1> 		; 【スタックフレームの破棄】
   286                              <1> 		;---------------------------------------
   287 0000020B 89EC                <1> 		mov		esp, ebp
   288 0000020D 5D                  <1> 		pop		ebp
   289                              <1> 
   290 0000020E C3                  <1> 		ret
   291                              <1> 
    64                                  %include	"../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1> 		;---------------------------------------
     3                              <1> 		; 【スタックフレームの構築】
     4                              <1> 		;---------------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+20| 文字
     7                              <1> 												; EBP+16| 色
     8                              <1> 												; EBP+12| Y（行）
     9                              <1> 												; EBP+ 8| X（列）
    10                              <1> 												; ------+----------------
    11 0000020F 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    12 00000210 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    13                              <1> 												; ------+----------------
    14                              <1> 
    15                              <1> 		;---------------------------------------
    16                              <1> 		; 【レジスタの保存】
    17                              <1> 		;---------------------------------------
    18 00000212 50                  <1> 		push	eax
    19 00000213 53                  <1> 		push	ebx
    20 00000214 51                  <1> 		push	ecx
    21 00000215 52                  <1> 		push	edx
    22 00000216 56                  <1> 		push	esi
    23 00000217 57                  <1> 		push	edi
    24                              <1> 		;---------------------------------------
    25                              <1> 		; テストアンドセット
    26                              <1> 		;---------------------------------------
    27                              <1> %ifdef	USE_TEST_AND_SET
    28                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
    29                              <1> %endif
    30                              <1> 
    31                              <1>         ;コピー元のアドレスを取得
    32 00000218 0FB67514            <1>         movzx   esi, byte [ebp +20]
    33 0000021C C1E604              <1>         shl     esi, 4
    34 0000021F 0335[58010000]      <1>         add     esi, [FONT_ADR]
    35                              <1> 
    36                              <1>         ;コピー先のアドレスを取得
    37 00000225 8B7D0C              <1>         mov     edi, [ebp +12]
    38 00000228 C1E708              <1>         shl     edi, 8
    39 0000022B 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]
    40 00000232 037D08              <1>         add     edi, [ebp + 8]
    41                              <1> 
    42                              <1>         ;一文字分のフォントを出力
    43 00000235 0FB75D10            <1> 		movzx	ebx, word [ebp +16]				; // 表示色
    44                              <1> 
    45 00000239 6A03E81CFFFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 読み込みプレーン：輝度(I)
    45 00000242 C404                <1>
    46 00000244 6A08E82AFFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 書き込みプレーン：輝度(I)
    46 0000024D C404                <1>
    47 0000024F 536A085756E835FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x08, ebx
    47 00000258 FF6683C410          <1>
    48                              <1> 
    49 0000025D 6A02E8F8FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 読み込みプレーン：赤(R)
    49 00000266 C404                <1>
    50 00000268 6A04E806FFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 書き込みプレーン：赤(R)
    50 00000271 C404                <1>
    51 00000273 536A045756E811FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x04, ebx
    51 0000027C FF6683C410          <1>
    52                              <1> 
    53 00000281 6A01E8D4FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 読み込みプレーン：緑(G)
    53 0000028A C404                <1>
    54 0000028C 6A02E8E2FEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 書き込みプレーン：緑(G)
    54 00000295 C404                <1>
    55 00000297 536A025756E8EDFEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x02, ebx
    55 000002A0 FF6683C410          <1>
    56                              <1> 
    57 000002A5 6A00E8B0FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 読み込みプレーン：青(B)
    57 000002AE C404                <1>
    58 000002B0 6A01E8BEFEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 書き込みプレーン：青(B)
    58 000002B9 C404                <1>
    59 000002BB 536A015756E8C9FEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x01, ebx
    59 000002C4 FF6683C410          <1>
    60                              <1> 
    61                              <1> %ifdef	USE_TEST_AND_SET
    62                              <1> 		;---------------------------------------
    63                              <1> 		; テストアンドセット
    64                              <1> 		;---------------------------------------
    65                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
    66                              <1> %endif
    67                              <1> 
    68                              <1> 		;---------------------------------------
    69                              <1> 		; 【レジスタの復帰】
    70                              <1> 		;---------------------------------------
    71 000002C9 5F                  <1> 		pop		edi
    72 000002CA 5E                  <1> 		pop		esi
    73 000002CB 5A                  <1> 		pop		edx
    74 000002CC 59                  <1> 		pop		ecx
    75 000002CD 5B                  <1> 		pop		ebx
    76 000002CE 58                  <1> 		pop		eax
    77                              <1> 
    78                              <1> 		;---------------------------------------
    79                              <1> 		; 【スタックフレームの破棄】
    80                              <1> 		;---------------------------------------
    81 000002CF 89EC                <1> 		mov		esp, ebp
    82 000002D1 5D                  <1> 		pop		ebp
    83                              <1> 
    84 000002D2 C3                  <1> 		ret
    85                              <1> 
    86                              <1> %ifdef USE_TEST_AND_SET
    87                              <1> ALIGN 4, db 0
    88                              <1> IN_USE:	dd	0
    89                              <1> %endif
    90                              <1> 
    65                                  %include	"../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1> 		;---------------------------------------
     3                              <1> 		; 【スタックフレームの構築】
     4                              <1> 		;---------------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+12| Y（行）
     7                              <1> 												; EBP+ 8| X（列）
     8                              <1> 												; ---------------
     9 000002D3 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    10 000002D4 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    11                              <1> 												; ---------------
    12                              <1> 
    13                              <1> 		;---------------------------------------
    14                              <1> 		; 【レジスタの保存】
    15                              <1> 		;---------------------------------------
    16 000002D6 50                  <1> 		push	eax
    17 000002D7 53                  <1> 		push	ebx
    18 000002D8 51                  <1> 		push	ecx
    19 000002D9 52                  <1> 		push	edx
    20 000002DA 56                  <1> 		push	esi
    21 000002DB 57                  <1> 		push	edi
    22                              <1> 
    23                              <1> 		;---------------------------------------
    24                              <1> 		; 表示位置
    25                              <1> 		;---------------------------------------
    26 000002DC 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
    27 000002DF 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
    28                              <1> 
    29 000002E2 B900000000          <1>         mov     ecx, 0
    30 000002E7 81F900010000        <1> .10L:   cmp     ecx, 256
    31 000002ED 731F                <1>         jae     .10E
    32                              <1> 
    33 000002EF 89C8                <1>         mov     eax, ecx
    34 000002F1 83E00F              <1>         and     eax, 0x0F
    35 000002F4 01F0                <1>         add     eax, esi            ;列 0 => 11110000 として端っこによるようにする
    36                              <1> 
    37 000002F6 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
    38 000002F8 C1EB04              <1> 		shr		ebx, 4							;   EBX /= 16
    39 000002FB 01FB                <1> 		add		ebx, edi						;   EBX += Y;       ;行 １６で割ったときに商がいくつか
    40                              <1> 
    41 000002FD 516A075350E808FFFF- <1> 		cdecl	draw_char, eax, ebx, 0x07, ecx	;   draw_char();
    41 00000306 FF6683C410          <1>
    42                              <1> 
    43 0000030B 41                  <1> 		inc		ecx								;   // for (... ECX++)
    44 0000030C EBD9                <1> 		jmp		.10L							; 
    45                              <1> .10E:											; }
    46                              <1> 
    47                              <1> 		;---------------------------------------
    48                              <1> 		; 【レジスタの復帰】
    49                              <1> 		;---------------------------------------
    50 0000030E 5F                  <1> 		pop		edi
    51 0000030F 5E                  <1> 		pop		esi
    52 00000310 5A                  <1> 		pop		edx
    53 00000311 59                  <1> 		pop		ecx
    54 00000312 5B                  <1> 		pop		ebx
    55 00000313 58                  <1> 		pop		eax
    56                              <1> 
    57                              <1> 		;---------------------------------------
    58                              <1> 		; 【スタックフレームの破棄】
    59                              <1> 		;---------------------------------------
    60 00000314 89EC                <1> 		mov		esp, ebp
    61 00000316 5D                  <1> 		pop		ebp
    62                              <1> 
    63 00000317 C3                  <1> 		ret
    64                              <1> 
    66                                  %include	"../modules/protect/draw_str.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	文字列の表示
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_str(col, row, color, p);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	col		: 列
     8                              <1> ;	row		: 行
     9                              <1> ;	color	: 描画色
    10                              <1> ;	p		: 文字列のアドレス
    11                              <1> ;
    12                              <1> ;■戻り値	: 無し
    13                              <1> ;************************************************************************
    14                              <1> draw_str:
    15                              <1> 		;---------------------------------------
    16                              <1> 		; 【スタックフレームの構築】
    17                              <1> 		;---------------------------------------
    18                              <1> 												; ------|--------
    19                              <1> 												; EBP+20| *p（文字列のアドレス）
    20                              <1> 												; EBP+16| color（色）
    21                              <1> 												; EBP+12| row（行）
    22                              <1> 												; EBP+ 8| col（列）
    23                              <1> 												; ---------------
    24 00000318 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    25 00000319 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    26                              <1> 												; ---------------
    27                              <1> 
    28                              <1> 		;---------------------------------------
    29                              <1> 		; 【レジスタの保存】
    30                              <1> 		;---------------------------------------
    31 0000031B 50                  <1> 		push	eax
    32 0000031C 53                  <1> 		push	ebx
    33 0000031D 51                  <1> 		push	ecx
    34 0000031E 52                  <1> 		push	edx
    35 0000031F 56                  <1> 		push	esi
    36                              <1> 
    37                              <1> 		;---------------------------------------
    38                              <1> 		; 文字列の表示
    39                              <1> 		;---------------------------------------
    40 00000320 8B4D08              <1> 		mov		ecx, [ebp + 8]					; ECX = 列;
    41 00000323 8B550C              <1> 		mov		edx, [ebp +12]					; EDX = 行;
    42 00000326 0FB75D10            <1> 		movzx	ebx, word [ebp + 16]			; EBX = 表示色;
    43 0000032A 8B7514              <1> 		mov		esi, [ebp +20]					; ESI = 文字列のアドレス;
    44                              <1> 
    45 0000032D FC                  <1> 		cld										; DF = 0; // アドレス加算
    46                              <1> .10L:											; do
    47                              <1> 												; {
    48 0000032E AC                  <1> 		lodsb									;   AL = *ESI++; // 文字を取得
    49 0000032F 3C00                <1> 		cmp		al, 0							;   if (0 == AL)
    50 00000331 7425                <1> 		je		.10E							;     break;
    51                              <1> 
    52                              <1> 		;---------------------------------------
    53                              <1> 		; 1文字表示
    54                              <1> 		;---------------------------------------
    55                              <1> %ifdef	USE_SYSTEM_CALL
    56                              <1> 		int		0x81							;   sys_call(1, X, Y, 色, 文字);
    57                              <1> %else
    58 00000333 50535251E8D3FEFFFF- <1> 		cdecl	draw_char, ecx, edx, ebx, eax	;   draw_char();
    58 0000033C 6683C410            <1>
    59                              <1> %endif
    60                              <1> 
    61                              <1> 		; 次の文字の位置を調整
    62 00000340 41                  <1> 		inc		ecx								;   ECX++;           // 列を加算
    63 00000341 83F950              <1> 		cmp		ecx, 80							;   if (80 <= ECX)   // 80文字以上？
    64 00000344 7C10                <1> 		jl		.12E							;   {
    65 00000346 B900000000          <1> 		mov		ecx, 0							;     ECX = 0;       // 列を初期化
    66 0000034B 42                  <1> 		inc		edx								;     EDX++;         // 行を加算
    67 0000034C 83FA1E              <1> 		cmp		edx, 30							;     if (30 <= EDX) // 30行以上？
    68 0000034F 7C05                <1> 		jl		.12E							;     {
    69 00000351 BA00000000          <1> 		mov		edx, 0							;       EDX = 0;     // 行を初期化
    70                              <1> 												;     }
    71                              <1> .12E:											;   }
    72 00000356 EBD6                <1> 		jmp		.10L							;   
    73                              <1> .10E:											; } while (1);
    74                              <1> 
    75                              <1> 		;---------------------------------------
    76                              <1> 		; 【レジスタの復帰】
    77                              <1> 		;---------------------------------------
    78 00000358 5E                  <1> 		pop		esi
    79 00000359 5A                  <1> 		pop		edx
    80 0000035A 59                  <1> 		pop		ecx
    81 0000035B 5B                  <1> 		pop		ebx
    82 0000035C 58                  <1> 		pop		eax
    83                              <1> 
    84                              <1> 		;---------------------------------------
    85                              <1> 		; 【スタックフレームの破棄】
    86                              <1> 		;---------------------------------------
    87 0000035D 89EC                <1> 		mov		esp, ebp
    88 0000035F 5D                  <1> 		pop		ebp
    89                              <1> 
    90 00000360 C3                  <1> 		ret
    91                              <1> 
    67                                  %include	"../modules/protect/draw_color_bar.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	カラーバーの表示
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_color_bar(col, row);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	col		: 列
     8                              <1> ;	row		: 行
     9                              <1> ;
    10                              <1> ;■戻り値	: 無し
    11                              <1> ;************************************************************************
    12                              <1> draw_color_bar:
    13                              <1> 		;---------------------------------------
    14                              <1> 		; 【スタックフレームの構築】
    15                              <1> 		;---------------------------------------
    16                              <1> 												; ------|--------
    17                              <1> 												; EBP+ 8| X（列）
    18                              <1> 												; EBP+12| Y（行）
    19                              <1> 												; ---------------
    20 00000361 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    21 00000362 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    22                              <1> 												; ---------------
    23                              <1> 		;---------------------------------------
    24                              <1> 		; 【レジスタの保存】
    25                              <1> 		;---------------------------------------
    26 00000364 50                  <1> 		push	eax
    27 00000365 53                  <1> 		push	ebx
    28 00000366 51                  <1> 		push	ecx
    29 00000367 52                  <1> 		push	edx
    30 00000368 56                  <1> 		push	esi
    31 00000369 57                  <1> 		push	edi
    32                              <1> 
    33                              <1> 		;---------------------------------------
    34                              <1> 		; 表示位置
    35                              <1> 		;---------------------------------------
    36 0000036A 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
    37 0000036D 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
    38                              <1> 
    39                              <1> 		;---------------------------------------
    40                              <1> 		; カラーバーを表示
    41                              <1> 		;---------------------------------------
    42 00000370 B900000000          <1> 		mov		ecx, 0							; for (ECX = 0;
    43 00000375 83F910              <1> .10L:	cmp		ecx, 16							;      ECX < 16;
    44 00000378 732E                <1> 		jae		.10E							; 
    45                              <1> 												;      ECX++)
    46                              <1> 												; {
    47                              <1> 												;   // 桁位置の計算
    48 0000037A 89C8                <1> 		mov		eax, ecx						;   EAX  = ECX;
    49 0000037C 83E001              <1> 		and		eax, 0x01						;   EAX &= 0x01;
    50 0000037F C1E003              <1> 		shl		eax, 3							;   EAX *= 8;  // 8文字分乗算
    51 00000382 01F0                <1> 		add		eax, esi						;   EAX += X;
    52                              <1> 												;   
    53                              <1> 												;   // 行位置の計算
    54 00000384 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
    55 00000386 D1EB                <1> 		shr		ebx, 1							;   EBX /= 2
    56 00000388 01FB                <1> 		add		ebx, edi						;   EBX += Y;
    57                              <1> 												;   
    58                              <1> 												;   // 表示色の取得
    59 0000038A 89CA                <1> 		mov		edx, ecx						;   EDX  = ECX;
    60 0000038C D1E2                <1> 		shl		edx, 1							;   EDX *= 2;
    61 0000038E 8B92[B7030000]      <1> 		mov		edx, [.t0 + edx]				;   EDX += Y;
    62                              <1> 
    63 00000394 68[B2030000]525350- <1> 		cdecl	draw_str, eax, ebx, edx, .s0	;   draw_str();
    63 0000039C E877FFFFFF6683C410  <1>
    64                              <1> 
    65 000003A5 41                  <1> 		inc		ecx								;   // for (... ECX++)
    66 000003A6 EBCD                <1> 		jmp		.10L							; 
    67                              <1> .10E:											; }
    68                              <1> 
    69                              <1> 		;---------------------------------------
    70                              <1> 		; 【レジスタの復帰】
    71                              <1> 		;---------------------------------------
    72 000003A8 5F                  <1> 		pop		edi
    73 000003A9 5E                  <1> 		pop		esi
    74 000003AA 5A                  <1> 		pop		edx
    75 000003AB 59                  <1> 		pop		ecx
    76 000003AC 5B                  <1> 		pop		ebx
    77 000003AD 58                  <1> 		pop		eax
    78                              <1> 
    79                              <1> 		;---------------------------------------
    80                              <1> 		; 【スタックフレームの破棄】
    81                              <1> 		;---------------------------------------
    82 000003AE 89EC                <1> 		mov		esp, ebp
    83 000003B0 5D                  <1> 		pop		ebp
    84                              <1> 
    85 000003B1 C3                  <1> 		ret
    86                              <1> 
    87 000003B2 2020202000          <1> .s0:	db '    ', 0						; 8文字分のスペース（表示色だけを変更）
    88                              <1> 
    89 000003B7 00000008            <1> .t0:	dw	0x0000, 0x0800						; カラーバーの背景色
    90 000003BB 00010009            <1> 		dw	0x0100, 0x0900
    91 000003BF 0002000A            <1> 		dw	0x0200, 0x0A00
    92 000003C3 0003000B            <1> 		dw	0x0300, 0x0B00
    93 000003C7 0004000C            <1> 		dw	0x0400, 0x0C00
    94 000003CB 0005000D            <1> 		dw	0x0500, 0x0D00
    95 000003CF 0006000E            <1> 		dw	0x0600, 0x0E00
    96 000003D3 0007000F            <1> 		dw	0x0700, 0x0F00
    97                              <1> 
    68                                  %include	"../modules/protect/draw_pixel.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	ピクセルの描画
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_pixel(X, Y, color);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	X		: X座標
     8                              <1> ;	Y		: Y座標
     9                              <1> ;	color	: 描画色
    10                              <1> ;
    11                              <1> ;■戻り値	: 無し
    12                              <1> ;************************************************************************
    13                              <1> draw_pixel:
    14                              <1> 		;---------------------------------------
    15                              <1> 		; 【スタックフレームの構築】
    16                              <1> 		;---------------------------------------
    17                              <1> 												; ------|--------
    18                              <1> 												; EBP+16| 色
    19                              <1> 												; EBP+12| Y
    20                              <1> 												; EBP+ 8| X
    21                              <1> 												; ------|--------
    22 000003D7 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    23 000003D8 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    24                              <1> 												; ------+--------
    25                              <1> 		;---------------------------------------
    26                              <1> 		; 【レジスタの保存】
    27                              <1> 		;---------------------------------------
    28 000003DA 50                  <1> 		push	eax
    29 000003DB 53                  <1> 		push	ebx
    30 000003DC 51                  <1> 		push	ecx
    31 000003DD 57                  <1> 		push	edi
    32                              <1>         
    33                              <1> 		;---------------------------------------
    34                              <1> 		; Y座標を80倍する（640/8）
    35                              <1> 		;---------------------------------------
    36                              <1> 
    37 000003DE 8B7D0C              <1>         mov     edi, [ebp +12]
    38 000003E1 C1E704              <1>         shl     edi, 4
    39 000003E4 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000]
    40                              <1> 
    41 000003EB 8B5D08              <1>         mov     ebx, [ebp + 8]
    42 000003EE 89D9                <1>         mov     ecx, ebx
    43 000003F0 C1EB03              <1>         shr     ebx, 3
    44 000003F3 01DF                <1>         add     edi, ebx
    45                              <1> 
    46 000003F5 83E107              <1>         and     ecx, 0x07
    47 000003F8 BB80000000          <1>         mov     ebx, 0x80
    48 000003FD D3EB                <1>         shr     ebx, cl
    49                              <1> 
    50 000003FF 8B4D10              <1>         mov     ecx, [ebp +16]
    51                              <1> 
    52                              <1> %ifdef	USE_TEST_AND_SET
    53                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
    54                              <1> %endif
    55                              <1> 
    56                              <1> 		;---------------------------------------
    57                              <1> 		; プレーン毎に出力
    58                              <1> 		;---------------------------------------
    59 00000402 6A03E853FDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 輝度(I)プレーンを選択
    59 0000040B C404                <1>
    60 0000040D 6A08E861FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 輝度(I)プレーンを選択
    60 00000416 C404                <1>
    61 00000418 516A085753E8BFFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x08, ecx
    61 00000421 FF6683C410          <1>
    62                              <1> 
    63 00000426 6A02E82FFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 赤(R)プレーンを選択
    63 0000042F C404                <1>
    64 00000431 6A04E83DFDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 赤(R)プレーンを選択
    64 0000043A C404                <1>
    65 0000043C 516A045753E89BFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x04, ecx
    65 00000445 FF6683C410          <1>
    66                              <1> 
    67 0000044A 6A01E80BFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 緑(G)プレーンを選択
    67 00000453 C404                <1>
    68 00000455 6A02E819FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 緑(G)プレーンを選択
    68 0000045E C404                <1>
    69 00000460 516A025753E877FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x02, ecx
    69 00000469 FF6683C410          <1>
    70                              <1> 
    71 0000046E 6A00E8E7FCFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 青(B)プレーンを選択
    71 00000477 C404                <1>
    72 00000479 6A01E8F5FCFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 青(B)プレーンを選択
    72 00000482 C404                <1>
    73 00000484 516A015753E853FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x01, ecx
    73 0000048D FF6683C410          <1>
    74                              <1> 
    75                              <1> 
    76                              <1> %ifdef	USE_TEST_AND_SET
    77                              <1> 		;---------------------------------------
    78                              <1> 		; テストアンドセット
    79                              <1> 		;---------------------------------------
    80                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
    81                              <1> %endif
    82                              <1> 
    83                              <1> 		;---------------------------------------
    84                              <1> 		; 【レジスタの復帰】
    85                              <1> 		;---------------------------------------
    86 00000492 5F                  <1> 		pop		edi
    87 00000493 59                  <1> 		pop		ecx
    88 00000494 5B                  <1> 		pop		ebx
    89 00000495 58                  <1> 		pop		eax
    90                              <1> 
    91                              <1> 		;---------------------------------------
    92                              <1> 		; 【スタックフレームの破棄】
    93                              <1> 		;---------------------------------------
    94 00000496 89EC                <1> 		mov		esp, ebp
    95 00000498 5D                  <1> 		pop		ebp
    96                              <1> 
    97 00000499 C3                  <1> 		ret
    98                              <1> 
    69                                  
    70                                  ; パディング
    71                                  
    72 0000049A 00<rept>                    times KERNEL_SIZE - ($ - $$) db 0x00
    73                                      
