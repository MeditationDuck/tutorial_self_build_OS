     1                                  %include       "../include/define.s"
     1                              <1> 
     2                              <1> BOOT_SIZE       equ     (1024 * 8)              ;ブートコードサイズ
     3                              <1> KERNEL_SIZE     equ     (1024 * 8)   
     4                              <1> BOOT_LOAD       equ     0x7c00                  ;ブートプログラムのロード位置
     5                              <1>                                                 ;これがないと0x0000にロードされることになってしまうが
     6                              <1>                                                 ;BIOSそこはがすでに使っている領域である
     7                              <1> 
     8                              <1> BOOT_END        equ     (BOOT_LOAD + BOOT_SIZE)
     9                              <1> SECT_SIZE       equ     (512)                   ;セクタサイズ
    10                              <1> BOOT_SECT       equ     (BOOT_SIZE/SECT_SIZE)   ;ブートプログラムのセクタサイズ
    11                              <1> KERNEL_SECT     equ     (KERNEL_SIZE/SECT_SIZE)
    12                              <1> 
    13                              <1> E820_RECORD_SIZE    equ     20
    14                              <1> 
    15                              <1> KERNEL_LOAD     equ     0x0010_1000
    16                              <1> 
    17                              <1>   
     2                                  %include       "../include/macro.s"
     1                              <1> %macro      cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__>>3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 <res 00000002>      <1>         .no     resw    1
    19 00000002 <res 00000002>      <1>         .cyln   resw    1
    20 00000004 <res 00000002>      <1>         .head   resw    1
    21 00000006 <res 00000002>      <1>         .sect   resw    1
    22                              <1> endstruc
    23                              <1> 
     3                                  
     4                                      ORG      KERNEL_LOAD
     5                                  
     6                                  [BITS 32]
     7                                  
     8                                  ; エントリーポイント
     9                                  
    10                                  kernel:
    11                                      
    12                                      ; フォントアドレスを取得
    13 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE
    14 00000005 0FB706                          movzx   eax, word [esi + 0]
    15 00000008 0FB75E02                        movzx   ebx, word [esi + 2]
    16 0000000C C1E004                          shl     eax, 4
    17 0000000F 01D8                            add     eax, ebx
    18 00000011 A3[18020000]                    mov     [FONT_ADR], eax
    19                                  
    20                                  		;---------------------------------------
    21                                  		; フォントの一覧表示
    22                                  		;---------------------------------------
    23 00000016 6A0D6A3FE874030000-     		cdecl	draw_font, 63, 13				; // フォントの一覧表示
    23 0000001F 6683C408           
    24 00000023 6A046A3FE8F5030000-     		cdecl	draw_color_bar, 63, 4			; // カラーバーの表示
    24 0000002C 6683C408           
    25                                  
    26                                  
    27 00000030 6A0D6A3FE85A030000-             cdecl   draw_font, 63, 13
    27 00000039 6683C408           
    28                                  
    29                                  		;---------------------------------------
    30                                  		; 文字列の表示
    31                                  		;---------------------------------------
    32 0000003D 68[04020000]680F01-     		cdecl	draw_str, 25, 14, 0x010F, .s0	; draw_str();
    32 00000045 00006A0E6A19E88803-
    32 0000004E 00006683C410       
    33                                  
    34                                  
    35                                  
    36                                  		;---------------------------------------
    37                                  		; 線を描画
    38                                  		;---------------------------------------
    39 00000054 6A0F6A006A006A646A-     		cdecl	draw_line, 100, 100,   0,   0, 0x0F
    39 0000005D 64E8FB0400006683C4-
    39 00000066 14                 
    40 00000067 6A0F6A0068C8000000-     		cdecl	draw_line, 100, 100, 200,   0, 0x0F
    40 00000070 6A646A64E8E5040000-
    40 00000079 6683C414           
    41 0000007D 6A0F68C800000068C8-     		cdecl	draw_line, 100, 100, 200, 200, 0x0F
    41 00000086 0000006A646A64E8CC-
    41 0000008F 0400006683C414     
    42 00000096 6A0F68C80000006A00-     		cdecl	draw_line, 100, 100,   0, 200, 0x0F
    42 0000009F 6A646A64E8B6040000-
    42 000000A8 6683C414           
    43                                  
    44 000000AC 6A026A006A326A646A-     		cdecl	draw_line, 100, 100,  50,   0, 0x02
    44 000000B5 64E8A30400006683C4-
    44 000000BE 14                 
    45 000000BF 6A036A006896000000-     		cdecl	draw_line, 100, 100, 150,   0, 0x03
    45 000000C8 6A646A64E88D040000-
    45 000000D1 6683C414           
    46 000000D5 6A0468C80000006896-     		cdecl	draw_line, 100, 100, 150, 200, 0x04
    46 000000DE 0000006A646A64E874-
    46 000000E7 0400006683C414     
    47 000000EE 6A0568C80000006A32-     		cdecl	draw_line, 100, 100,  50, 200, 0x05
    47 000000F7 6A646A64E85E040000-
    47 00000100 6683C414           
    48                                  
    49 00000104 6A026A326A006A646A-     		cdecl	draw_line, 100, 100,   0,  50, 0x02
    49 0000010D 64E84B0400006683C4-
    49 00000116 14                 
    50 00000117 6A036A3268C8000000-     		cdecl	draw_line, 100, 100, 200,  50, 0x03
    50 00000120 6A646A64E835040000-
    50 00000129 6683C414           
    51 0000012D 6A04689600000068C8-     		cdecl	draw_line, 100, 100, 200, 150, 0x04
    51 00000136 0000006A646A64E81C-
    51 0000013F 0400006683C414     
    52 00000146 6A0568960000006A00-     		cdecl	draw_line, 100, 100,   0, 150, 0x05
    52 0000014F 6A646A64E806040000-
    52 00000158 6683C414           
    53                                  
    54 0000015C 6A0F6A006A646A646A-     		cdecl	draw_line, 100, 100, 100,   0, 0x0F
    54 00000165 64E8F30300006683C4-
    54 0000016E 14                 
    55 0000016F 6A0F6A6468C8000000-     		cdecl	draw_line, 100, 100, 200, 100, 0x0F
    55 00000178 6A646A64E8DD030000-
    55 00000181 6683C414           
    56 00000185 6A0F68C80000006A64-     		cdecl	draw_line, 100, 100, 100, 200, 0x0F
    56 0000018E 6A646A64E8C7030000-
    56 00000197 6683C414           
    57 0000019B 6A0F6A646A006A646A-     		cdecl	draw_line, 100, 100,   0, 100, 0x0F
    57 000001A4 64E8B40300006683C4-
    57 000001AD 14                 
    58                                  				;---------------------------------------
    59                                  		; 矩形を描画
    60                                  		;---------------------------------------
    61 000001AE 6A0368C800000068C8-     		cdecl	draw_rect, 100, 100, 200, 200, 0x03
    61 000001B7 0000006A646A64E84D-
    61 000001C0 0400006683C414     
    62 000001C7 6A0568960000006896-     		cdecl	draw_rect, 400, 250, 150, 150, 0x05
    62 000001D0 00000068FA00000068-
    62 000001D9 90010000E82E040000-
    62 000001E2 6683C414           
    63 000001E6 6A066A64682C010000-     		cdecl	draw_rect, 350, 400, 300, 100, 0x06
    63 000001EF 6890010000685E0100-
    63 000001F8 00E8120400006683C4-
    63 00000201 14                 
    64                                  
    65 00000202 EBFE                            jmp     $
    66                                  
    67 00000204 2048656C6C6F2C204B-     .s0         db  " Hello, Kernel! ", 0
    67 0000020D 65726E656C212000   
    68                                  
    69 00000215 00<rept>                ALIGN 4, db 0
    70 00000218 00000000                FONT_ADR: dd 0
    71                                  ;   モジュール
    72                                  %include	"../modules/protect/vga.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	読み込みプレーンの選択
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void vga_set_read_plane(plane);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	plane	: 読み込みプレーン
     8                              <1> ;
     9                              <1> ;■戻り値	: 無し
    10                              <1> ;************************************************************************
    11                              <1> vga_set_read_plane:
    12                              <1> 		;---------------------------------------
    13                              <1> 		; 【スタックフレームの構築】
    14                              <1> 		;---------------------------------------
    15                              <1> 												; EBP+ 8| プレーン（インデックス）
    16                              <1> 												; ------+----------------
    17 0000021C 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    18 0000021D 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    19                              <1> 												; ------+----------------
    20                              <1> 
    21                              <1> 		;---------------------------------------
    22                              <1> 		; 【レジスタの保存】
    23                              <1> 		;---------------------------------------
    24 0000021F 50                  <1> 		push	eax
    25 00000220 52                  <1> 		push	edx
    26                              <1> 
    27                              <1> 		;---------------------------------------
    28                              <1> 		; 読み込みプレーンの選択
    29                              <1> 		;---------------------------------------
    30 00000221 8A6508              <1> 		mov		ah, [ebp + 8]					; AH  = プレーンを選択（3=輝度, 2～0=RGB）
    31 00000224 80E403              <1> 		and		ah, 0x03						; AH &= 0x03; // 余計なビットをマスク
    32 00000227 B004                <1> 		mov		al, 0x04						; AL  = 読み込みプレーン選択レジスタ
    33 00000229 66BACE03            <1> 		mov		dx, 0x03CE						; DX  = グラフィックス制御ポート
    34 0000022D 66EF                <1> 		out		dx, ax							; // ポート出力
    35                              <1> 
    36                              <1> 		;---------------------------------------
    37                              <1> 		; 【レジスタの復帰】
    38                              <1> 		;---------------------------------------
    39 0000022F 5A                  <1> 		pop		edx
    40 00000230 58                  <1> 		pop		eax
    41                              <1> 
    42                              <1> 		;---------------------------------------
    43                              <1> 		; 【スタックフレームの破棄】
    44                              <1> 		;---------------------------------------
    45 00000231 89EC                <1> 		mov		esp, ebp
    46 00000233 5D                  <1> 		pop		ebp
    47                              <1> 
    48 00000234 C3                  <1> 		ret
    49                              <1> 
    50                              <1> ;************************************************************************
    51                              <1> ;	書き込みプレーンを選択
    52                              <1> ;========================================================================
    53                              <1> ;■書式		: void vga_set_write_plane(plane);
    54                              <1> ;
    55                              <1> ;■引数
    56                              <1> ;	plane	: 書き込みプレーン
    57                              <1> ;
    58                              <1> ;■戻り値	: 無し
    59                              <1> ;************************************************************************
    60                              <1> vga_set_write_plane:
    61                              <1> 		;---------------------------------------
    62                              <1> 		; 【スタックフレームの構築】
    63                              <1> 		;---------------------------------------
    64                              <1> 												; EBP+ 8| プレーン（ビット指定）
    65                              <1> 												; ------+----------------
    66 00000235 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    67 00000236 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    68                              <1> 												; ------+----------------
    69                              <1> 
    70                              <1> 		;---------------------------------------
    71                              <1> 		; 【レジスタの保存】
    72                              <1> 		;---------------------------------------
    73 00000238 50                  <1> 		push	eax
    74 00000239 52                  <1> 		push	edx
    75                              <1> 
    76                              <1> 		;---------------------------------------
    77                              <1> 		; 書き込みプレーンの選択
    78                              <1> 		;---------------------------------------
    79 0000023A 8A6508              <1> 		mov		ah, [ebp + 8]					; AH = 書き込みプレーンを指定(Bit:----IRGB)
    80 0000023D 80E40F              <1> 		and		ah, 0x0F						; AH = 0x0F; // 余計なビットをマスク
    81 00000240 B002                <1> 		mov		al, 0x02						; AL = 書き込みプレーン選択
    82 00000242 66BAC403            <1> 		mov		dx, 0x03C4						; DX = シーケンサ制御ポート
    83 00000246 66EF                <1> 		out		dx, ax							; // ポート出力
    84                              <1> 
    85                              <1> 		;---------------------------------------
    86                              <1> 		; 【レジスタの復帰】
    87                              <1> 		;---------------------------------------
    88 00000248 5A                  <1> 		pop		edx
    89 00000249 58                  <1> 		pop		eax
    90                              <1> 
    91                              <1> 		;---------------------------------------
    92                              <1> 		; 【スタックフレームの破棄】
    93                              <1> 		;---------------------------------------
    94 0000024A 89EC                <1> 		mov		esp, ebp
    95 0000024C 5D                  <1> 		pop		ebp
    96                              <1> 
    97 0000024D C3                  <1> 		ret
    98                              <1> 
    99                              <1> ;************************************************************************
   100                              <1> ;	フォントの書き込み
   101                              <1> ;========================================================================
   102                              <1> ;■書式		: void vram_font_copy(font, vram, plane, color);
   103                              <1> ;
   104                              <1> ;■引数
   105                              <1> ;	font	: FONTアドレス
   106                              <1> ;	vram	: VRAMアドレス
   107                              <1> ;	plane	: 出力プレーン（１つのプレーンのみをビットで指定）
   108                              <1> ;	color	: 描画色
   109                              <1> ;
   110                              <1> ;■戻り値	: 無し
   111                              <1> ;************************************************************************
   112                              <1> vram_font_copy:
   113                              <1> 		;---------------------------------------
   114                              <1> 		; 【スタックフレームの構築】
   115                              <1> 		;---------------------------------------
   116                              <1> 												; EBP+20| 色（背景/前景色）
   117                              <1> 												; EBP+16| プレーン（ビット指定）
   118                              <1> 												; EBP+12| VRAMアドレス
   119                              <1> 												; EBP+ 8| FONTアドレス
   120                              <1> 												; ------+----------------
   121 0000024E 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   122 0000024F 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   123                              <1> 												; ------+----------------
   124                              <1> 
   125                              <1> 		;---------------------------------------
   126                              <1> 		; 【レジスタの保存】
   127                              <1> 		;---------------------------------------
   128 00000251 50                  <1> 		push	eax
   129 00000252 53                  <1> 		push	ebx
   130 00000253 51                  <1> 		push	ecx
   131 00000254 52                  <1> 		push	edx
   132 00000255 56                  <1> 		push	esi
   133 00000256 57                  <1> 		push	edi
   134                              <1> 
   135                              <1> 		;---------------------------------------
   136                              <1> 		; 【処理の開始】
   137                              <1> 		;---------------------------------------
   138 00000257 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = フォントアドレス;
   139 0000025A 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   140 0000025D 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   141 00000261 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 色;
   142                              <1> 
   143 00000265 84C7                <1> 		test	bh, al							; ZF = (背景色 & プレーン);
   144 00000267 0F94C6              <1> 		setz	dh								; AH = ZF ? 0x01 : 0x00
   145 0000026A FECE                <1> 		dec		dh								; AH--; // 0x00 or 0xFF
   146                              <1> 
   147 0000026C 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   148 0000026E 0F94C2              <1> 		setz	dl								; AL = ZF ? 0x01 : 0x00
   149 00000271 FECA                <1> 		dec		dl								; AL--; // 0x00 or 0xFF
   150                              <1> 
   151                              <1> 		;---------------------------------------
   152                              <1> 		; 16ドットフォントのコピー
   153                              <1> 		;---------------------------------------
   154 00000273 FC                  <1> 		cld										; DF  = 0; // アドレス加算
   155                              <1> 
   156 00000274 B910000000          <1> 		mov		ecx, 16							; ECX = 16; // 16ドット
   157                              <1> .10L:											; do
   158                              <1> 												; {
   159                              <1> 		;---------------------------------------
   160                              <1> 		; フォントマスクの作成
   161                              <1> 		;---------------------------------------
   162 00000279 AC                  <1> 		lodsb									;   AL  = *ESI++; //  フォント
   163 0000027A 88C4                <1> 		mov		ah, al							;   AH ~= AL;     // !フォント（ビット反転）
   164 0000027C F6D4                <1> 		not		ah								;   
   165                              <1> 
   166                              <1> 		;---------------------------------------
   167                              <1> 		; 前景色
   168                              <1> 		;---------------------------------------
   169 0000027E 20D0                <1> 		and		al, dl							;   AL = 前景色 & フォント;
   170                              <1> 
   171                              <1> 		;---------------------------------------
   172                              <1> 		; 背景色
   173                              <1> 		;---------------------------------------
   174 00000280 F7C310000000        <1> 		test	ebx, 0x0010						;   if (透過モード)
   175 00000286 7404                <1> 		jz		.11F							;   {
   176 00000288 2227                <1> 		and		ah, [edi]						;     AH = !フォント & [EDI] // 現在値
   177 0000028A EB02                <1> 		jmp		.11E							;   }
   178                              <1> .11F:											;   else
   179                              <1> 												;   {
   180 0000028C 20F4                <1> 		and		ah, dh							;     AH = !フォント & 背景色;
   181                              <1> .11E:											;   }
   182                              <1> 
   183                              <1> 		;---------------------------------------
   184                              <1> 		; 前景色と背景色を合成
   185                              <1> 		;---------------------------------------
   186 0000028E 08E0                <1> 		or		al, ah							;   AL  = 背景 | 前景;
   187                              <1> 
   188                              <1> 		;---------------------------------------
   189                              <1> 		; 新しい値を出力
   190                              <1> 		;---------------------------------------
   191 00000290 8807                <1> 		mov		[edi], al						;   [EDI] = AL; // プレーンに書き込む
   192                              <1> 
   193 00000292 83C750              <1> 		add		edi, 80							;   EDI += 80;
   194 00000295 E2E2                <1> 		loop	.10L							; } while (--ECX);
   195                              <1> .10E:											; 
   196                              <1> 
   197                              <1> 		;---------------------------------------
   198                              <1> 		; 【レジスタの復帰】
   199                              <1> 		;---------------------------------------
   200 00000297 5F                  <1> 		pop		edi
   201 00000298 5E                  <1> 		pop		esi
   202 00000299 5A                  <1> 		pop		edx
   203 0000029A 59                  <1> 		pop		ecx
   204 0000029B 5B                  <1> 		pop		ebx
   205 0000029C 58                  <1> 		pop		eax
   206                              <1> 
   207                              <1> 		;---------------------------------------
   208                              <1> 		; 【スタックフレームの破棄】
   209                              <1> 		;---------------------------------------
   210 0000029D 89EC                <1> 		mov		esp, ebp
   211 0000029F 5D                  <1> 		pop		ebp
   212                              <1> 
   213 000002A0 C3                  <1> 		ret
   214                              <1> 
   215                              <1> ;************************************************************************
   216                              <1> ;	ビットパターンの書き込み
   217                              <1> ;========================================================================
   218                              <1> ;■書式		: void vram_bit_copy(bit, vram, flag);
   219                              <1> ;
   220                              <1> ;■引数
   221                              <1> ;	bit		: 出力ビットパターン
   222                              <1> ;	vram	: VRAMアドレス
   223                              <1> ;	flag	: 1:セット, 0:クリア
   224                              <1> ;
   225                              <1> ;■戻り値	: 無し
   226                              <1> ;************************************************************************
   227                              <1> vram_bit_copy:
   228                              <1> 		;---------------------------------------
   229                              <1> 		; 【スタックフレームの構築】
   230                              <1> 		;---------------------------------------
   231                              <1> 												; EBP+20| 色（背景/前景色）
   232                              <1> 												; EBP+16| プレーン（ビット指定）
   233                              <1> 												; EBP+12| VRAMアドレス
   234                              <1> 												; EBP+ 8| 出力ビットパターン
   235                              <1> 												; ------+----------------
   236 000002A1 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   237 000002A2 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   238                              <1> 												; ------+----------------
   239                              <1> 
   240                              <1> 		;---------------------------------------
   241                              <1> 		; 【レジスタの保存】
   242                              <1> 		;---------------------------------------
   243 000002A4 50                  <1> 		push	eax
   244 000002A5 53                  <1> 		push	ebx
   245 000002A6 57                  <1> 		push	edi
   246                              <1> 
   247                              <1> 		;---------------------------------------
   248                              <1> 		; 【処理の開始】
   249                              <1> 		;---------------------------------------
   250 000002A7 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   251 000002AA 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   252 000002AE 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 表示色;
   253                              <1> 
   254 000002B2 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   255 000002B4 0F94C3              <1> 		setz	bl								; BL = ZF ? 0x01 : 0x00
   256 000002B7 FECB                <1> 		dec		bl								; BL--; // 0x00 or 0xFF
   257                              <1> 
   258                              <1> 		;---------------------------------------
   259                              <1> 		; マスクデータの作成
   260                              <1> 		;---------------------------------------
   261 000002B9 8A4508              <1> 		mov		al, [ebp + 8]					; AL = 出力ビットパターン;
   262 000002BC 88C4                <1> 		mov		ah, al							; AH ~= AL;     // !出力ビットパターン（ビット反転）
   263 000002BE F6D4                <1> 		not		ah								; 
   264                              <1> 
   265                              <1> 		;---------------------------------------
   266                              <1> 		; 現在値の出力を取得
   267                              <1> 		;---------------------------------------
   268 000002C0 2227                <1> 		and		ah, [edi]						; AH  = 現在値 & !出力ビットパターン
   269 000002C2 20D8                <1> 		and		al, bl							; AL  = 表示色 &  出力ビットパターン
   270 000002C4 08E0                <1> 		or		al, ah							; AL |= AH;
   271                              <1> 
   272                              <1> 		;---------------------------------------
   273                              <1> 		; 新しい値を出力
   274                              <1> 		;---------------------------------------
   275 000002C6 8807                <1> 		mov		[edi], al						; [EDI] = BL; // プレーンに書き込む
   276                              <1> 
   277                              <1> 		;---------------------------------------
   278                              <1> 		; 【レジスタの復帰】
   279                              <1> 		;---------------------------------------
   280 000002C8 5F                  <1> 		pop		edi
   281 000002C9 5B                  <1> 		pop		ebx
   282 000002CA 58                  <1> 		pop		eax
   283                              <1> 
   284                              <1> 		;---------------------------------------
   285                              <1> 		; 【スタックフレームの破棄】
   286                              <1> 		;---------------------------------------
   287 000002CB 89EC                <1> 		mov		esp, ebp
   288 000002CD 5D                  <1> 		pop		ebp
   289                              <1> 
   290 000002CE C3                  <1> 		ret
   291                              <1> 
    73                                  %include	"../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1> 		;---------------------------------------
     3                              <1> 		; 【スタックフレームの構築】
     4                              <1> 		;---------------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+20| 文字
     7                              <1> 												; EBP+16| 色
     8                              <1> 												; EBP+12| Y（行）
     9                              <1> 												; EBP+ 8| X（列）
    10                              <1> 												; ------+----------------
    11 000002CF 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    12 000002D0 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    13                              <1> 												; ------+----------------
    14                              <1> 
    15                              <1> 		;---------------------------------------
    16                              <1> 		; 【レジスタの保存】
    17                              <1> 		;---------------------------------------
    18 000002D2 50                  <1> 		push	eax
    19 000002D3 53                  <1> 		push	ebx
    20 000002D4 51                  <1> 		push	ecx
    21 000002D5 52                  <1> 		push	edx
    22 000002D6 56                  <1> 		push	esi
    23 000002D7 57                  <1> 		push	edi
    24                              <1> 		;---------------------------------------
    25                              <1> 		; テストアンドセット
    26                              <1> 		;---------------------------------------
    27                              <1> %ifdef	USE_TEST_AND_SET
    28                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
    29                              <1> %endif
    30                              <1> 
    31                              <1>         ;コピー元のアドレスを取得
    32 000002D8 0FB67514            <1>         movzx   esi, byte [ebp +20]
    33 000002DC C1E604              <1>         shl     esi, 4
    34 000002DF 0335[18020000]      <1>         add     esi, [FONT_ADR]
    35                              <1> 
    36                              <1>         ;コピー先のアドレスを取得
    37 000002E5 8B7D0C              <1>         mov     edi, [ebp +12]
    38 000002E8 C1E708              <1>         shl     edi, 8
    39 000002EB 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]
    40 000002F2 037D08              <1>         add     edi, [ebp + 8]
    41                              <1> 
    42                              <1>         ;一文字分のフォントを出力
    43 000002F5 0FB75D10            <1> 		movzx	ebx, word [ebp +16]				; // 表示色
    44                              <1> 
    45 000002F9 6A03E81CFFFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 読み込みプレーン：輝度(I)
    45 00000302 C404                <1>
    46 00000304 6A08E82AFFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 書き込みプレーン：輝度(I)
    46 0000030D C404                <1>
    47 0000030F 536A085756E835FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x08, ebx
    47 00000318 FF6683C410          <1>
    48                              <1> 
    49 0000031D 6A02E8F8FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 読み込みプレーン：赤(R)
    49 00000326 C404                <1>
    50 00000328 6A04E806FFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 書き込みプレーン：赤(R)
    50 00000331 C404                <1>
    51 00000333 536A045756E811FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x04, ebx
    51 0000033C FF6683C410          <1>
    52                              <1> 
    53 00000341 6A01E8D4FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 読み込みプレーン：緑(G)
    53 0000034A C404                <1>
    54 0000034C 6A02E8E2FEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 書き込みプレーン：緑(G)
    54 00000355 C404                <1>
    55 00000357 536A025756E8EDFEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x02, ebx
    55 00000360 FF6683C410          <1>
    56                              <1> 
    57 00000365 6A00E8B0FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 読み込みプレーン：青(B)
    57 0000036E C404                <1>
    58 00000370 6A01E8BEFEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 書き込みプレーン：青(B)
    58 00000379 C404                <1>
    59 0000037B 536A015756E8C9FEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x01, ebx
    59 00000384 FF6683C410          <1>
    60                              <1> 
    61                              <1> %ifdef	USE_TEST_AND_SET
    62                              <1> 		;---------------------------------------
    63                              <1> 		; テストアンドセット
    64                              <1> 		;---------------------------------------
    65                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
    66                              <1> %endif
    67                              <1> 
    68                              <1> 		;---------------------------------------
    69                              <1> 		; 【レジスタの復帰】
    70                              <1> 		;---------------------------------------
    71 00000389 5F                  <1> 		pop		edi
    72 0000038A 5E                  <1> 		pop		esi
    73 0000038B 5A                  <1> 		pop		edx
    74 0000038C 59                  <1> 		pop		ecx
    75 0000038D 5B                  <1> 		pop		ebx
    76 0000038E 58                  <1> 		pop		eax
    77                              <1> 
    78                              <1> 		;---------------------------------------
    79                              <1> 		; 【スタックフレームの破棄】
    80                              <1> 		;---------------------------------------
    81 0000038F 89EC                <1> 		mov		esp, ebp
    82 00000391 5D                  <1> 		pop		ebp
    83                              <1> 
    84 00000392 C3                  <1> 		ret
    85                              <1> 
    86                              <1> %ifdef USE_TEST_AND_SET
    87                              <1> ALIGN 4, db 0
    88                              <1> IN_USE:	dd	0
    89                              <1> %endif
    90                              <1> 
    74                                  %include	"../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1> 		;---------------------------------------
     3                              <1> 		; 【スタックフレームの構築】
     4                              <1> 		;---------------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+12| Y（行）
     7                              <1> 												; EBP+ 8| X（列）
     8                              <1> 												; ---------------
     9 00000393 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    10 00000394 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    11                              <1> 												; ---------------
    12                              <1> 
    13                              <1> 		;---------------------------------------
    14                              <1> 		; 【レジスタの保存】
    15                              <1> 		;---------------------------------------
    16 00000396 50                  <1> 		push	eax
    17 00000397 53                  <1> 		push	ebx
    18 00000398 51                  <1> 		push	ecx
    19 00000399 52                  <1> 		push	edx
    20 0000039A 56                  <1> 		push	esi
    21 0000039B 57                  <1> 		push	edi
    22                              <1> 
    23                              <1> 		;---------------------------------------
    24                              <1> 		; 表示位置
    25                              <1> 		;---------------------------------------
    26 0000039C 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
    27 0000039F 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
    28                              <1> 
    29 000003A2 B900000000          <1>         mov     ecx, 0
    30 000003A7 81F900010000        <1> .10L:   cmp     ecx, 256
    31 000003AD 731F                <1>         jae     .10E
    32                              <1> 
    33 000003AF 89C8                <1>         mov     eax, ecx
    34 000003B1 83E00F              <1>         and     eax, 0x0F
    35 000003B4 01F0                <1>         add     eax, esi            ;列 0 => 11110000 として端っこによるようにする
    36                              <1> 
    37 000003B6 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
    38 000003B8 C1EB04              <1> 		shr		ebx, 4							;   EBX /= 16
    39 000003BB 01FB                <1> 		add		ebx, edi						;   EBX += Y;       ;行 １６で割ったときに商がいくつか
    40                              <1> 
    41 000003BD 516A075350E808FFFF- <1> 		cdecl	draw_char, eax, ebx, 0x07, ecx	;   draw_char();
    41 000003C6 FF6683C410          <1>
    42                              <1> 
    43 000003CB 41                  <1> 		inc		ecx								;   // for (... ECX++)
    44 000003CC EBD9                <1> 		jmp		.10L							; 
    45                              <1> .10E:											; }
    46                              <1> 
    47                              <1> 		;---------------------------------------
    48                              <1> 		; 【レジスタの復帰】
    49                              <1> 		;---------------------------------------
    50 000003CE 5F                  <1> 		pop		edi
    51 000003CF 5E                  <1> 		pop		esi
    52 000003D0 5A                  <1> 		pop		edx
    53 000003D1 59                  <1> 		pop		ecx
    54 000003D2 5B                  <1> 		pop		ebx
    55 000003D3 58                  <1> 		pop		eax
    56                              <1> 
    57                              <1> 		;---------------------------------------
    58                              <1> 		; 【スタックフレームの破棄】
    59                              <1> 		;---------------------------------------
    60 000003D4 89EC                <1> 		mov		esp, ebp
    61 000003D6 5D                  <1> 		pop		ebp
    62                              <1> 
    63 000003D7 C3                  <1> 		ret
    64                              <1> 
    75                                  %include	"../modules/protect/draw_str.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	文字列の表示
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_str(col, row, color, p);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	col		: 列
     8                              <1> ;	row		: 行
     9                              <1> ;	color	: 描画色
    10                              <1> ;	p		: 文字列のアドレス
    11                              <1> ;
    12                              <1> ;■戻り値	: 無し
    13                              <1> ;************************************************************************
    14                              <1> draw_str:
    15                              <1> 		;---------------------------------------
    16                              <1> 		; 【スタックフレームの構築】
    17                              <1> 		;---------------------------------------
    18                              <1> 												; ------|--------
    19                              <1> 												; EBP+20| *p（文字列のアドレス）
    20                              <1> 												; EBP+16| color（色）
    21                              <1> 												; EBP+12| row（行）
    22                              <1> 												; EBP+ 8| col（列）
    23                              <1> 												; ---------------
    24 000003D8 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    25 000003D9 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    26                              <1> 												; ---------------
    27                              <1> 
    28                              <1> 		;---------------------------------------
    29                              <1> 		; 【レジスタの保存】
    30                              <1> 		;---------------------------------------
    31 000003DB 50                  <1> 		push	eax
    32 000003DC 53                  <1> 		push	ebx
    33 000003DD 51                  <1> 		push	ecx
    34 000003DE 52                  <1> 		push	edx
    35 000003DF 56                  <1> 		push	esi
    36                              <1> 
    37                              <1> 		;---------------------------------------
    38                              <1> 		; 文字列の表示
    39                              <1> 		;---------------------------------------
    40 000003E0 8B4D08              <1> 		mov		ecx, [ebp + 8]					; ECX = 列;
    41 000003E3 8B550C              <1> 		mov		edx, [ebp +12]					; EDX = 行;
    42 000003E6 0FB75D10            <1> 		movzx	ebx, word [ebp + 16]			; EBX = 表示色;
    43 000003EA 8B7514              <1> 		mov		esi, [ebp +20]					; ESI = 文字列のアドレス;
    44                              <1> 
    45 000003ED FC                  <1> 		cld										; DF = 0; // アドレス加算
    46                              <1> .10L:											; do
    47                              <1> 												; {
    48 000003EE AC                  <1> 		lodsb									;   AL = *ESI++; // 文字を取得
    49 000003EF 3C00                <1> 		cmp		al, 0							;   if (0 == AL)
    50 000003F1 7425                <1> 		je		.10E							;     break;
    51                              <1> 
    52                              <1> 		;---------------------------------------
    53                              <1> 		; 1文字表示
    54                              <1> 		;---------------------------------------
    55                              <1> %ifdef	USE_SYSTEM_CALL
    56                              <1> 		int		0x81							;   sys_call(1, X, Y, 色, 文字);
    57                              <1> %else
    58 000003F3 50535251E8D3FEFFFF- <1> 		cdecl	draw_char, ecx, edx, ebx, eax	;   draw_char();
    58 000003FC 6683C410            <1>
    59                              <1> %endif
    60                              <1> 
    61                              <1> 		; 次の文字の位置を調整
    62 00000400 41                  <1> 		inc		ecx								;   ECX++;           // 列を加算
    63 00000401 83F950              <1> 		cmp		ecx, 80							;   if (80 <= ECX)   // 80文字以上？
    64 00000404 7C10                <1> 		jl		.12E							;   {
    65 00000406 B900000000          <1> 		mov		ecx, 0							;     ECX = 0;       // 列を初期化
    66 0000040B 42                  <1> 		inc		edx								;     EDX++;         // 行を加算
    67 0000040C 83FA1E              <1> 		cmp		edx, 30							;     if (30 <= EDX) // 30行以上？
    68 0000040F 7C05                <1> 		jl		.12E							;     {
    69 00000411 BA00000000          <1> 		mov		edx, 0							;       EDX = 0;     // 行を初期化
    70                              <1> 												;     }
    71                              <1> .12E:											;   }
    72 00000416 EBD6                <1> 		jmp		.10L							;   
    73                              <1> .10E:											; } while (1);
    74                              <1> 
    75                              <1> 		;---------------------------------------
    76                              <1> 		; 【レジスタの復帰】
    77                              <1> 		;---------------------------------------
    78 00000418 5E                  <1> 		pop		esi
    79 00000419 5A                  <1> 		pop		edx
    80 0000041A 59                  <1> 		pop		ecx
    81 0000041B 5B                  <1> 		pop		ebx
    82 0000041C 58                  <1> 		pop		eax
    83                              <1> 
    84                              <1> 		;---------------------------------------
    85                              <1> 		; 【スタックフレームの破棄】
    86                              <1> 		;---------------------------------------
    87 0000041D 89EC                <1> 		mov		esp, ebp
    88 0000041F 5D                  <1> 		pop		ebp
    89                              <1> 
    90 00000420 C3                  <1> 		ret
    91                              <1> 
    76                                  %include	"../modules/protect/draw_color_bar.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	カラーバーの表示
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_color_bar(col, row);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	col		: 列
     8                              <1> ;	row		: 行
     9                              <1> ;
    10                              <1> ;■戻り値	: 無し
    11                              <1> ;************************************************************************
    12                              <1> draw_color_bar:
    13                              <1> 		;---------------------------------------
    14                              <1> 		; 【スタックフレームの構築】
    15                              <1> 		;---------------------------------------
    16                              <1> 												; ------|--------
    17                              <1> 												; EBP+ 8| X（列）
    18                              <1> 												; EBP+12| Y（行）
    19                              <1> 												; ---------------
    20 00000421 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    21 00000422 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    22                              <1> 												; ---------------
    23                              <1> 		;---------------------------------------
    24                              <1> 		; 【レジスタの保存】
    25                              <1> 		;---------------------------------------
    26 00000424 50                  <1> 		push	eax
    27 00000425 53                  <1> 		push	ebx
    28 00000426 51                  <1> 		push	ecx
    29 00000427 52                  <1> 		push	edx
    30 00000428 56                  <1> 		push	esi
    31 00000429 57                  <1> 		push	edi
    32                              <1> 
    33                              <1> 		;---------------------------------------
    34                              <1> 		; 表示位置
    35                              <1> 		;---------------------------------------
    36 0000042A 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
    37 0000042D 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
    38                              <1> 
    39                              <1> 		;---------------------------------------
    40                              <1> 		; カラーバーを表示
    41                              <1> 		;---------------------------------------
    42 00000430 B900000000          <1> 		mov		ecx, 0							; for (ECX = 0;
    43 00000435 83F910              <1> .10L:	cmp		ecx, 16							;      ECX < 16;
    44 00000438 732E                <1> 		jae		.10E							; 
    45                              <1> 												;      ECX++)
    46                              <1> 												; {
    47                              <1> 												;   // 桁位置の計算
    48 0000043A 89C8                <1> 		mov		eax, ecx						;   EAX  = ECX;
    49 0000043C 83E001              <1> 		and		eax, 0x01						;   EAX &= 0x01;
    50 0000043F C1E003              <1> 		shl		eax, 3							;   EAX *= 8;  // 8文字分乗算
    51 00000442 01F0                <1> 		add		eax, esi						;   EAX += X;
    52                              <1> 												;   
    53                              <1> 												;   // 行位置の計算
    54 00000444 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
    55 00000446 D1EB                <1> 		shr		ebx, 1							;   EBX /= 2
    56 00000448 01FB                <1> 		add		ebx, edi						;   EBX += Y;
    57                              <1> 												;   
    58                              <1> 												;   // 表示色の取得
    59 0000044A 89CA                <1> 		mov		edx, ecx						;   EDX  = ECX;
    60 0000044C D1E2                <1> 		shl		edx, 1							;   EDX *= 2;
    61 0000044E 8B92[7B040000]      <1> 		mov		edx, [.t0 + edx]				;   EDX += Y;
    62                              <1> 
    63 00000454 68[72040000]525350- <1> 		cdecl	draw_str, eax, ebx, edx, .s0	;   draw_str();
    63 0000045C E877FFFFFF6683C410  <1>
    64                              <1> 
    65 00000465 41                  <1> 		inc		ecx								;   // for (... ECX++)
    66 00000466 EBCD                <1> 		jmp		.10L							; 
    67                              <1> .10E:											; }
    68                              <1> 
    69                              <1> 		;---------------------------------------
    70                              <1> 		; 【レジスタの復帰】
    71                              <1> 		;---------------------------------------
    72 00000468 5F                  <1> 		pop		edi
    73 00000469 5E                  <1> 		pop		esi
    74 0000046A 5A                  <1> 		pop		edx
    75 0000046B 59                  <1> 		pop		ecx
    76 0000046C 5B                  <1> 		pop		ebx
    77 0000046D 58                  <1> 		pop		eax
    78                              <1> 
    79                              <1> 		;---------------------------------------
    80                              <1> 		; 【スタックフレームの破棄】
    81                              <1> 		;---------------------------------------
    82 0000046E 89EC                <1> 		mov		esp, ebp
    83 00000470 5D                  <1> 		pop		ebp
    84                              <1> 
    85 00000471 C3                  <1> 		ret
    86                              <1> 
    87 00000472 202020202020202000  <1> .s0:	db '        ', 0						; 8文字分のスペース（表示色だけを変更）
    88                              <1> 
    89 0000047B 00000008            <1> .t0:	dw	0x0000, 0x0800						; カラーバーの背景色
    90 0000047F 00010009            <1> 		dw	0x0100, 0x0900
    91 00000483 0002000A            <1> 		dw	0x0200, 0x0A00
    92 00000487 0003000B            <1> 		dw	0x0300, 0x0B00
    93 0000048B 0004000C            <1> 		dw	0x0400, 0x0C00
    94 0000048F 0005000D            <1> 		dw	0x0500, 0x0D00
    95 00000493 0006000E            <1> 		dw	0x0600, 0x0E00
    96 00000497 0007000F            <1> 		dw	0x0700, 0x0F00
    97                              <1> 
    77                                  %include	"../modules/protect/draw_pixel.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	ピクセルの描画
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_pixel(X, Y, color);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	X		: X座標
     8                              <1> ;	Y		: Y座標
     9                              <1> ;	color	: 描画色
    10                              <1> ;
    11                              <1> ;■戻り値	: 無し
    12                              <1> ;************************************************************************
    13                              <1> draw_pixel:
    14                              <1> 		;---------------------------------------
    15                              <1> 		; 【スタックフレームの構築】
    16                              <1> 		;---------------------------------------
    17                              <1> 												; ------|--------
    18                              <1> 												; EBP+16| 色
    19                              <1> 												; EBP+12| Y
    20                              <1> 												; EBP+ 8| X
    21                              <1> 												; ------|--------
    22 0000049B 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    23 0000049C 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    24                              <1> 												; ------+--------
    25                              <1> 		;---------------------------------------
    26                              <1> 		; 【レジスタの保存】
    27                              <1> 		;---------------------------------------
    28 0000049E 50                  <1> 		push	eax
    29 0000049F 53                  <1> 		push	ebx
    30 000004A0 51                  <1> 		push	ecx
    31 000004A1 57                  <1> 		push	edi
    32                              <1>         
    33                              <1> 		;---------------------------------------
    34                              <1> 		; Y座標を80倍する（640/8）
    35                              <1> 		;---------------------------------------
    36                              <1> 
    37 000004A2 8B7D0C              <1>         mov     edi, [ebp +12]
    38 000004A5 C1E704              <1>         shl     edi, 4
    39 000004A8 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000]
    40                              <1> 
    41 000004AF 8B5D08              <1>         mov     ebx, [ebp + 8]
    42 000004B2 89D9                <1>         mov     ecx, ebx
    43 000004B4 C1EB03              <1>         shr     ebx, 3
    44 000004B7 01DF                <1>         add     edi, ebx
    45                              <1> 
    46 000004B9 83E107              <1>         and     ecx, 0x07
    47 000004BC BB80000000          <1>         mov     ebx, 0x80
    48 000004C1 D3EB                <1>         shr     ebx, cl
    49                              <1> 
    50 000004C3 8B4D10              <1>         mov     ecx, [ebp +16]
    51                              <1> 
    52                              <1> %ifdef	USE_TEST_AND_SET
    53                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
    54                              <1> %endif
    55                              <1> 
    56                              <1> 		;---------------------------------------
    57                              <1> 		; プレーン毎に出力
    58                              <1> 		;---------------------------------------
    59 000004C6 6A03E84FFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 輝度(I)プレーンを選択
    59 000004CF C404                <1>
    60 000004D1 6A08E85DFDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 輝度(I)プレーンを選択
    60 000004DA C404                <1>
    61 000004DC 516A085753E8BBFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x08, ecx
    61 000004E5 FF6683C410          <1>
    62                              <1> 
    63 000004EA 6A02E82BFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 赤(R)プレーンを選択
    63 000004F3 C404                <1>
    64 000004F5 6A04E839FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 赤(R)プレーンを選択
    64 000004FE C404                <1>
    65 00000500 516A045753E897FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x04, ecx
    65 00000509 FF6683C410          <1>
    66                              <1> 
    67 0000050E 6A01E807FDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 緑(G)プレーンを選択
    67 00000517 C404                <1>
    68 00000519 6A02E815FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 緑(G)プレーンを選択
    68 00000522 C404                <1>
    69 00000524 516A025753E873FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x02, ecx
    69 0000052D FF6683C410          <1>
    70                              <1> 
    71 00000532 6A00E8E3FCFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 青(B)プレーンを選択
    71 0000053B C404                <1>
    72 0000053D 6A01E8F1FCFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 青(B)プレーンを選択
    72 00000546 C404                <1>
    73 00000548 516A015753E84FFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x01, ecx
    73 00000551 FF6683C410          <1>
    74                              <1> 
    75                              <1> 
    76                              <1> %ifdef	USE_TEST_AND_SET
    77                              <1> 		;---------------------------------------
    78                              <1> 		; テストアンドセット
    79                              <1> 		;---------------------------------------
    80                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
    81                              <1> %endif
    82                              <1> 
    83                              <1> 		;---------------------------------------
    84                              <1> 		; 【レジスタの復帰】
    85                              <1> 		;---------------------------------------
    86 00000556 5F                  <1> 		pop		edi
    87 00000557 59                  <1> 		pop		ecx
    88 00000558 5B                  <1> 		pop		ebx
    89 00000559 58                  <1> 		pop		eax
    90                              <1> 
    91                              <1> 		;---------------------------------------
    92                              <1> 		; 【スタックフレームの破棄】
    93                              <1> 		;---------------------------------------
    94 0000055A 89EC                <1> 		mov		esp, ebp
    95 0000055C 5D                  <1> 		pop		ebp
    96                              <1> 
    97 0000055D C3                  <1> 		ret
    98                              <1> 
    78                                  %include	"../modules/protect/draw_line.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	直線の描画
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_line(X0, Y0, X1, Y1, color);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	X0		: 始点のX座標
     8                              <1> ;	Y0		: 始点のY座標
     9                              <1> ;	X1		: 終点のX座標
    10                              <1> ;	Y1		: 終点のY座標
    11                              <1> ;	color	: 描画色
    12                              <1> ;
    13                              <1> ;■戻り値	: 無し
    14                              <1> ;************************************************************************
    15                              <1> draw_line:
    16                              <1> 		;---------------------------------------
    17                              <1> 		; 【スタックフレームの構築】
    18                              <1> 		;---------------------------------------
    19                              <1> 												; ---------------
    20                              <1> 												;    +24| 色
    21                              <1> 												;    +20| Y1
    22                              <1> 												;    +16| X1
    23                              <1> 												;    +12| Y0
    24                              <1> 												;    + 8| X0
    25                              <1> 												; ---------------
    26 0000055E 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    27 0000055F 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    28                              <1> 												; ---------------
    29 00000561 6A00                <1> 		push	dword 0							;    - 4| sum   = 0; // 相対軸の積算値
    30 00000563 6A00                <1> 		push	dword 0							;    - 8| x0    = 0; // X座標
    31 00000565 6A00                <1> 		push	dword 0							;    -12| dx    = 0; // X増分
    32 00000567 6A00                <1> 		push	dword 0							;    -16| inc_x = 0; // X座標増分(1 or -1)
    33 00000569 6A00                <1> 		push	dword 0							;    -20| y0    = 0; // Y座標
    34 0000056B 6A00                <1> 		push	dword 0							;    -24| dy    = 0; // Y増分
    35 0000056D 6A00                <1> 		push	dword 0							;    -28| inc_y = 0; // Y座標増分(1 or -1)
    36                              <1> 												; ------|--------
    37                              <1> 
    38                              <1> 		;---------------------------------------
    39                              <1> 		; 【レジスタの保存】
    40                              <1> 		;---------------------------------------
    41 0000056F 50                  <1> 		push	eax
    42 00000570 53                  <1> 		push	ebx
    43 00000571 51                  <1> 		push	ecx
    44 00000572 52                  <1> 		push	edx
    45 00000573 56                  <1> 		push	esi
    46 00000574 57                  <1> 		push	edi
    47                              <1> 
    48                              <1> 		;---------------------------------------
    49                              <1> 		; 幅を計算（X軸）
    50                              <1> 		;---------------------------------------
    51 00000575 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
    52 00000578 8B5D10              <1> 		mov		ebx, [ebp +16]					; EBX = X1;
    53 0000057B 29C3                <1> 		sub		ebx, eax						; EBX = X1 - X0; // 幅
    54 0000057D 7D09                <1> 		jge		.10F							; if (幅 < 0)
    55                              <1> 												; {
    56 0000057F F7DB                <1> 		neg		ebx								;   幅   *= -1;
    57 00000581 BEFFFFFFFF          <1> 		mov		esi, -1							;   // X座標の増分
    58 00000586 EB05                <1> 		jmp		.10E							; }
    59                              <1> .10F:											; else
    60                              <1> 												; {
    61 00000588 BE01000000          <1> 		mov		esi, 1							;   // X座標の増分
    62                              <1> .10E:											; }
    63                              <1> 
    64                              <1> 		;---------------------------------------
    65                              <1> 		; 高さを計算（Y軸）
    66                              <1> 		;---------------------------------------
    67 0000058D 8B4D0C              <1> 		mov		ecx, [ebp +12]					; ECX = Y0
    68 00000590 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1
    69 00000593 29CA                <1> 		sub		edx, ecx						; EDX = Y1 - Y0; // 高さ
    70 00000595 7D09                <1> 		jge		.20F							; if (高さ < 0)
    71                              <1> 												; {
    72 00000597 F7DA                <1> 		neg		edx								;   高さ *= -1;
    73 00000599 BFFFFFFFFF          <1> 		mov		edi, -1							;   // Y座標の増分
    74 0000059E EB05                <1> 		jmp		.20E							; }
    75                              <1> .20F:											; else
    76                              <1> 												; {
    77 000005A0 BF01000000          <1> 		mov		edi, 1							;   // Y座標の増分
    78                              <1> .20E:											; }
    79                              <1> 
    80                              <1> 		;---------------------------------------
    81                              <1> 		; X軸
    82                              <1> 		;---------------------------------------
    83 000005A5 8945F8              <1> 		mov		[ebp - 8], eax					;   // X軸:開始座標
    84 000005A8 895DF4              <1> 		mov		[ebp -12], ebx					;   // X軸:描画幅
    85 000005AB 8975F0              <1> 		mov		[ebp -16], esi					;   // X軸:増分(基準軸：1 or -1)
    86                              <1> 
    87                              <1> 		;---------------------------------------
    88                              <1> 		; Y軸
    89                              <1> 		;---------------------------------------
    90 000005AE 894DEC              <1> 		mov		[ebp -20], ecx					;   // Y軸:開始座標
    91 000005B1 8955E8              <1> 		mov		[ebp -24], edx					;   // Y軸:描画幅
    92 000005B4 897DE4              <1> 		mov		[ebp -28], edi					;   // Y軸:増分(基準軸：1 or -1)
    93                              <1> 
    94                              <1> 		;---------------------------------------
    95                              <1> 		; 基準軸を決める
    96                              <1> 		;---------------------------------------
    97 000005B7 39D3                <1> 		cmp		ebx, edx						; if (幅 <= 高さ)
    98 000005B9 7F08                <1> 		jg		.22F							; {
    99                              <1> 												;   
   100 000005BB 8D75EC              <1> 		lea		esi, [ebp -20]					;   // Y軸が基準軸
   101 000005BE 8D7DF8              <1> 		lea		edi, [ebp - 8]					;   // X軸が相対軸
   102                              <1> 												;   
   103 000005C1 EB06                <1> 		jmp		.22E							; }
   104                              <1> .22F:											; else
   105                              <1> 												; {
   106 000005C3 8D75F8              <1> 		lea		esi, [ebp - 8]					;   // X軸が基準軸
   107 000005C6 8D7DEC              <1> 		lea		edi, [ebp -20]					;   // Y軸が相対軸
   108                              <1> .22E:											; }
   109                              <1> 
   110                              <1> 		;---------------------------------------
   111                              <1> 		; 繰り返し回数(基準軸のドット数)
   112                              <1> 		;---------------------------------------
   113 000005C9 8B4EFC              <1> 		mov		ecx, [esi - 4]					; ECX = 基準軸描画幅;
   114 000005CC 83F900              <1> 		cmp		ecx, 0							; if (0 == ECX)
   115 000005CF 7505                <1> 		jnz		.30E							; {
   116 000005D1 B901000000          <1> 		mov		ecx, 1							;   ECX = 1;
   117                              <1> .30E:											; }
   118                              <1> 
   119                              <1> 		;---------------------------------------
   120                              <1> 		; 線を描画
   121                              <1> 		;---------------------------------------
   122                              <1> .50L:											; do
   123                              <1> 												; {
   124                              <1> %ifdef	USE_SYSTEM_CALL
   125                              <1> 		mov		eax, ecx						;   // 繰り返し回数を保存
   126                              <1> 
   127                              <1> 		mov		ebx, [ebp +24]					;   EBX = 表示色;
   128                              <1> 		mov		ecx, [ebp - 8]					;   ECX = X座標;
   129                              <1> 		mov		edx, [ebp -20]					;   EDX = Y座標;
   130                              <1> 		int		0x82							;   sys_call(1, X, Y, 色, 文字); BX(C), CX(X), DX(Y)
   131                              <1> 
   132                              <1> 		mov		ecx, eax
   133                              <1> %else
   136 000005D6 FF7518FF75ECFF75F8- <1> 		cdecl	draw_pixel, dword [ebp - 8], 							dword [ebp -20], 							dword [ebp +24]		;   // 点の描画
   136 000005DF E8B7FEFFFF6683C40C  <1>
   137                              <1> %endif
   138                              <1> 												;   // 基準軸を更新(1ドット分)
   139 000005E8 8B46F8              <1> 		mov		eax, [esi - 8]					;   EAX = 基準軸増分(1 or -1);
   140 000005EB 0106                <1> 		add		[esi - 0], eax					;   
   141                              <1> 
   142                              <1> 												;   // 相対軸を更新
   143 000005ED 8B45FC              <1> 		mov		eax, [ebp - 4]					;   EAX  = sum; // 相対軸の積算値;
   144 000005F0 0347FC              <1> 		add		eax, [edi - 4]					;   EAX += dy;  // 増分(相対軸の描画幅)
   145 000005F3 8B5EFC              <1> 		mov		ebx, [esi - 4]					;   EBX  = dx;  // 増分(基準軸の描画幅)
   146                              <1> 
   147 000005F6 39D8                <1> 		cmp		eax, ebx						;   if (積算値 <= 相対軸の増分)
   148 000005F8 7C07                <1> 		jl		.52E							;   {
   149 000005FA 29D8                <1> 		sub		eax, ebx						;     EAX -= EBX; // 積算値から相対軸の増分を減算
   150                              <1> 												;     
   151                              <1> 												;     // 相対軸の座標を更新(1ドット分)
   152 000005FC 8B5FF8              <1> 		mov		ebx, [edi - 8]					;     EBX =  相対軸増分;
   153 000005FF 011F                <1> 		add		[edi - 0], ebx					;     
   154                              <1> .52E:											;   }
   155 00000601 8945FC              <1> 		mov		[ebp - 4], eax					;   // 積算値を更新
   156                              <1> 												;   
   157 00000604 E2D0                <1> 		loop	.50L							;   
   158                              <1> .50E:											; } while (ループ回数--);
   159                              <1> 
   160                              <1> 		;---------------------------------------
   161                              <1> 		; 【レジスタの復帰】
   162                              <1> 		;---------------------------------------
   163 00000606 5F                  <1> 		pop		edi
   164 00000607 5E                  <1> 		pop		esi
   165 00000608 5A                  <1> 		pop		edx
   166 00000609 59                  <1> 		pop		ecx
   167 0000060A 5B                  <1> 		pop		ebx
   168 0000060B 58                  <1> 		pop		eax
   169                              <1> 
   170                              <1> 		;---------------------------------------
   171                              <1> 		; 【スタックフレームの破棄】
   172                              <1> 		;---------------------------------------
   173 0000060C 89EC                <1> 		mov		esp, ebp
   174 0000060E 5D                  <1> 		pop		ebp
   175                              <1> 
   176 0000060F C3                  <1> 		ret
   177                              <1> 
    79                                  %include	"../modules/protect/draw_rect.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	矩形の描画
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_rect(X0, Y0, X1, Y1, color);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	X0		: 始点のX座標
     8                              <1> ;	Y0		: 始点のY座標
     9                              <1> ;	X1		: 終点のX座標
    10                              <1> ;	Y1		: 終点のY座標
    11                              <1> ;	color	: 描画色
    12                              <1> ;
    13                              <1> ;■戻り値	: 無し
    14                              <1> ;************************************************************************
    15                              <1> draw_rect:
    16                              <1> 		;---------------------------------------
    17                              <1> 		; 【スタックフレームの構築】
    18                              <1> 		;---------------------------------------
    19                              <1> 												; ------|--------
    20                              <1> 												; EBP+24| 色
    21                              <1> 												; EBP+20| Y1
    22                              <1> 												; EBP+16| X1
    23                              <1> 												; EBP+12| Y0
    24                              <1> 												; EBP+ 8| X0
    25                              <1> 												; ---------------
    26 00000610 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    27 00000611 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    28                              <1> 												; ------|--------
    29                              <1> 
    30                              <1> 		;---------------------------------------
    31                              <1> 		; 【レジスタの保存】
    32                              <1> 		;---------------------------------------
    33 00000613 50                  <1> 		push		eax
    34 00000614 53                  <1> 		push		ebx
    35 00000615 51                  <1> 		push		ecx
    36 00000616 52                  <1> 		push		edx
    37 00000617 56                  <1> 		push		esi
    38                              <1> 
    39                              <1> 		;---------------------------------------
    40                              <1> 		; 矩形を描画
    41                              <1> 		;---------------------------------------
    42 00000618 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
    43 0000061B 8B5D0C              <1> 		mov		ebx, [ebp +12]					; EBX = Y0;
    44 0000061E 8B4D10              <1> 		mov		ecx, [ebp +16]					; ECX = X1;
    45 00000621 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1;
    46 00000624 8B7518              <1> 		mov		esi, [ebp +24]					; ESI = 色;
    47                              <1> 
    48                              <1> 		;---------------------------------------
    49                              <1> 		; 座標軸の大小を確定
    50                              <1> 		;---------------------------------------
    51 00000627 39C8                <1> 		cmp		eax, ecx						; if (X1 < X0)
    52 00000629 7C01                <1> 		jl		.10E							; {
    53 0000062B 91                  <1> 		xchg	eax, ecx						;   X0とX1を入れ替える;
    54                              <1> .10E:											; }
    55                              <1> 
    56 0000062C 39D3                <1> 		cmp		ebx, edx						; if (Y1 < Y0)
    57 0000062E 7C02                <1> 		jl		.20E							; {
    58 00000630 87DA                <1> 		xchg	ebx, edx						;   Y0とY1を入れ替える;
    59                              <1> .20E:											; }
    60                              <1> 
    61                              <1> 		;---------------------------------------
    62                              <1> 		; 矩形を描画
    63                              <1> 		;---------------------------------------
    64 00000632 5653515350E822FFFF- <1> 		cdecl	draw_line, eax, ebx, ecx, ebx, esi	; 上線
    64 0000063B FF6683C414          <1>
    65 00000640 5652505350E814FFFF- <1> 		cdecl	draw_line, eax, ebx, eax, edx, esi	; 左線
    65 00000649 FF6683C414          <1>
    66                              <1> 
    67 0000064E 4A                  <1> 		dec		edx									; EDX--; // 下線は1ドット上げる
    68 0000064F 5652515250E805FFFF- <1> 		cdecl	draw_line, eax, edx, ecx, edx, esi	; 下線
    68 00000658 FF6683C414          <1>
    69 0000065D 42                  <1> 		inc		edx
    70                              <1> 
    71 0000065E 49                  <1> 		dec		ecx									; ECX--; // 右線は1ドット左に移動
    72 0000065F 5652515351E8F5FEFF- <1> 		cdecl	draw_line, ecx, ebx, ecx, edx, esi	; 右線
    72 00000668 FF6683C414          <1>
    73                              <1> 
    74                              <1> 		;---------------------------------------
    75                              <1> 		; 【レジスタの復帰】
    76                              <1> 		;---------------------------------------
    77 0000066D 5E                  <1> 		pop		esi
    78 0000066E 5A                  <1> 		pop		edx
    79 0000066F 59                  <1> 		pop		ecx
    80 00000670 5B                  <1> 		pop		ebx
    81 00000671 58                  <1> 		pop		eax
    82                              <1> 
    83                              <1> 		;---------------------------------------
    84                              <1> 		; 【スタックフレームの破棄】
    85                              <1> 		;---------------------------------------
    86 00000672 89EC                <1> 		mov		esp, ebp
    87 00000674 5D                  <1> 		pop		ebp
    88                              <1> 
    89 00000675 C3                  <1> 		ret
    90                              <1> 
    80                                  
    81                                  ; パディング
    82                                  
    83 00000676 00<rept>                    times KERNEL_SIZE - ($ - $$) db 0x00
    84                                      
