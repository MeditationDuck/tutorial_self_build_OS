     1                                  %include       "../include/define.s"
     1                              <1> 
     2                              <1> BOOT_SIZE       equ     (1024 * 8)              ;ブートコードサイズ
     3                              <1> KERNEL_SIZE     equ     (1024 * 8)   
     4                              <1> BOOT_LOAD       equ     0x7c00                  ;ブートプログラムのロード位置
     5                              <1>                                                 ;これがないと0x0000にロードされることになってしまうが
     6                              <1>                                                 ;BIOSそこはがすでに使っている領域である
     7                              <1> 
     8                              <1> BOOT_END        equ     (BOOT_LOAD + BOOT_SIZE)
     9                              <1> SECT_SIZE       equ     (512)                   ;セクタサイズ
    10                              <1> BOOT_SECT       equ     (BOOT_SIZE/SECT_SIZE)   ;ブートプログラムのセクタサイズ
    11                              <1> KERNEL_SECT     equ     (KERNEL_SIZE/SECT_SIZE)
    12                              <1> 
    13                              <1> E820_RECORD_SIZE    equ     20
    14                              <1> 
    15                              <1> KERNEL_LOAD     equ     0x0010_1000
    16                              <1> 
    17                              <1>   
     2                                  %include       "../include/macro.s"
     1                              <1> %macro      cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__>>3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 <res 00000002>      <1>         .no     resw    1
    19 00000002 <res 00000002>      <1>         .cyln   resw    1
    20 00000004 <res 00000002>      <1>         .head   resw    1
    21 00000006 <res 00000002>      <1>         .sect   resw    1
    22                              <1> endstruc
    23                              <1> 
     3                                  
     4                                      ORG      KERNEL_LOAD
     5                                  
     6                                  [BITS 32]
     7                                  
     8                                  ; エントリーポイント
     9                                  
    10                                  kernel:
    11                                      
    12                                      ; フォントアドレスを取得
    13 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE
    14 00000005 0FB706                          movzx   eax, word [esi + 0]
    15 00000008 0FB75E02                        movzx   ebx, word [esi + 2]
    16 0000000C C1E004                          shl     eax, 4
    17 0000000F 01D8                            add     eax, ebx
    18 00000011 A3[C4010000]                    mov     [FONT_ADR], eax
    19                                  
    20                                  		;---------------------------------------
    21                                  		; フォントの一覧表示
    22                                  		;---------------------------------------
    23 00000016 6A0D6A3FE820030000-     		cdecl	draw_font, 63, 13				; // フォントの一覧表示
    23 0000001F 6683C408           
    24 00000023 6A046A3FE8A1030000-     		cdecl	draw_color_bar, 63, 4			; // カラーバーの表示
    24 0000002C 6683C408           
    25                                  
    26                                  
    27 00000030 6A0D6A3FE806030000-             cdecl   draw_font, 63, 13
    27 00000039 6683C408           
    28                                  
    29                                  		;---------------------------------------
    30                                  		; 文字列の表示
    31                                  		;---------------------------------------
    32 0000003D 68[B0010000]680F01-     		cdecl	draw_str, 25, 14, 0x010F, .s0	; draw_str();
    32 00000045 00006A0E6A19E83403-
    32 0000004E 00006683C410       
    33                                  
    34                                  
    35                                  
    36                                  		;---------------------------------------
    37                                  		; 線を描画
    38                                  		;---------------------------------------
    39 00000054 6A0F6A006A006A646A-     		cdecl	draw_line, 100, 100,   0,   0, 0x0F
    39 0000005D 64E8A70400006683C4-
    39 00000066 14                 
    40 00000067 6A0F6A0068C8000000-     		cdecl	draw_line, 100, 100, 200,   0, 0x0F
    40 00000070 6A646A64E891040000-
    40 00000079 6683C414           
    41 0000007D 6A0F68C800000068C8-     		cdecl	draw_line, 100, 100, 200, 200, 0x0F
    41 00000086 0000006A646A64E878-
    41 0000008F 0400006683C414     
    42 00000096 6A0F68C80000006A00-     		cdecl	draw_line, 100, 100,   0, 200, 0x0F
    42 0000009F 6A646A64E862040000-
    42 000000A8 6683C414           
    43                                  
    44 000000AC 6A026A006A326A646A-     		cdecl	draw_line, 100, 100,  50,   0, 0x02
    44 000000B5 64E84F0400006683C4-
    44 000000BE 14                 
    45 000000BF 6A036A006896000000-     		cdecl	draw_line, 100, 100, 150,   0, 0x03
    45 000000C8 6A646A64E839040000-
    45 000000D1 6683C414           
    46 000000D5 6A0468C80000006896-     		cdecl	draw_line, 100, 100, 150, 200, 0x04
    46 000000DE 0000006A646A64E820-
    46 000000E7 0400006683C414     
    47 000000EE 6A0568C80000006A32-     		cdecl	draw_line, 100, 100,  50, 200, 0x05
    47 000000F7 6A646A64E80A040000-
    47 00000100 6683C414           
    48                                  
    49 00000104 6A026A326A006A646A-     		cdecl	draw_line, 100, 100,   0,  50, 0x02
    49 0000010D 64E8F70300006683C4-
    49 00000116 14                 
    50 00000117 6A036A3268C8000000-     		cdecl	draw_line, 100, 100, 200,  50, 0x03
    50 00000120 6A646A64E8E1030000-
    50 00000129 6683C414           
    51 0000012D 6A04689600000068C8-     		cdecl	draw_line, 100, 100, 200, 150, 0x04
    51 00000136 0000006A646A64E8C8-
    51 0000013F 0300006683C414     
    52 00000146 6A0568960000006A00-     		cdecl	draw_line, 100, 100,   0, 150, 0x05
    52 0000014F 6A646A64E8B2030000-
    52 00000158 6683C414           
    53                                  
    54 0000015C 6A0F6A006A646A646A-     		cdecl	draw_line, 100, 100, 100,   0, 0x0F
    54 00000165 64E89F0300006683C4-
    54 0000016E 14                 
    55 0000016F 6A0F6A6468C8000000-     		cdecl	draw_line, 100, 100, 200, 100, 0x0F
    55 00000178 6A646A64E889030000-
    55 00000181 6683C414           
    56 00000185 6A0F68C80000006A64-     		cdecl	draw_line, 100, 100, 100, 200, 0x0F
    56 0000018E 6A646A64E873030000-
    56 00000197 6683C414           
    57 0000019B 6A0F6A646A006A646A-     		cdecl	draw_line, 100, 100,   0, 100, 0x0F
    57 000001A4 64E8600300006683C4-
    57 000001AD 14                 
    58                                  
    59 000001AE EBFE                            jmp     $
    60                                  
    61 000001B0 2048656C6C6F2C204B-     .s0         db  " Hello, Kernel! ", 0
    61 000001B9 65726E656C212000   
    62                                  
    63 000001C1 00<rept>                ALIGN 4, db 0
    64 000001C4 00000000                FONT_ADR: dd 0
    65                                  ;   モジュール
    66                                  %include	"../modules/protect/vga.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	読み込みプレーンの選択
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void vga_set_read_plane(plane);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	plane	: 読み込みプレーン
     8                              <1> ;
     9                              <1> ;■戻り値	: 無し
    10                              <1> ;************************************************************************
    11                              <1> vga_set_read_plane:
    12                              <1> 		;---------------------------------------
    13                              <1> 		; 【スタックフレームの構築】
    14                              <1> 		;---------------------------------------
    15                              <1> 												; EBP+ 8| プレーン（インデックス）
    16                              <1> 												; ------+----------------
    17 000001C8 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    18 000001C9 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    19                              <1> 												; ------+----------------
    20                              <1> 
    21                              <1> 		;---------------------------------------
    22                              <1> 		; 【レジスタの保存】
    23                              <1> 		;---------------------------------------
    24 000001CB 50                  <1> 		push	eax
    25 000001CC 52                  <1> 		push	edx
    26                              <1> 
    27                              <1> 		;---------------------------------------
    28                              <1> 		; 読み込みプレーンの選択
    29                              <1> 		;---------------------------------------
    30 000001CD 8A6508              <1> 		mov		ah, [ebp + 8]					; AH  = プレーンを選択（3=輝度, 2～0=RGB）
    31 000001D0 80E403              <1> 		and		ah, 0x03						; AH &= 0x03; // 余計なビットをマスク
    32 000001D3 B004                <1> 		mov		al, 0x04						; AL  = 読み込みプレーン選択レジスタ
    33 000001D5 66BACE03            <1> 		mov		dx, 0x03CE						; DX  = グラフィックス制御ポート
    34 000001D9 66EF                <1> 		out		dx, ax							; // ポート出力
    35                              <1> 
    36                              <1> 		;---------------------------------------
    37                              <1> 		; 【レジスタの復帰】
    38                              <1> 		;---------------------------------------
    39 000001DB 5A                  <1> 		pop		edx
    40 000001DC 58                  <1> 		pop		eax
    41                              <1> 
    42                              <1> 		;---------------------------------------
    43                              <1> 		; 【スタックフレームの破棄】
    44                              <1> 		;---------------------------------------
    45 000001DD 89EC                <1> 		mov		esp, ebp
    46 000001DF 5D                  <1> 		pop		ebp
    47                              <1> 
    48 000001E0 C3                  <1> 		ret
    49                              <1> 
    50                              <1> ;************************************************************************
    51                              <1> ;	書き込みプレーンを選択
    52                              <1> ;========================================================================
    53                              <1> ;■書式		: void vga_set_write_plane(plane);
    54                              <1> ;
    55                              <1> ;■引数
    56                              <1> ;	plane	: 書き込みプレーン
    57                              <1> ;
    58                              <1> ;■戻り値	: 無し
    59                              <1> ;************************************************************************
    60                              <1> vga_set_write_plane:
    61                              <1> 		;---------------------------------------
    62                              <1> 		; 【スタックフレームの構築】
    63                              <1> 		;---------------------------------------
    64                              <1> 												; EBP+ 8| プレーン（ビット指定）
    65                              <1> 												; ------+----------------
    66 000001E1 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    67 000001E2 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    68                              <1> 												; ------+----------------
    69                              <1> 
    70                              <1> 		;---------------------------------------
    71                              <1> 		; 【レジスタの保存】
    72                              <1> 		;---------------------------------------
    73 000001E4 50                  <1> 		push	eax
    74 000001E5 52                  <1> 		push	edx
    75                              <1> 
    76                              <1> 		;---------------------------------------
    77                              <1> 		; 書き込みプレーンの選択
    78                              <1> 		;---------------------------------------
    79 000001E6 8A6508              <1> 		mov		ah, [ebp + 8]					; AH = 書き込みプレーンを指定(Bit:----IRGB)
    80 000001E9 80E40F              <1> 		and		ah, 0x0F						; AH = 0x0F; // 余計なビットをマスク
    81 000001EC B002                <1> 		mov		al, 0x02						; AL = 書き込みプレーン選択
    82 000001EE 66BAC403            <1> 		mov		dx, 0x03C4						; DX = シーケンサ制御ポート
    83 000001F2 66EF                <1> 		out		dx, ax							; // ポート出力
    84                              <1> 
    85                              <1> 		;---------------------------------------
    86                              <1> 		; 【レジスタの復帰】
    87                              <1> 		;---------------------------------------
    88 000001F4 5A                  <1> 		pop		edx
    89 000001F5 58                  <1> 		pop		eax
    90                              <1> 
    91                              <1> 		;---------------------------------------
    92                              <1> 		; 【スタックフレームの破棄】
    93                              <1> 		;---------------------------------------
    94 000001F6 89EC                <1> 		mov		esp, ebp
    95 000001F8 5D                  <1> 		pop		ebp
    96                              <1> 
    97 000001F9 C3                  <1> 		ret
    98                              <1> 
    99                              <1> ;************************************************************************
   100                              <1> ;	フォントの書き込み
   101                              <1> ;========================================================================
   102                              <1> ;■書式		: void vram_font_copy(font, vram, plane, color);
   103                              <1> ;
   104                              <1> ;■引数
   105                              <1> ;	font	: FONTアドレス
   106                              <1> ;	vram	: VRAMアドレス
   107                              <1> ;	plane	: 出力プレーン（１つのプレーンのみをビットで指定）
   108                              <1> ;	color	: 描画色
   109                              <1> ;
   110                              <1> ;■戻り値	: 無し
   111                              <1> ;************************************************************************
   112                              <1> vram_font_copy:
   113                              <1> 		;---------------------------------------
   114                              <1> 		; 【スタックフレームの構築】
   115                              <1> 		;---------------------------------------
   116                              <1> 												; EBP+20| 色（背景/前景色）
   117                              <1> 												; EBP+16| プレーン（ビット指定）
   118                              <1> 												; EBP+12| VRAMアドレス
   119                              <1> 												; EBP+ 8| FONTアドレス
   120                              <1> 												; ------+----------------
   121 000001FA 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   122 000001FB 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   123                              <1> 												; ------+----------------
   124                              <1> 
   125                              <1> 		;---------------------------------------
   126                              <1> 		; 【レジスタの保存】
   127                              <1> 		;---------------------------------------
   128 000001FD 50                  <1> 		push	eax
   129 000001FE 53                  <1> 		push	ebx
   130 000001FF 51                  <1> 		push	ecx
   131 00000200 52                  <1> 		push	edx
   132 00000201 56                  <1> 		push	esi
   133 00000202 57                  <1> 		push	edi
   134                              <1> 
   135                              <1> 		;---------------------------------------
   136                              <1> 		; 【処理の開始】
   137                              <1> 		;---------------------------------------
   138 00000203 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = フォントアドレス;
   139 00000206 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   140 00000209 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   141 0000020D 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 色;
   142                              <1> 
   143 00000211 84C7                <1> 		test	bh, al							; ZF = (背景色 & プレーン);
   144 00000213 0F94C6              <1> 		setz	dh								; AH = ZF ? 0x01 : 0x00
   145 00000216 FECE                <1> 		dec		dh								; AH--; // 0x00 or 0xFF
   146                              <1> 
   147 00000218 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   148 0000021A 0F94C2              <1> 		setz	dl								; AL = ZF ? 0x01 : 0x00
   149 0000021D FECA                <1> 		dec		dl								; AL--; // 0x00 or 0xFF
   150                              <1> 
   151                              <1> 		;---------------------------------------
   152                              <1> 		; 16ドットフォントのコピー
   153                              <1> 		;---------------------------------------
   154 0000021F FC                  <1> 		cld										; DF  = 0; // アドレス加算
   155                              <1> 
   156 00000220 B910000000          <1> 		mov		ecx, 16							; ECX = 16; // 16ドット
   157                              <1> .10L:											; do
   158                              <1> 												; {
   159                              <1> 		;---------------------------------------
   160                              <1> 		; フォントマスクの作成
   161                              <1> 		;---------------------------------------
   162 00000225 AC                  <1> 		lodsb									;   AL  = *ESI++; //  フォント
   163 00000226 88C4                <1> 		mov		ah, al							;   AH ~= AL;     // !フォント（ビット反転）
   164 00000228 F6D4                <1> 		not		ah								;   
   165                              <1> 
   166                              <1> 		;---------------------------------------
   167                              <1> 		; 前景色
   168                              <1> 		;---------------------------------------
   169 0000022A 20D0                <1> 		and		al, dl							;   AL = 前景色 & フォント;
   170                              <1> 
   171                              <1> 		;---------------------------------------
   172                              <1> 		; 背景色
   173                              <1> 		;---------------------------------------
   174 0000022C F7C310000000        <1> 		test	ebx, 0x0010						;   if (透過モード)
   175 00000232 7404                <1> 		jz		.11F							;   {
   176 00000234 2227                <1> 		and		ah, [edi]						;     AH = !フォント & [EDI] // 現在値
   177 00000236 EB02                <1> 		jmp		.11E							;   }
   178                              <1> .11F:											;   else
   179                              <1> 												;   {
   180 00000238 20F4                <1> 		and		ah, dh							;     AH = !フォント & 背景色;
   181                              <1> .11E:											;   }
   182                              <1> 
   183                              <1> 		;---------------------------------------
   184                              <1> 		; 前景色と背景色を合成
   185                              <1> 		;---------------------------------------
   186 0000023A 08E0                <1> 		or		al, ah							;   AL  = 背景 | 前景;
   187                              <1> 
   188                              <1> 		;---------------------------------------
   189                              <1> 		; 新しい値を出力
   190                              <1> 		;---------------------------------------
   191 0000023C 8807                <1> 		mov		[edi], al						;   [EDI] = AL; // プレーンに書き込む
   192                              <1> 
   193 0000023E 83C750              <1> 		add		edi, 80							;   EDI += 80;
   194 00000241 E2E2                <1> 		loop	.10L							; } while (--ECX);
   195                              <1> .10E:											; 
   196                              <1> 
   197                              <1> 		;---------------------------------------
   198                              <1> 		; 【レジスタの復帰】
   199                              <1> 		;---------------------------------------
   200 00000243 5F                  <1> 		pop		edi
   201 00000244 5E                  <1> 		pop		esi
   202 00000245 5A                  <1> 		pop		edx
   203 00000246 59                  <1> 		pop		ecx
   204 00000247 5B                  <1> 		pop		ebx
   205 00000248 58                  <1> 		pop		eax
   206                              <1> 
   207                              <1> 		;---------------------------------------
   208                              <1> 		; 【スタックフレームの破棄】
   209                              <1> 		;---------------------------------------
   210 00000249 89EC                <1> 		mov		esp, ebp
   211 0000024B 5D                  <1> 		pop		ebp
   212                              <1> 
   213 0000024C C3                  <1> 		ret
   214                              <1> 
   215                              <1> ;************************************************************************
   216                              <1> ;	ビットパターンの書き込み
   217                              <1> ;========================================================================
   218                              <1> ;■書式		: void vram_bit_copy(bit, vram, flag);
   219                              <1> ;
   220                              <1> ;■引数
   221                              <1> ;	bit		: 出力ビットパターン
   222                              <1> ;	vram	: VRAMアドレス
   223                              <1> ;	flag	: 1:セット, 0:クリア
   224                              <1> ;
   225                              <1> ;■戻り値	: 無し
   226                              <1> ;************************************************************************
   227                              <1> vram_bit_copy:
   228                              <1> 		;---------------------------------------
   229                              <1> 		; 【スタックフレームの構築】
   230                              <1> 		;---------------------------------------
   231                              <1> 												; EBP+20| 色（背景/前景色）
   232                              <1> 												; EBP+16| プレーン（ビット指定）
   233                              <1> 												; EBP+12| VRAMアドレス
   234                              <1> 												; EBP+ 8| 出力ビットパターン
   235                              <1> 												; ------+----------------
   236 0000024D 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   237 0000024E 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   238                              <1> 												; ------+----------------
   239                              <1> 
   240                              <1> 		;---------------------------------------
   241                              <1> 		; 【レジスタの保存】
   242                              <1> 		;---------------------------------------
   243 00000250 50                  <1> 		push	eax
   244 00000251 53                  <1> 		push	ebx
   245 00000252 57                  <1> 		push	edi
   246                              <1> 
   247                              <1> 		;---------------------------------------
   248                              <1> 		; 【処理の開始】
   249                              <1> 		;---------------------------------------
   250 00000253 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   251 00000256 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   252 0000025A 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 表示色;
   253                              <1> 
   254 0000025E 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   255 00000260 0F94C3              <1> 		setz	bl								; BL = ZF ? 0x01 : 0x00
   256 00000263 FECB                <1> 		dec		bl								; BL--; // 0x00 or 0xFF
   257                              <1> 
   258                              <1> 		;---------------------------------------
   259                              <1> 		; マスクデータの作成
   260                              <1> 		;---------------------------------------
   261 00000265 8A4508              <1> 		mov		al, [ebp + 8]					; AL = 出力ビットパターン;
   262 00000268 88C4                <1> 		mov		ah, al							; AH ~= AL;     // !出力ビットパターン（ビット反転）
   263 0000026A F6D4                <1> 		not		ah								; 
   264                              <1> 
   265                              <1> 		;---------------------------------------
   266                              <1> 		; 現在値の出力を取得
   267                              <1> 		;---------------------------------------
   268 0000026C 2227                <1> 		and		ah, [edi]						; AH  = 現在値 & !出力ビットパターン
   269 0000026E 20D8                <1> 		and		al, bl							; AL  = 表示色 &  出力ビットパターン
   270 00000270 08E0                <1> 		or		al, ah							; AL |= AH;
   271                              <1> 
   272                              <1> 		;---------------------------------------
   273                              <1> 		; 新しい値を出力
   274                              <1> 		;---------------------------------------
   275 00000272 8807                <1> 		mov		[edi], al						; [EDI] = BL; // プレーンに書き込む
   276                              <1> 
   277                              <1> 		;---------------------------------------
   278                              <1> 		; 【レジスタの復帰】
   279                              <1> 		;---------------------------------------
   280 00000274 5F                  <1> 		pop		edi
   281 00000275 5B                  <1> 		pop		ebx
   282 00000276 58                  <1> 		pop		eax
   283                              <1> 
   284                              <1> 		;---------------------------------------
   285                              <1> 		; 【スタックフレームの破棄】
   286                              <1> 		;---------------------------------------
   287 00000277 89EC                <1> 		mov		esp, ebp
   288 00000279 5D                  <1> 		pop		ebp
   289                              <1> 
   290 0000027A C3                  <1> 		ret
   291                              <1> 
    67                                  %include	"../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1> 		;---------------------------------------
     3                              <1> 		; 【スタックフレームの構築】
     4                              <1> 		;---------------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+20| 文字
     7                              <1> 												; EBP+16| 色
     8                              <1> 												; EBP+12| Y（行）
     9                              <1> 												; EBP+ 8| X（列）
    10                              <1> 												; ------+----------------
    11 0000027B 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    12 0000027C 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    13                              <1> 												; ------+----------------
    14                              <1> 
    15                              <1> 		;---------------------------------------
    16                              <1> 		; 【レジスタの保存】
    17                              <1> 		;---------------------------------------
    18 0000027E 50                  <1> 		push	eax
    19 0000027F 53                  <1> 		push	ebx
    20 00000280 51                  <1> 		push	ecx
    21 00000281 52                  <1> 		push	edx
    22 00000282 56                  <1> 		push	esi
    23 00000283 57                  <1> 		push	edi
    24                              <1> 		;---------------------------------------
    25                              <1> 		; テストアンドセット
    26                              <1> 		;---------------------------------------
    27                              <1> %ifdef	USE_TEST_AND_SET
    28                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
    29                              <1> %endif
    30                              <1> 
    31                              <1>         ;コピー元のアドレスを取得
    32 00000284 0FB67514            <1>         movzx   esi, byte [ebp +20]
    33 00000288 C1E604              <1>         shl     esi, 4
    34 0000028B 0335[C4010000]      <1>         add     esi, [FONT_ADR]
    35                              <1> 
    36                              <1>         ;コピー先のアドレスを取得
    37 00000291 8B7D0C              <1>         mov     edi, [ebp +12]
    38 00000294 C1E708              <1>         shl     edi, 8
    39 00000297 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]
    40 0000029E 037D08              <1>         add     edi, [ebp + 8]
    41                              <1> 
    42                              <1>         ;一文字分のフォントを出力
    43 000002A1 0FB75D10            <1> 		movzx	ebx, word [ebp +16]				; // 表示色
    44                              <1> 
    45 000002A5 6A03E81CFFFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 読み込みプレーン：輝度(I)
    45 000002AE C404                <1>
    46 000002B0 6A08E82AFFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 書き込みプレーン：輝度(I)
    46 000002B9 C404                <1>
    47 000002BB 536A085756E835FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x08, ebx
    47 000002C4 FF6683C410          <1>
    48                              <1> 
    49 000002C9 6A02E8F8FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 読み込みプレーン：赤(R)
    49 000002D2 C404                <1>
    50 000002D4 6A04E806FFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 書き込みプレーン：赤(R)
    50 000002DD C404                <1>
    51 000002DF 536A045756E811FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x04, ebx
    51 000002E8 FF6683C410          <1>
    52                              <1> 
    53 000002ED 6A01E8D4FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 読み込みプレーン：緑(G)
    53 000002F6 C404                <1>
    54 000002F8 6A02E8E2FEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 書き込みプレーン：緑(G)
    54 00000301 C404                <1>
    55 00000303 536A025756E8EDFEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x02, ebx
    55 0000030C FF6683C410          <1>
    56                              <1> 
    57 00000311 6A00E8B0FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 読み込みプレーン：青(B)
    57 0000031A C404                <1>
    58 0000031C 6A01E8BEFEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 書き込みプレーン：青(B)
    58 00000325 C404                <1>
    59 00000327 536A015756E8C9FEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x01, ebx
    59 00000330 FF6683C410          <1>
    60                              <1> 
    61                              <1> %ifdef	USE_TEST_AND_SET
    62                              <1> 		;---------------------------------------
    63                              <1> 		; テストアンドセット
    64                              <1> 		;---------------------------------------
    65                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
    66                              <1> %endif
    67                              <1> 
    68                              <1> 		;---------------------------------------
    69                              <1> 		; 【レジスタの復帰】
    70                              <1> 		;---------------------------------------
    71 00000335 5F                  <1> 		pop		edi
    72 00000336 5E                  <1> 		pop		esi
    73 00000337 5A                  <1> 		pop		edx
    74 00000338 59                  <1> 		pop		ecx
    75 00000339 5B                  <1> 		pop		ebx
    76 0000033A 58                  <1> 		pop		eax
    77                              <1> 
    78                              <1> 		;---------------------------------------
    79                              <1> 		; 【スタックフレームの破棄】
    80                              <1> 		;---------------------------------------
    81 0000033B 89EC                <1> 		mov		esp, ebp
    82 0000033D 5D                  <1> 		pop		ebp
    83                              <1> 
    84 0000033E C3                  <1> 		ret
    85                              <1> 
    86                              <1> %ifdef USE_TEST_AND_SET
    87                              <1> ALIGN 4, db 0
    88                              <1> IN_USE:	dd	0
    89                              <1> %endif
    90                              <1> 
    68                                  %include	"../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1> 		;---------------------------------------
     3                              <1> 		; 【スタックフレームの構築】
     4                              <1> 		;---------------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+12| Y（行）
     7                              <1> 												; EBP+ 8| X（列）
     8                              <1> 												; ---------------
     9 0000033F 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    10 00000340 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    11                              <1> 												; ---------------
    12                              <1> 
    13                              <1> 		;---------------------------------------
    14                              <1> 		; 【レジスタの保存】
    15                              <1> 		;---------------------------------------
    16 00000342 50                  <1> 		push	eax
    17 00000343 53                  <1> 		push	ebx
    18 00000344 51                  <1> 		push	ecx
    19 00000345 52                  <1> 		push	edx
    20 00000346 56                  <1> 		push	esi
    21 00000347 57                  <1> 		push	edi
    22                              <1> 
    23                              <1> 		;---------------------------------------
    24                              <1> 		; 表示位置
    25                              <1> 		;---------------------------------------
    26 00000348 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
    27 0000034B 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
    28                              <1> 
    29 0000034E B900000000          <1>         mov     ecx, 0
    30 00000353 81F900010000        <1> .10L:   cmp     ecx, 256
    31 00000359 731F                <1>         jae     .10E
    32                              <1> 
    33 0000035B 89C8                <1>         mov     eax, ecx
    34 0000035D 83E00F              <1>         and     eax, 0x0F
    35 00000360 01F0                <1>         add     eax, esi            ;列 0 => 11110000 として端っこによるようにする
    36                              <1> 
    37 00000362 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
    38 00000364 C1EB04              <1> 		shr		ebx, 4							;   EBX /= 16
    39 00000367 01FB                <1> 		add		ebx, edi						;   EBX += Y;       ;行 １６で割ったときに商がいくつか
    40                              <1> 
    41 00000369 516A075350E808FFFF- <1> 		cdecl	draw_char, eax, ebx, 0x07, ecx	;   draw_char();
    41 00000372 FF6683C410          <1>
    42                              <1> 
    43 00000377 41                  <1> 		inc		ecx								;   // for (... ECX++)
    44 00000378 EBD9                <1> 		jmp		.10L							; 
    45                              <1> .10E:											; }
    46                              <1> 
    47                              <1> 		;---------------------------------------
    48                              <1> 		; 【レジスタの復帰】
    49                              <1> 		;---------------------------------------
    50 0000037A 5F                  <1> 		pop		edi
    51 0000037B 5E                  <1> 		pop		esi
    52 0000037C 5A                  <1> 		pop		edx
    53 0000037D 59                  <1> 		pop		ecx
    54 0000037E 5B                  <1> 		pop		ebx
    55 0000037F 58                  <1> 		pop		eax
    56                              <1> 
    57                              <1> 		;---------------------------------------
    58                              <1> 		; 【スタックフレームの破棄】
    59                              <1> 		;---------------------------------------
    60 00000380 89EC                <1> 		mov		esp, ebp
    61 00000382 5D                  <1> 		pop		ebp
    62                              <1> 
    63 00000383 C3                  <1> 		ret
    64                              <1> 
    69                                  %include	"../modules/protect/draw_str.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	文字列の表示
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_str(col, row, color, p);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	col		: 列
     8                              <1> ;	row		: 行
     9                              <1> ;	color	: 描画色
    10                              <1> ;	p		: 文字列のアドレス
    11                              <1> ;
    12                              <1> ;■戻り値	: 無し
    13                              <1> ;************************************************************************
    14                              <1> draw_str:
    15                              <1> 		;---------------------------------------
    16                              <1> 		; 【スタックフレームの構築】
    17                              <1> 		;---------------------------------------
    18                              <1> 												; ------|--------
    19                              <1> 												; EBP+20| *p（文字列のアドレス）
    20                              <1> 												; EBP+16| color（色）
    21                              <1> 												; EBP+12| row（行）
    22                              <1> 												; EBP+ 8| col（列）
    23                              <1> 												; ---------------
    24 00000384 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    25 00000385 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    26                              <1> 												; ---------------
    27                              <1> 
    28                              <1> 		;---------------------------------------
    29                              <1> 		; 【レジスタの保存】
    30                              <1> 		;---------------------------------------
    31 00000387 50                  <1> 		push	eax
    32 00000388 53                  <1> 		push	ebx
    33 00000389 51                  <1> 		push	ecx
    34 0000038A 52                  <1> 		push	edx
    35 0000038B 56                  <1> 		push	esi
    36                              <1> 
    37                              <1> 		;---------------------------------------
    38                              <1> 		; 文字列の表示
    39                              <1> 		;---------------------------------------
    40 0000038C 8B4D08              <1> 		mov		ecx, [ebp + 8]					; ECX = 列;
    41 0000038F 8B550C              <1> 		mov		edx, [ebp +12]					; EDX = 行;
    42 00000392 0FB75D10            <1> 		movzx	ebx, word [ebp + 16]			; EBX = 表示色;
    43 00000396 8B7514              <1> 		mov		esi, [ebp +20]					; ESI = 文字列のアドレス;
    44                              <1> 
    45 00000399 FC                  <1> 		cld										; DF = 0; // アドレス加算
    46                              <1> .10L:											; do
    47                              <1> 												; {
    48 0000039A AC                  <1> 		lodsb									;   AL = *ESI++; // 文字を取得
    49 0000039B 3C00                <1> 		cmp		al, 0							;   if (0 == AL)
    50 0000039D 7425                <1> 		je		.10E							;     break;
    51                              <1> 
    52                              <1> 		;---------------------------------------
    53                              <1> 		; 1文字表示
    54                              <1> 		;---------------------------------------
    55                              <1> %ifdef	USE_SYSTEM_CALL
    56                              <1> 		int		0x81							;   sys_call(1, X, Y, 色, 文字);
    57                              <1> %else
    58 0000039F 50535251E8D3FEFFFF- <1> 		cdecl	draw_char, ecx, edx, ebx, eax	;   draw_char();
    58 000003A8 6683C410            <1>
    59                              <1> %endif
    60                              <1> 
    61                              <1> 		; 次の文字の位置を調整
    62 000003AC 41                  <1> 		inc		ecx								;   ECX++;           // 列を加算
    63 000003AD 83F950              <1> 		cmp		ecx, 80							;   if (80 <= ECX)   // 80文字以上？
    64 000003B0 7C10                <1> 		jl		.12E							;   {
    65 000003B2 B900000000          <1> 		mov		ecx, 0							;     ECX = 0;       // 列を初期化
    66 000003B7 42                  <1> 		inc		edx								;     EDX++;         // 行を加算
    67 000003B8 83FA1E              <1> 		cmp		edx, 30							;     if (30 <= EDX) // 30行以上？
    68 000003BB 7C05                <1> 		jl		.12E							;     {
    69 000003BD BA00000000          <1> 		mov		edx, 0							;       EDX = 0;     // 行を初期化
    70                              <1> 												;     }
    71                              <1> .12E:											;   }
    72 000003C2 EBD6                <1> 		jmp		.10L							;   
    73                              <1> .10E:											; } while (1);
    74                              <1> 
    75                              <1> 		;---------------------------------------
    76                              <1> 		; 【レジスタの復帰】
    77                              <1> 		;---------------------------------------
    78 000003C4 5E                  <1> 		pop		esi
    79 000003C5 5A                  <1> 		pop		edx
    80 000003C6 59                  <1> 		pop		ecx
    81 000003C7 5B                  <1> 		pop		ebx
    82 000003C8 58                  <1> 		pop		eax
    83                              <1> 
    84                              <1> 		;---------------------------------------
    85                              <1> 		; 【スタックフレームの破棄】
    86                              <1> 		;---------------------------------------
    87 000003C9 89EC                <1> 		mov		esp, ebp
    88 000003CB 5D                  <1> 		pop		ebp
    89                              <1> 
    90 000003CC C3                  <1> 		ret
    91                              <1> 
    70                                  %include	"../modules/protect/draw_color_bar.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	カラーバーの表示
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_color_bar(col, row);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	col		: 列
     8                              <1> ;	row		: 行
     9                              <1> ;
    10                              <1> ;■戻り値	: 無し
    11                              <1> ;************************************************************************
    12                              <1> draw_color_bar:
    13                              <1> 		;---------------------------------------
    14                              <1> 		; 【スタックフレームの構築】
    15                              <1> 		;---------------------------------------
    16                              <1> 												; ------|--------
    17                              <1> 												; EBP+ 8| X（列）
    18                              <1> 												; EBP+12| Y（行）
    19                              <1> 												; ---------------
    20 000003CD 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    21 000003CE 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    22                              <1> 												; ---------------
    23                              <1> 		;---------------------------------------
    24                              <1> 		; 【レジスタの保存】
    25                              <1> 		;---------------------------------------
    26 000003D0 50                  <1> 		push	eax
    27 000003D1 53                  <1> 		push	ebx
    28 000003D2 51                  <1> 		push	ecx
    29 000003D3 52                  <1> 		push	edx
    30 000003D4 56                  <1> 		push	esi
    31 000003D5 57                  <1> 		push	edi
    32                              <1> 
    33                              <1> 		;---------------------------------------
    34                              <1> 		; 表示位置
    35                              <1> 		;---------------------------------------
    36 000003D6 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
    37 000003D9 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
    38                              <1> 
    39                              <1> 		;---------------------------------------
    40                              <1> 		; カラーバーを表示
    41                              <1> 		;---------------------------------------
    42 000003DC B900000000          <1> 		mov		ecx, 0							; for (ECX = 0;
    43 000003E1 83F910              <1> .10L:	cmp		ecx, 16							;      ECX < 16;
    44 000003E4 732E                <1> 		jae		.10E							; 
    45                              <1> 												;      ECX++)
    46                              <1> 												; {
    47                              <1> 												;   // 桁位置の計算
    48 000003E6 89C8                <1> 		mov		eax, ecx						;   EAX  = ECX;
    49 000003E8 83E001              <1> 		and		eax, 0x01						;   EAX &= 0x01;
    50 000003EB C1E003              <1> 		shl		eax, 3							;   EAX *= 8;  // 8文字分乗算
    51 000003EE 01F0                <1> 		add		eax, esi						;   EAX += X;
    52                              <1> 												;   
    53                              <1> 												;   // 行位置の計算
    54 000003F0 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
    55 000003F2 D1EB                <1> 		shr		ebx, 1							;   EBX /= 2
    56 000003F4 01FB                <1> 		add		ebx, edi						;   EBX += Y;
    57                              <1> 												;   
    58                              <1> 												;   // 表示色の取得
    59 000003F6 89CA                <1> 		mov		edx, ecx						;   EDX  = ECX;
    60 000003F8 D1E2                <1> 		shl		edx, 1							;   EDX *= 2;
    61 000003FA 8B92[27040000]      <1> 		mov		edx, [.t0 + edx]				;   EDX += Y;
    62                              <1> 
    63 00000400 68[1E040000]525350- <1> 		cdecl	draw_str, eax, ebx, edx, .s0	;   draw_str();
    63 00000408 E877FFFFFF6683C410  <1>
    64                              <1> 
    65 00000411 41                  <1> 		inc		ecx								;   // for (... ECX++)
    66 00000412 EBCD                <1> 		jmp		.10L							; 
    67                              <1> .10E:											; }
    68                              <1> 
    69                              <1> 		;---------------------------------------
    70                              <1> 		; 【レジスタの復帰】
    71                              <1> 		;---------------------------------------
    72 00000414 5F                  <1> 		pop		edi
    73 00000415 5E                  <1> 		pop		esi
    74 00000416 5A                  <1> 		pop		edx
    75 00000417 59                  <1> 		pop		ecx
    76 00000418 5B                  <1> 		pop		ebx
    77 00000419 58                  <1> 		pop		eax
    78                              <1> 
    79                              <1> 		;---------------------------------------
    80                              <1> 		; 【スタックフレームの破棄】
    81                              <1> 		;---------------------------------------
    82 0000041A 89EC                <1> 		mov		esp, ebp
    83 0000041C 5D                  <1> 		pop		ebp
    84                              <1> 
    85 0000041D C3                  <1> 		ret
    86                              <1> 
    87 0000041E 202020202020202000  <1> .s0:	db '        ', 0						; 8文字分のスペース（表示色だけを変更）
    88                              <1> 
    89 00000427 00000008            <1> .t0:	dw	0x0000, 0x0800						; カラーバーの背景色
    90 0000042B 00010009            <1> 		dw	0x0100, 0x0900
    91 0000042F 0002000A            <1> 		dw	0x0200, 0x0A00
    92 00000433 0003000B            <1> 		dw	0x0300, 0x0B00
    93 00000437 0004000C            <1> 		dw	0x0400, 0x0C00
    94 0000043B 0005000D            <1> 		dw	0x0500, 0x0D00
    95 0000043F 0006000E            <1> 		dw	0x0600, 0x0E00
    96 00000443 0007000F            <1> 		dw	0x0700, 0x0F00
    97                              <1> 
    71                                  %include	"../modules/protect/draw_pixel.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	ピクセルの描画
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_pixel(X, Y, color);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	X		: X座標
     8                              <1> ;	Y		: Y座標
     9                              <1> ;	color	: 描画色
    10                              <1> ;
    11                              <1> ;■戻り値	: 無し
    12                              <1> ;************************************************************************
    13                              <1> draw_pixel:
    14                              <1> 		;---------------------------------------
    15                              <1> 		; 【スタックフレームの構築】
    16                              <1> 		;---------------------------------------
    17                              <1> 												; ------|--------
    18                              <1> 												; EBP+16| 色
    19                              <1> 												; EBP+12| Y
    20                              <1> 												; EBP+ 8| X
    21                              <1> 												; ------|--------
    22 00000447 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    23 00000448 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    24                              <1> 												; ------+--------
    25                              <1> 		;---------------------------------------
    26                              <1> 		; 【レジスタの保存】
    27                              <1> 		;---------------------------------------
    28 0000044A 50                  <1> 		push	eax
    29 0000044B 53                  <1> 		push	ebx
    30 0000044C 51                  <1> 		push	ecx
    31 0000044D 57                  <1> 		push	edi
    32                              <1>         
    33                              <1> 		;---------------------------------------
    34                              <1> 		; Y座標を80倍する（640/8）
    35                              <1> 		;---------------------------------------
    36                              <1> 
    37 0000044E 8B7D0C              <1>         mov     edi, [ebp +12]
    38 00000451 C1E704              <1>         shl     edi, 4
    39 00000454 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000]
    40                              <1> 
    41 0000045B 8B5D08              <1>         mov     ebx, [ebp + 8]
    42 0000045E 89D9                <1>         mov     ecx, ebx
    43 00000460 C1EB03              <1>         shr     ebx, 3
    44 00000463 01DF                <1>         add     edi, ebx
    45                              <1> 
    46 00000465 83E107              <1>         and     ecx, 0x07
    47 00000468 BB80000000          <1>         mov     ebx, 0x80
    48 0000046D D3EB                <1>         shr     ebx, cl
    49                              <1> 
    50 0000046F 8B4D10              <1>         mov     ecx, [ebp +16]
    51                              <1> 
    52                              <1> %ifdef	USE_TEST_AND_SET
    53                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
    54                              <1> %endif
    55                              <1> 
    56                              <1> 		;---------------------------------------
    57                              <1> 		; プレーン毎に出力
    58                              <1> 		;---------------------------------------
    59 00000472 6A03E84FFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 輝度(I)プレーンを選択
    59 0000047B C404                <1>
    60 0000047D 6A08E85DFDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 輝度(I)プレーンを選択
    60 00000486 C404                <1>
    61 00000488 516A085753E8BBFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x08, ecx
    61 00000491 FF6683C410          <1>
    62                              <1> 
    63 00000496 6A02E82BFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 赤(R)プレーンを選択
    63 0000049F C404                <1>
    64 000004A1 6A04E839FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 赤(R)プレーンを選択
    64 000004AA C404                <1>
    65 000004AC 516A045753E897FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x04, ecx
    65 000004B5 FF6683C410          <1>
    66                              <1> 
    67 000004BA 6A01E807FDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 緑(G)プレーンを選択
    67 000004C3 C404                <1>
    68 000004C5 6A02E815FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 緑(G)プレーンを選択
    68 000004CE C404                <1>
    69 000004D0 516A025753E873FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x02, ecx
    69 000004D9 FF6683C410          <1>
    70                              <1> 
    71 000004DE 6A00E8E3FCFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 青(B)プレーンを選択
    71 000004E7 C404                <1>
    72 000004E9 6A01E8F1FCFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 青(B)プレーンを選択
    72 000004F2 C404                <1>
    73 000004F4 516A015753E84FFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x01, ecx
    73 000004FD FF6683C410          <1>
    74                              <1> 
    75                              <1> 
    76                              <1> %ifdef	USE_TEST_AND_SET
    77                              <1> 		;---------------------------------------
    78                              <1> 		; テストアンドセット
    79                              <1> 		;---------------------------------------
    80                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
    81                              <1> %endif
    82                              <1> 
    83                              <1> 		;---------------------------------------
    84                              <1> 		; 【レジスタの復帰】
    85                              <1> 		;---------------------------------------
    86 00000502 5F                  <1> 		pop		edi
    87 00000503 59                  <1> 		pop		ecx
    88 00000504 5B                  <1> 		pop		ebx
    89 00000505 58                  <1> 		pop		eax
    90                              <1> 
    91                              <1> 		;---------------------------------------
    92                              <1> 		; 【スタックフレームの破棄】
    93                              <1> 		;---------------------------------------
    94 00000506 89EC                <1> 		mov		esp, ebp
    95 00000508 5D                  <1> 		pop		ebp
    96                              <1> 
    97 00000509 C3                  <1> 		ret
    98                              <1> 
    72                                  %include	"../modules/protect/draw_line.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	直線の描画
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_line(X0, Y0, X1, Y1, color);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	X0		: 始点のX座標
     8                              <1> ;	Y0		: 始点のY座標
     9                              <1> ;	X1		: 終点のX座標
    10                              <1> ;	Y1		: 終点のY座標
    11                              <1> ;	color	: 描画色
    12                              <1> ;
    13                              <1> ;■戻り値	: 無し
    14                              <1> ;************************************************************************
    15                              <1> draw_line:
    16                              <1> 		;---------------------------------------
    17                              <1> 		; 【スタックフレームの構築】
    18                              <1> 		;---------------------------------------
    19                              <1> 												; ---------------
    20                              <1> 												;    +24| 色
    21                              <1> 												;    +20| Y1
    22                              <1> 												;    +16| X1
    23                              <1> 												;    +12| Y0
    24                              <1> 												;    + 8| X0
    25                              <1> 												; ---------------
    26 0000050A 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    27 0000050B 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    28                              <1> 												; ---------------
    29 0000050D 6A00                <1> 		push	dword 0							;    - 4| sum   = 0; // 相対軸の積算値
    30 0000050F 6A00                <1> 		push	dword 0							;    - 8| x0    = 0; // X座標
    31 00000511 6A00                <1> 		push	dword 0							;    -12| dx    = 0; // X増分
    32 00000513 6A00                <1> 		push	dword 0							;    -16| inc_x = 0; // X座標増分(1 or -1)
    33 00000515 6A00                <1> 		push	dword 0							;    -20| y0    = 0; // Y座標
    34 00000517 6A00                <1> 		push	dword 0							;    -24| dy    = 0; // Y増分
    35 00000519 6A00                <1> 		push	dword 0							;    -28| inc_y = 0; // Y座標増分(1 or -1)
    36                              <1> 												; ------|--------
    37                              <1> 
    38                              <1> 		;---------------------------------------
    39                              <1> 		; 【レジスタの保存】
    40                              <1> 		;---------------------------------------
    41 0000051B 50                  <1> 		push	eax
    42 0000051C 53                  <1> 		push	ebx
    43 0000051D 51                  <1> 		push	ecx
    44 0000051E 52                  <1> 		push	edx
    45 0000051F 56                  <1> 		push	esi
    46 00000520 57                  <1> 		push	edi
    47                              <1> 
    48                              <1> 		;---------------------------------------
    49                              <1> 		; 幅を計算（X軸）
    50                              <1> 		;---------------------------------------
    51 00000521 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
    52 00000524 8B5D10              <1> 		mov		ebx, [ebp +16]					; EBX = X1;
    53 00000527 29C3                <1> 		sub		ebx, eax						; EBX = X1 - X0; // 幅
    54 00000529 7D09                <1> 		jge		.10F							; if (幅 < 0)
    55                              <1> 												; {
    56 0000052B F7DB                <1> 		neg		ebx								;   幅   *= -1;
    57 0000052D BEFFFFFFFF          <1> 		mov		esi, -1							;   // X座標の増分
    58 00000532 EB05                <1> 		jmp		.10E							; }
    59                              <1> .10F:											; else
    60                              <1> 												; {
    61 00000534 BE01000000          <1> 		mov		esi, 1							;   // X座標の増分
    62                              <1> .10E:											; }
    63                              <1> 
    64                              <1> 		;---------------------------------------
    65                              <1> 		; 高さを計算（Y軸）
    66                              <1> 		;---------------------------------------
    67 00000539 8B4D0C              <1> 		mov		ecx, [ebp +12]					; ECX = Y0
    68 0000053C 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1
    69 0000053F 29CA                <1> 		sub		edx, ecx						; EDX = Y1 - Y0; // 高さ
    70 00000541 7D09                <1> 		jge		.20F							; if (高さ < 0)
    71                              <1> 												; {
    72 00000543 F7DA                <1> 		neg		edx								;   高さ *= -1;
    73 00000545 BFFFFFFFFF          <1> 		mov		edi, -1							;   // Y座標の増分
    74 0000054A EB05                <1> 		jmp		.20E							; }
    75                              <1> .20F:											; else
    76                              <1> 												; {
    77 0000054C BF01000000          <1> 		mov		edi, 1							;   // Y座標の増分
    78                              <1> .20E:											; }
    79                              <1> 
    80                              <1> 		;---------------------------------------
    81                              <1> 		; X軸
    82                              <1> 		;---------------------------------------
    83 00000551 8945F8              <1> 		mov		[ebp - 8], eax					;   // X軸:開始座標
    84 00000554 895DF4              <1> 		mov		[ebp -12], ebx					;   // X軸:描画幅
    85 00000557 8975F0              <1> 		mov		[ebp -16], esi					;   // X軸:増分(基準軸：1 or -1)
    86                              <1> 
    87                              <1> 		;---------------------------------------
    88                              <1> 		; Y軸
    89                              <1> 		;---------------------------------------
    90 0000055A 894DEC              <1> 		mov		[ebp -20], ecx					;   // Y軸:開始座標
    91 0000055D 8955E8              <1> 		mov		[ebp -24], edx					;   // Y軸:描画幅
    92 00000560 897DE4              <1> 		mov		[ebp -28], edi					;   // Y軸:増分(基準軸：1 or -1)
    93                              <1> 
    94                              <1> 		;---------------------------------------
    95                              <1> 		; 基準軸を決める
    96                              <1> 		;---------------------------------------
    97 00000563 39D3                <1> 		cmp		ebx, edx						; if (幅 <= 高さ)
    98 00000565 7F08                <1> 		jg		.22F							; {
    99                              <1> 												;   
   100 00000567 8D75EC              <1> 		lea		esi, [ebp -20]					;   // Y軸が基準軸
   101 0000056A 8D7DF8              <1> 		lea		edi, [ebp - 8]					;   // X軸が相対軸
   102                              <1> 												;   
   103 0000056D EB06                <1> 		jmp		.22E							; }
   104                              <1> .22F:											; else
   105                              <1> 												; {
   106 0000056F 8D75F8              <1> 		lea		esi, [ebp - 8]					;   // X軸が基準軸
   107 00000572 8D7DEC              <1> 		lea		edi, [ebp -20]					;   // Y軸が相対軸
   108                              <1> .22E:											; }
   109                              <1> 
   110                              <1> 		;---------------------------------------
   111                              <1> 		; 繰り返し回数(基準軸のドット数)
   112                              <1> 		;---------------------------------------
   113 00000575 8B4EFC              <1> 		mov		ecx, [esi - 4]					; ECX = 基準軸描画幅;
   114 00000578 83F900              <1> 		cmp		ecx, 0							; if (0 == ECX)
   115 0000057B 7505                <1> 		jnz		.30E							; {
   116 0000057D B901000000          <1> 		mov		ecx, 1							;   ECX = 1;
   117                              <1> .30E:											; }
   118                              <1> 
   119                              <1> 		;---------------------------------------
   120                              <1> 		; 線を描画
   121                              <1> 		;---------------------------------------
   122                              <1> .50L:											; do
   123                              <1> 												; {
   124                              <1> %ifdef	USE_SYSTEM_CALL
   125                              <1> 		mov		eax, ecx						;   // 繰り返し回数を保存
   126                              <1> 
   127                              <1> 		mov		ebx, [ebp +24]					;   EBX = 表示色;
   128                              <1> 		mov		ecx, [ebp - 8]					;   ECX = X座標;
   129                              <1> 		mov		edx, [ebp -20]					;   EDX = Y座標;
   130                              <1> 		int		0x82							;   sys_call(1, X, Y, 色, 文字); BX(C), CX(X), DX(Y)
   131                              <1> 
   132                              <1> 		mov		ecx, eax
   133                              <1> %else
   136 00000582 FF7518FF75ECFF75F8- <1> 		cdecl	draw_pixel, dword [ebp - 8], 							dword [ebp -20], 							dword [ebp +24]		;   // 点の描画
   136 0000058B E8B7FEFFFF6683C40C  <1>
   137                              <1> %endif
   138                              <1> 												;   // 基準軸を更新(1ドット分)
   139 00000594 8B46F8              <1> 		mov		eax, [esi - 8]					;   EAX = 基準軸増分(1 or -1);
   140 00000597 0106                <1> 		add		[esi - 0], eax					;   
   141                              <1> 
   142                              <1> 												;   // 相対軸を更新
   143 00000599 8B45FC              <1> 		mov		eax, [ebp - 4]					;   EAX  = sum; // 相対軸の積算値;
   144 0000059C 0347FC              <1> 		add		eax, [edi - 4]					;   EAX += dy;  // 増分(相対軸の描画幅)
   145 0000059F 8B5EFC              <1> 		mov		ebx, [esi - 4]					;   EBX  = dx;  // 増分(基準軸の描画幅)
   146                              <1> 
   147 000005A2 39D8                <1> 		cmp		eax, ebx						;   if (積算値 <= 相対軸の増分)
   148 000005A4 7C07                <1> 		jl		.52E							;   {
   149 000005A6 29D8                <1> 		sub		eax, ebx						;     EAX -= EBX; // 積算値から相対軸の増分を減算
   150                              <1> 												;     
   151                              <1> 												;     // 相対軸の座標を更新(1ドット分)
   152 000005A8 8B5FF8              <1> 		mov		ebx, [edi - 8]					;     EBX =  相対軸増分;
   153 000005AB 011F                <1> 		add		[edi - 0], ebx					;     
   154                              <1> .52E:											;   }
   155 000005AD 8945FC              <1> 		mov		[ebp - 4], eax					;   // 積算値を更新
   156                              <1> 												;   
   157 000005B0 E2D0                <1> 		loop	.50L							;   
   158                              <1> .50E:											; } while (ループ回数--);
   159                              <1> 
   160                              <1> 		;---------------------------------------
   161                              <1> 		; 【レジスタの復帰】
   162                              <1> 		;---------------------------------------
   163 000005B2 5F                  <1> 		pop		edi
   164 000005B3 5E                  <1> 		pop		esi
   165 000005B4 5A                  <1> 		pop		edx
   166 000005B5 59                  <1> 		pop		ecx
   167 000005B6 5B                  <1> 		pop		ebx
   168 000005B7 58                  <1> 		pop		eax
   169                              <1> 
   170                              <1> 		;---------------------------------------
   171                              <1> 		; 【スタックフレームの破棄】
   172                              <1> 		;---------------------------------------
   173 000005B8 89EC                <1> 		mov		esp, ebp
   174 000005BA 5D                  <1> 		pop		ebp
   175                              <1> 
   176 000005BB C3                  <1> 		ret
   177                              <1> 
    73                                  
    74                                  ; パディング
    75                                  
    76 000005BC 00<rept>                    times KERNEL_SIZE - ($ - $$) db 0x00
    77                                      
