     1                                  ;************************************************************************
     2                                  ;
     3                                  ;	カーネル部
     4                                  ;
     5                                  ;************************************************************************
     6                                  
     7                                  ;************************************************************************
     8                                  ;	マクロ
     9                                  ;************************************************************************
    10                                  %define 	USER_SYSTEM_CALL
    11                                  %include	"../include/define.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	メモリイメージ
     3                              <1> ;************************************************************************
     4                              <1> 
     5                              <1> 		;---------------------------------------
     6                              <1> 		;           |            | 
     7                              <1> 		;           |____________| 
     8                              <1> 		; 0000_7A00 |            | ( 512) スタック
     9                              <1> 		;           |____________| 
    10                              <1> 		; 0000_7C00 |            | (  8K) ブート
    11                              <1> 		;           =            = 
    12                              <1> 		;           |____________| 
    13                              <1> 		; 0000_9C00 |            | (  8K) カーネル（一時展開）
    14                              <1> 		;           =            = 
    15                              <1> 		;           |____________| 
    16                              <1> 		; 0000_BC00 |////////////| 
    17                              <1> 		;           =            = 
    18                              <1> 		;           |____________| 
    19                              <1> 		; 0010_0000 |       (2K) | 割り込みディスクリプタテーブル
    20                              <1> 		;           |____________| 
    21                              <1> 		; 0010_0800 |       (2K) | カーネルスタック
    22                              <1> 		;           |____________| 
    23                              <1> 		; 0010_1000 |       (8K) | カーネルプログラム
    24                              <1> 		;           |            | 
    25                              <1> 		;           =            = 
    26                              <1> 		;           |____________| 
    27                              <1> 		; 0010_3000 |       (8K) | タスク用スタック
    28                              <1> 		;           |            | （各タスク1K）
    29                              <1> 		;           =            = 
    30                              <1> 		;           |____________| 
    31                              <1> 		; 0010_5000 |            | Dir
    32                              <1> 		;      6000 |____________| Page
    33                              <1> 		; 0010_7000 |            | Dir
    34                              <1> 		;      8000 |____________| Page
    35                              <1> 		; 0010_9000 |////////////| 
    36                              <1> 		;           |            | 
    37                              <1> 
    38                              <1> 		BOOT_SIZE			equ		(1024 * 8)		; ブートサイズ
    39                              <1> 		KERNEL_SIZE			equ		(1024 * 8)		; カーネルサイズ
    40                              <1> 
    41                              <1> 		BOOT_LOAD			equ		0x7C00			; ブートプログラムのロード位置
    42                              <1> 		BOOT_END			equ		(BOOT_LOAD + BOOT_SIZE)
    43                              <1> 
    44                              <1> 		KERNEL_LOAD			equ		0x0010_1000
    45                              <1> 
    46                              <1> 		SECT_SIZE			equ		(512)			; セクタサイズ
    47                              <1> 
    48                              <1> 		BOOT_SECT			equ		(BOOT_SIZE   / SECT_SIZE)	; ブートプログラムのセクタ数
    49                              <1> 		KERNEL_SECT			equ		(KERNEL_SIZE / SECT_SIZE)	; カーネルのセクタ数
    50                              <1> 
    51                              <1> 		E820_RECORD_SIZE	equ		20
    52                              <1> 
    53                              <1> 		VECT_BASE			equ		0x0010_0000		;	0010_0000:0010_07FF
    54                              <1> 
    55                              <1> 
    56                              <1> 		STACK_BASE			equ		0x0010_3000		; タスク用スタックエリア
    57                              <1> 		STACK_SIZE			equ		1024			; スタックサイズ
    58                              <1> 
    59                              <1> 		SP_TASK_0			equ		STACK_BASE + (STACK_SIZE * 1)
    60                              <1> 		SP_TASK_1			equ		STACK_BASE + (STACK_SIZE * 2)
    61                              <1> 		SP_TASK_2			equ		STACK_BASE + (STACK_SIZE * 3)
    62                              <1> 		SP_TASK_3			equ		STACK_BASE + (STACK_SIZE * 4)
    63                              <1> 		SP_TASK_4			equ		STACK_BASE + (STACK_SIZE * 5)
    64                              <1> 		SP_TASK_5			equ		STACK_BASE + (STACK_SIZE * 6)
    65                              <1> 		SP_TASK_6			equ		STACK_BASE + (STACK_SIZE * 7)
    66                              <1> 
    67                              <1> 		CR3_BASE			equ		0x0010_5000		; ページ変換テーブル：タスク3用
    68                              <1> 
    69                              <1> 		PARAM_TASK_4		equ		0x0010_8000		; 描画パラメータ：タスク4用
    70                              <1> 		PARAM_TASK_5		equ		0x0010_9000		; 描画パラメータ：タスク5用
    71                              <1> 		PARAM_TASK_6		equ		0x0010_A000		; 描画パラメータ：タスク6用
    72                              <1> 
    73                              <1> 		CR3_TASK_4			equ		0x0020_0000		; ページ変換テーブル：タスク4用
    74                              <1> 		CR3_TASK_5			equ		0x0020_2000		; ページ変換テーブル：タスク5用
    75                              <1> 		CR3_TASK_6			equ		0x0020_4000		; ページ変換テーブル：タスク6用
    76                              <1> 
    77                              <1> 
    78                              <1> ;************************************************************************
    79                              <1> ;	ディスクイメージ
    80                              <1> ;************************************************************************
    81                              <1> 		;(SECT/SUM)  file img                 
    82                              <1> 		;                       ____________  
    83                              <1> 		;( 16/  0)   0000_0000 |       (8K) | ブート
    84                              <1> 		;                      =            = 
    85                              <1> 		;                      |____________| 
    86                              <1> 		;( 16/ 16)   0000_2000 |       (8K) | カーネル
    87                              <1> 		;                      =            = 
    88                              <1> 		;                      |____________| 
    89                              <1> 		;(256/ 32)   0000_4000 |     (128K) | FAT-1
    90                              <1> 		;                      |            | 
    91                              <1> 		;                      |            | 
    92                              <1> 		;                      =            = 
    93                              <1> 		;                      |____________| 
    94                              <1> 		;(256/288)   0002_4000 |     (128K) | FAT-2
    95                              <1> 		;                      |            | 
    96                              <1> 		;                      |            | 
    97                              <1> 		;                      =            = 
    98                              <1> 		;                      |____________| 
    99                              <1> 		;( 32/544)   0004_4000 |      (16K) | ルートディレクトリ領域
   100                              <1> 		;                      |            | (32セクタ/512エントリ)
   101                              <1> 		;                      =            = 
   102                              <1> 		;                      |____________| 
   103                              <1> 		;(   /576)   0004_8000 |            | データ領域
   104                              <1> 		;                      |            | 
   105                              <1> 		;                      =            = 
   106                              <1> 		;                      |            | 
   107                              <1> 		;                      |____________| 
   108                              <1> 		;(   /640)   0005_0000 |////////////| 
   109                              <1> 		;                      |            | 
   110                              <1> 
   111                              <1> 		FAT_SIZE			equ		(1024 * 128)	; FAT-1/2
   112                              <1> 		ROOT_SIZE			equ		(1024 *  16)	; ルートディレクトリ領域
   113                              <1> 
   114                              <1> 		ENTRY_SIZE			equ		32				; エントリサイズ
   115                              <1> 
   116                              <1> 		; BOOT イメージは異なるファイルなので、FAT アドレスの定義には加算しない
   117                              <1> 		FAT_OFFSET			equ		(BOOT_SIZE + KERNEL_SIZE)
   118                              <1> 		FAT1_START			equ		(KERNEL_SIZE)
   119                              <1> 		FAT2_START			equ		(FAT1_START + FAT_SIZE)
   120                              <1> 		ROOT_START			equ		(FAT2_START + FAT_SIZE)
   121                              <1> 		FILE_START			equ		(ROOT_START + ROOT_SIZE)
   122                              <1> 
   123                              <1> 		; ファイル属性
   124                              <1> 		ATTR_READ_ONLY		equ		0x01
   125                              <1> 		ATTR_HIDDEN			equ		0x02
   126                              <1> 		ATTR_SYSTEM			equ		0x04
   127                              <1> 		ATTR_VOLUME_ID		equ		0x08
   128                              <1> 		ATTR_DIRECTORY		equ		0x10
   129                              <1> 		ATTR_ARCHIVE		equ		0x20
   130                              <1> 
    12                                  %include	"../include/macro.s"
     1                              <1> ;************************************************************************
     2                              <1> ; 関数呼び出し用マクロ
     3                              <1> ;
     4                              <1> ; 使い方：
     5                              <1> ;	cdecl	func [, param1[, param2[, ...]]]
     6                              <1> ;
     7                              <1> ;************************************************************************
     8                              <1> %macro  cdecl 1-*.nolist
     9                              <1> 
    10                              <1> 	%rep  %0 - 1
    11                              <1> 		push	%{-1:-1}
    12                              <1> 		%rotate -1
    13                              <1> 	%endrep 
    14                              <1> 	%rotate -1
    15                              <1> 
    16                              <1> 		call	%1
    17                              <1> 
    18                              <1> 	%if 1 < %0
    19                              <1> 		add		sp, (__BITS__ >> 3) * (%0 - 1)
    20                              <1> 	%endif
    21                              <1> 
    22                              <1> %endmacro
    23                              <1> 
    24                              <1> ;************************************************************************
    25                              <1> ; 割り込みベクタ設定用
    26                              <1> ;
    27                              <1> ; 使い方：
    28                              <1> ;	set_vect	ベクタ番号, 割り込み処理 [, フラグ]
    29                              <1> ;
    30                              <1> ;************************************************************************
    31                              <1> %macro  set_vect 1-*.nolist
    32                              <1> 		push	eax
    33                              <1> 		push	edi
    34                              <1> 
    35                              <1> 		mov		edi, VECT_BASE + (%1 * 8)		; ベクタアドレス;
    36                              <1> 		mov		eax, %2
    37                              <1> 
    38                              <1> 	%if 3 == %0
    39                              <1> 		mov		[edi + 4], %3					; フラグ
    40                              <1> 	%endif
    41                              <1> 
    42                              <1> 		mov		[edi + 0], ax					; 例外アドレス[15: 0]
    43                              <1> 		shr		eax, 16							; 
    44                              <1> 		mov		[edi + 6], ax					; 例外アドレス[31:16]
    45                              <1> 
    46                              <1> 		pop		edi
    47                              <1> 		pop		eax
    48                              <1> %endmacro
    49                              <1> 
    50                              <1> ;************************************************************************
    51                              <1> ; ポート出力用
    52                              <1> ;
    53                              <1> ; 使い方：
    54                              <1> ;	outp	ポート番号, 出力値
    55                              <1> ;
    56                              <1> ;************************************************************************
    57                              <1> %macro  outp 2
    58                              <1> 		mov		al, %2
    59                              <1> 		out		%1, al
    60                              <1> %endmacro
    61                              <1> 
    62                              <1> ;************************************************************************
    63                              <1> ; ディスクリプタの情報を設定
    64                              <1> ;
    65                              <1> ; 使い方：
    66                              <1> ;	set_desc	ディスクリプタ, ベース
    67                              <1> ;
    68                              <1> ;************************************************************************
    69                              <1> %macro  set_desc 2-* 
    70                              <1> 		push	eax
    71                              <1> 		push	edi
    72                              <1> 
    73                              <1> 		mov		edi, %1							; ディスクリプタアドレス
    74                              <1> 		mov		eax, %2							; ベースアドレス
    75                              <1> 
    76                              <1> 	%if 3 == %0
    77                              <1> 		mov		[edi + 0], %3					; リミット
    78                              <1> 	%endif
    79                              <1> 
    80                              <1> 		mov		[edi + 2], ax					; ベース（[15: 0]）
    81                              <1> 		shr		eax, 16							; 
    82                              <1> 		mov		[edi + 4], al					; ベース（[23:16]）
    83                              <1> 		mov		[edi + 7], ah					; ベース（[31:24]）
    84                              <1> 
    85                              <1> 		pop		edi
    86                              <1> 		pop		eax
    87                              <1> %endmacro
    88                              <1> 
    89                              <1> ;************************************************************************
    90                              <1> ; ゲートディスクリプタのオフセットを設定
    91                              <1> ;
    92                              <1> ; 使い方：
    93                              <1> ;	set_gate	ディスクリプタ, オフセット
    94                              <1> ;
    95                              <1> ;************************************************************************
    96                              <1> %macro  set_gate 2-* 
    97                              <1> 		push	eax
    98                              <1> 		push	edi
    99                              <1> 
   100                              <1> 		mov		edi, %1							; ディスクリプタアドレス
   101                              <1> 		mov		eax, %2							; ベースアドレス
   102                              <1> 
   103                              <1> 		mov		[edi + 0], ax					; ベース（[15: 0]）
   104                              <1> 		shr		eax, 16							; 
   105                              <1> 		mov		[edi + 6], ax					; ベース（[31:16]）
   106                              <1> 
   107                              <1> 		pop		edi
   108                              <1> 		pop		eax
   109                              <1> %endmacro
   110                              <1> 
   111                              <1> ;************************************************************************
   112                              <1> ;	構造体
   113                              <1> ;************************************************************************
   114                              <1> 
   115                              <1> ;-----------------------------------------------
   116                              <1> ;	ドライブパラメータ
   117                              <1> ;-----------------------------------------------
   118                              <1> struc drive
   119 00000000 <res 00000002>      <1> 		.no				resw	1				; ドライブ番号
   120 00000002 <res 00000002>      <1> 		.cyln			resw	1				; C:シリンダ
   121 00000004 <res 00000002>      <1> 		.head			resw	1				; H:ヘッド
   122 00000006 <res 00000002>      <1> 		.sect			resw	1				; S:セクタ
   123                              <1> endstruc
   124                              <1> 
   125                              <1> ;-----------------------------------------------
   126                              <1> ;	リングバッファ
   127                              <1> ;-----------------------------------------------
   128                              <1> %define		RING_ITEM_SIZE		(1 << 4)
   129                              <1> %define		RING_INDEX_MASK		(RING_ITEM_SIZE - 1)
   130                              <1> 
   131                              <1> struc ring_buff
   132 00000000 <res 00000004>      <1> 		.rp				resd	1				; RP:書き込み位置
   133 00000004 <res 00000004>      <1> 		.wp				resd	1				; WP:読み込み位置
   134 00000008 <res 00000010>      <1> 		.item			resb	RING_ITEM_SIZE	; バッファ
   135                              <1> endstruc
   136                              <1> 
   137                              <1> ;-----------------------------------------------
   138                              <1> ;	バラ曲線描画パラメータ
   139                              <1> ;-----------------------------------------------
   140                              <1> struc rose
   141 00000000 <res 00000004>      <1> 		.x0				resd	1				; 左上座標：X0
   142 00000004 <res 00000004>      <1> 		.y0				resd	1				; 左上座標：Y0
   143 00000008 <res 00000004>      <1> 		.x1				resd	1				; 右下座標：X1
   144 0000000C <res 00000004>      <1> 		.y1				resd	1				; 右下座標：Y1
   145                              <1> 
   146 00000010 <res 00000004>      <1> 		.n				resd	1				; 変数：n
   147 00000014 <res 00000004>      <1> 		.d				resd	1				; 変数：d
   148                              <1> 
   149 00000018 <res 00000004>      <1> 		.color_x		resd	1				; 描画色：X軸
   150 0000001C <res 00000004>      <1> 		.color_y		resd	1				; 描画色：Y軸
   151 00000020 <res 00000004>      <1> 		.color_z		resd	1				; 描画色：枠
   152 00000024 <res 00000004>      <1> 		.color_s		resd	1				; 描画色：文字
   153 00000028 <res 00000004>      <1> 		.color_f		resd	1				; 描画色：グラフ描画色
   154 0000002C <res 00000004>      <1> 		.color_b		resd	1				; 描画色：グラフ消去色
   155                              <1> 
   156 00000030 <res 00000010>      <1> 		.title			resb	16				; タイトル
   157                              <1> endstruc
   158                              <1> 
    13                                  
    14                                  		ORG		KERNEL_LOAD						; カーネルのロードアドレス
    15                                  
    16                                  [BITS 32]
    17                                  ;************************************************************************
    18                                  ;	エントリポイント
    19                                  ;************************************************************************
    20                                  kernel:
    21                                  		;---------------------------------------
    22                                  		; フォントアドレスを取得
    23                                  		;---------------------------------------
    24 00000000 BE007E0000              		mov		esi, BOOT_LOAD + SECT_SIZE		; ESI   = 0x7C00 + 512
    25 00000005 0FB706                  		movzx	eax, word [esi + 0]				; EAX   = [ESI + 0] // セグメント
    26 00000008 0FB75E02                		movzx	ebx, word [esi + 2]				; EBX   = [ESI + 2] // オフセット
    27 0000000C C1E004                  		shl		eax, 4							; EAX <<= 4;
    28 0000000F 01D8                    		add		eax, ebx						; EAX  += EBX;
    29 00000011 A3[D0010000]            		mov		[FONT_ADR], eax					; FONT_ADR[0] = EAX;
    30                                  
    31                                  		;---------------------------------------
    32                                  		; TSSディスクリプタの設定
    33                                  		;---------------------------------------
    34                                  		set_desc	GDT.tss_0, TSS_0			; // タスク0用TSSの設定
    34 00000016 50                  <1>  push eax
    34 00000017 57                  <1>  push edi
    34                              <1> 
    34 00000018 BF[C8020000]        <1>  mov edi, %1
    34 0000001D B8[D8010000]        <1>  mov eax, %2
    34                              <1> 
    34                              <1>  %if 3 == %0
    34                              <1>  mov [edi + 0], %3
    34                              <1>  %endif
    34                              <1> 
    34 00000022 66894702            <1>  mov [edi + 2], ax
    34 00000026 C1E810              <1>  shr eax, 16
    34 00000029 884704              <1>  mov [edi + 4], al
    34 0000002C 886707              <1>  mov [edi + 7], ah
    34                              <1> 
    34 0000002F 5F                  <1>  pop edi
    34 00000030 58                  <1>  pop eax
    35                                  		set_desc	GDT.tss_1, TSS_1			; // タスク1用TSSの設定
    35 00000031 50                  <1>  push eax
    35 00000032 57                  <1>  push edi
    35                              <1> 
    35 00000033 BF[D0020000]        <1>  mov edi, %1
    35 00000038 B8[40020000]        <1>  mov eax, %2
    35                              <1> 
    35                              <1>  %if 3 == %0
    35                              <1>  mov [edi + 0], %3
    35                              <1>  %endif
    35                              <1> 
    35 0000003D 66894702            <1>  mov [edi + 2], ax
    35 00000041 C1E810              <1>  shr eax, 16
    35 00000044 884704              <1>  mov [edi + 4], al
    35 00000047 886707              <1>  mov [edi + 7], ah
    35                              <1> 
    35 0000004A 5F                  <1>  pop edi
    35 0000004B 58                  <1>  pop eax
    36                                  		set_gate 	GDT.call_gate, call_gate
    36 0000004C 50                  <1>  push eax
    36 0000004D 57                  <1>  push edi
    36                              <1> 
    36 0000004E BF[D8020000]        <1>  mov edi, %1
    36                              <1>  mov eax, %2
    36          ******************  <1>  error: symbol `call_gate' undefined
    36                              <1> 
    36 00000053 668907              <1>  mov [edi + 0], ax
    36 00000056 C1E810              <1>  shr eax, 16
    36 00000059 66894706            <1>  mov [edi + 6], ax
    36                              <1> 
    36 0000005D 5F                  <1>  pop edi
    36 0000005E 58                  <1>  pop eax
    37                                  
    38                                  		;---------------------------------------
    39                                  		; LDTの設定
    40                                  		;---------------------------------------
    41                                  		set_desc	GDT.ldt, LDT, word LDT_LIMIT
    41 0000005F 50                  <1>  push eax
    41 00000060 57                  <1>  push edi
    41                              <1> 
    41 00000061 BF[C0020000]        <1>  mov edi, %1
    41 00000066 B8[E6020000]        <1>  mov eax, %2
    41                              <1> 
    41                              <1>  %if 3 == %0
    41 0000006B 66C7072700          <1>  mov [edi + 0], %3
    41                              <1>  %endif
    41                              <1> 
    41 00000070 66894702            <1>  mov [edi + 2], ax
    41 00000074 C1E810              <1>  shr eax, 16
    41 00000077 884704              <1>  mov [edi + 4], al
    41 0000007A 886707              <1>  mov [edi + 7], ah
    41                              <1> 
    41 0000007D 5F                  <1>  pop edi
    41 0000007E 58                  <1>  pop eax
    42                                  
    43                                  		;---------------------------------------
    44                                  		; GDTをロード（再設定）
    45                                  		;---------------------------------------
    46 0000007F 0F0115[E0020000]        		lgdt	[GDTR]							; // グローバルディスクリプタテーブルをロード
    47                                  
    48                                  		;---------------------------------------
    49                                  		; スタックの設定
    50                                  		;---------------------------------------
    51 00000086 BC00341000              		mov		esp, SP_TASK_0					; // タスク0用のスタックを設定
    52                                  
    53                                  		;---------------------------------------
    54                                  		; タスクレジスタの初期化
    55                                  		;---------------------------------------
    56 0000008B 66B82000                		mov		ax, SS_TASK_0
    57 0000008F 0F00D8                  		ltr		ax								; // タスクレジスタの設定
    58                                  
    59                                  		;---------------------------------------
    60                                  		; 初期化
    61                                  		;---------------------------------------
    62 00000092 E8A7080000              		cdecl	init_int						; // 割り込みベクタの初期化
    63 00000097 E8280A0000              		cdecl	init_pic						; // 割り込みコントローラの初期化
    64                                  
    65 0000009C 5057BF00001000B8-       		set_vect	0x00, int_zero_div			; // 割り込み処理の登録：0除算
    65 000000A4 [A60A0000]668907C1-
    65 000000AC E810668947065F58   
    66 000000B4 5057BF00011000B8-       		set_vect	0x20, int_timer				; // 割り込み処理の登録：タイマー
    66 000000BC [0E030000]668907C1-
    66 000000C4 E810668947065F58   
    67 000000CC 5057BF08011000B8-       		set_vect	0x21, int_keyboard			; // 割り込み処理の登録：KBC
    67 000000D4 [2E0B0000]668907C1-
    67 000000DC E810668947065F58   
    68 000000E4 5057BF40011000B8-       		set_vect	0x28, int_rtc				; // 割り込み処理の登録：RTC
    68 000000EC [030B0000]668907C1-
    68 000000F4 E810668947065F58   
    69 000000FC 5057BF0804100066C7-     		set_vect 	0x81, trap_gate_81, word 0xEF00 ; 1文字
    69          ******************       error: symbol `trap_gate_81' undefined
    69 00000105 470400EF668907C1E8-
    69 0000010E 10668947065F58     
    70 00000115 5057BF1004100066C7-     		set_vect 	0x82, trap_gate_82, word 0xEF00 ; 点
    70          ******************       error: symbol `trap_gate_82' undefined
    70 0000011E 470400EF668907C1E8-
    70 00000127 10668947065F58     
    71                                  
    72                                  		;---------------------------------------
    73                                  		; デバイスの割り込み許可
    74                                  		;---------------------------------------
    75 0000012E 6A10E8BA0900006683-     		cdecl	rtc_int_en, 0x10				; rtc_int_en(UIE); // 更新サイクル終了割り込み許可
    75 00000137 C404               
    76 00000139 E8E20A0000              		cdecl	int_en_timer0					; // タイマー（カウンタ0）割り込み許可
    77                                  
    78                                  		;---------------------------------------
    79                                  		; IMR(割り込みマスクレジスタ)の設定
    80                                  		;---------------------------------------
    81                                  		outp	0x21, 0b_1111_1000				; // 割り込み有効：スレーブPIC/KBC/タイマー
    81 0000013E B0F8                <1>  mov al, %2
    81 00000140 E621                <1>  out %1, al
    82                                  		outp	0xA1, 0b_1111_1110				; // 割り込み有効：RTC
    82 00000142 B0FE                <1>  mov al, %2
    82 00000144 E6A1                <1>  out %1, al
    83                                  
    84                                  		;---------------------------------------
    85                                  		; CPUの割り込み許可
    86                                  		;---------------------------------------
    87 00000146 FB                      		sti										; // 割り込み許可
    88                                  
    89                                  		;---------------------------------------
    90                                  		; フォントの一覧表示
    91                                  		;---------------------------------------
    92 00000147 6A0D6A3FE8A4030000-     		cdecl	draw_font, 63, 13				; // フォントの一覧表示
    92 00000150 6683C408           
    93 00000154 6A046A3FE825040000-     		cdecl	draw_color_bar, 63, 4			; // カラーバーの表示
    93 0000015D 6683C408           
    94                                  
    95                                  		;---------------------------------------
    96                                  		; 文字列の表示
    97                                  		;---------------------------------------
    98 00000161 68[B8010000]680F01-     		cdecl	draw_str, 25, 14, 0x010F, .s0	; draw_str();
    98 00000169 00006A0E6A19E8C503-
    98 00000172 00006683C410       
    99                                  
   100                                  .10L:											; while (;;)
   100          ******************       error: label `kernel.10L' changed during code generation [-w+error=label-redef-late]
   101                                  												; {
   102                                  		;---------------------------------------
   103                                  		; 回転する棒を表示
   104                                  		;---------------------------------------
   105 00000178 E8B20A0000              		cdecl	draw_rotation_bar				;   // 回転する棒を表示
   106                                  
   107                                  		;---------------------------------------
   108                                  		; キーコードの取得
   109                                  		;---------------------------------------
   110 0000017D 68[CC010000]68-         		cdecl	ring_rd, _KEY_BUFF, .int_key	;   EAX = ring_rd(buff, &int_key);
   110 00000183 [540B0000]E8E00900-
   110 0000018B 006683C408         
   111 00000190 83F800                  		cmp		eax, 0							;   if (EAX == 0)
   112 00000193 7421                    		je		.10E							;   {
   113                                  												;   
   114                                  		;---------------------------------------
   115                                  		; キーコードの表示
   116                                  		;---------------------------------------
   117 00000195 68[540B0000]6A1D6A-     		cdecl	draw_key, 2, 29, _KEY_BUFF		;     ring_show(key_buff); // 全要素を表示
   117 0000019D 02E82A0A00006683C4-
   117 000001A6 0C                 
   118                                  .10E:											;   }
   118          ******************       error: label `kernel.10E' changed during code generation [-w+error=label-redef-late]
   119 000001A7 EBCF                    		jmp		.10L							; }
   120                                  
   121 000001A9 2048656C6C6F2C206B-     .s0:	db	" Hello, kernel! ", 0
   121          ******************       error: label `kernel.s0' changed during code generation [-w+error=label-redef-late]
   121 000001B2 65726E656C212000   
   122                                  
   123 000001BA 00<rept>                ALIGN 4, db 0
   124 000001BC 00000000                .int_key:	dd	0
   124          ******************       error: label `kernel.int_key' changed during code generation [-w+error=label-redef-late]
   125                                  
   126                                  ALIGN 4, db 0
   127 000001C0 00000000                FONT_ADR:	dd	0
   127          ******************       error: label `FONT_ADR' changed during code generation [-w+error=label-redef-late]
   128 000001C4 00000000                RTC_TIME:	dd	0
   128          ******************       error: label `RTC_TIME' changed during code generation [-w+error=label-redef-late]
   129                                  
   130                                  ;************************************************************************
   131                                  ;	タスク
   132                                  ;************************************************************************
   133                                  %include	"descriptor.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	TSS
     3                              <1> ;************************************************************************
     4                              <1> TSS_0:
     4          ******************  <1>  error: label `TSS_0' changed during code generation [-w+error=label-redef-late]
     5 000001C8 00000000            <1> .link:			dd	0							;   0:前のタスクへのリンク
     5          ******************  <1>  error: label `TSS_0.link' changed during code generation [-w+error=label-redef-late]
     6 000001CC 00321000            <1> .esp0:			dd	SP_TASK_0 - 512				;*  4:ESP0
     6          ******************  <1>  error: label `TSS_0.esp0' changed during code generation [-w+error=label-redef-late]
     7 000001D0 10000000            <1> .ss0:			dd	DS_KERNEL					;*  8:
     7          ******************  <1>  error: label `TSS_0.ss0' changed during code generation [-w+error=label-redef-late]
     8 000001D4 00000000            <1> .esp1:			dd	0							;* 12:ESP1
     8          ******************  <1>  error: label `TSS_0.esp1' changed during code generation [-w+error=label-redef-late]
     9 000001D8 00000000            <1> .ss1:			dd	0							;* 16:
     9          ******************  <1>  error: label `TSS_0.ss1' changed during code generation [-w+error=label-redef-late]
    10 000001DC 00000000            <1> .esp2:			dd	0							;* 20:ESP2
    10          ******************  <1>  error: label `TSS_0.esp2' changed during code generation [-w+error=label-redef-late]
    11 000001E0 00000000            <1> .ss2:			dd	0							;* 24:
    11          ******************  <1>  error: label `TSS_0.ss2' changed during code generation [-w+error=label-redef-late]
    12 000001E4 00000000            <1> .cr3:			dd	0							;  28:CR3(PDBR)
    12          ******************  <1>  error: label `TSS_0.cr3' changed during code generation [-w+error=label-redef-late]
    13 000001E8 00000000            <1> .eip:			dd	0							;  32:EIP
    13          ******************  <1>  error: label `TSS_0.eip' changed during code generation [-w+error=label-redef-late]
    14 000001EC 00000000            <1> .eflags:		dd	0							;  36:EFLAGS
    14          ******************  <1>  error: label `TSS_0.eflags' changed during code generation [-w+error=label-redef-late]
    15 000001F0 00000000            <1> .eax:			dd	0							;  40:EAX
    15          ******************  <1>  error: label `TSS_0.eax' changed during code generation [-w+error=label-redef-late]
    16 000001F4 00000000            <1> .ecx:			dd	0							;  44:ECX
    16          ******************  <1>  error: label `TSS_0.ecx' changed during code generation [-w+error=label-redef-late]
    17 000001F8 00000000            <1> .edx:			dd	0							;  48:EDX
    17          ******************  <1>  error: label `TSS_0.edx' changed during code generation [-w+error=label-redef-late]
    18 000001FC 00000000            <1> .ebx:			dd	0							;  52:EBX
    18          ******************  <1>  error: label `TSS_0.ebx' changed during code generation [-w+error=label-redef-late]
    19 00000200 00000000            <1> .esp:			dd	0							;  56:ESP
    19          ******************  <1>  error: label `TSS_0.esp' changed during code generation [-w+error=label-redef-late]
    20 00000204 00000000            <1> .ebp:			dd	0							;  60:EBP
    20          ******************  <1>  error: label `TSS_0.ebp' changed during code generation [-w+error=label-redef-late]
    21 00000208 00000000            <1> .esi:			dd	0							;  64:ESI
    21          ******************  <1>  error: label `TSS_0.esi' changed during code generation [-w+error=label-redef-late]
    22 0000020C 00000000            <1> .edi:			dd	0							;  68:EDI
    22          ******************  <1>  error: label `TSS_0.edi' changed during code generation [-w+error=label-redef-late]
    23 00000210 00000000            <1> .es:			dd	0							;  72:ES
    23          ******************  <1>  error: label `TSS_0.es' changed during code generation [-w+error=label-redef-late]
    24 00000214 00000000            <1> .cs:			dd	0							;  76:CS
    24          ******************  <1>  error: label `TSS_0.cs' changed during code generation [-w+error=label-redef-late]
    25 00000218 00000000            <1> .ss:			dd	0							;  80:SS
    25          ******************  <1>  error: label `TSS_0.ss' changed during code generation [-w+error=label-redef-late]
    26 0000021C 00000000            <1> .ds:			dd	0							;  84:DS
    26          ******************  <1>  error: label `TSS_0.ds' changed during code generation [-w+error=label-redef-late]
    27 00000220 00000000            <1> .fs:			dd	0							;  88:FS
    27          ******************  <1>  error: label `TSS_0.fs' changed during code generation [-w+error=label-redef-late]
    28 00000224 00000000            <1> .gs:			dd	0							;  92:GS
    28          ******************  <1>  error: label `TSS_0.gs' changed during code generation [-w+error=label-redef-late]
    29 00000228 00000000            <1> .ldt:			dd	0							;* 96:LDTセグメントセレクタ
    29          ******************  <1>  error: label `TSS_0.ldt' changed during code generation [-w+error=label-redef-late]
    30 0000022C 00000000            <1> .io:			dd	0							; 100:I/Oマップベースアドレス
    30          ******************  <1>  error: label `TSS_0.io' changed during code generation [-w+error=label-redef-late]
    31                              <1> 
    32                              <1> TSS_1:
    32          ******************  <1>  error: label `TSS_1' changed during code generation [-w+error=label-redef-late]
    33 00000230 00000000            <1> .link:			dd	0							;   0:前のタスクへのリンク
    33          ******************  <1>  error: label `TSS_1.link' changed during code generation [-w+error=label-redef-late]
    34 00000234 00361000            <1> .esp0:			dd	SP_TASK_1 - 512				;*  4:ESP0
    34          ******************  <1>  error: label `TSS_1.esp0' changed during code generation [-w+error=label-redef-late]
    35 00000238 10000000            <1> .ss0:			dd	DS_KERNEL					;*  8:
    35          ******************  <1>  error: label `TSS_1.ss0' changed during code generation [-w+error=label-redef-late]
    36 0000023C 00000000            <1> .esp1:			dd	0							;* 12:ESP1
    36          ******************  <1>  error: label `TSS_1.esp1' changed during code generation [-w+error=label-redef-late]
    37 00000240 00000000            <1> .ss1:			dd	0							;* 16:
    37          ******************  <1>  error: label `TSS_1.ss1' changed during code generation [-w+error=label-redef-late]
    38 00000244 00000000            <1> .esp2:			dd	0							;* 20:ESP2
    38          ******************  <1>  error: label `TSS_1.esp2' changed during code generation [-w+error=label-redef-late]
    39 00000248 00000000            <1> .ss2:			dd	0							;* 24:
    39          ******************  <1>  error: label `TSS_1.ss2' changed during code generation [-w+error=label-redef-late]
    40 0000024C 00000000            <1> .cr3:			dd	0							;  28:CR3(PDBR)
    40          ******************  <1>  error: label `TSS_1.cr3' changed during code generation [-w+error=label-redef-late]
    41 00000250 [48030000]          <1> .eip:			dd	task_1						;  32:EIP
    41          ******************  <1>  error: label `TSS_1.eip' changed during code generation [-w+error=label-redef-late]
    42 00000254 02020000            <1> .eflags:		dd	0x0202						;  36:EFLAGS
    42          ******************  <1>  error: label `TSS_1.eflags' changed during code generation [-w+error=label-redef-late]
    43 00000258 00000000            <1> .eax:			dd	0							;  40:EAX
    43          ******************  <1>  error: label `TSS_1.eax' changed during code generation [-w+error=label-redef-late]
    44 0000025C 00000000            <1> .ecx:			dd	0							;  44:ECX
    44          ******************  <1>  error: label `TSS_1.ecx' changed during code generation [-w+error=label-redef-late]
    45 00000260 00000000            <1> .edx:			dd	0							;  48:EDX
    45          ******************  <1>  error: label `TSS_1.edx' changed during code generation [-w+error=label-redef-late]
    46 00000264 00000000            <1> .ebx:			dd	0							;  52:EBX
    46          ******************  <1>  error: label `TSS_1.ebx' changed during code generation [-w+error=label-redef-late]
    47 00000268 00381000            <1> .esp:			dd	SP_TASK_1					;  56:ESP
    47          ******************  <1>  error: label `TSS_1.esp' changed during code generation [-w+error=label-redef-late]
    48 0000026C 00000000            <1> .ebp:			dd	0							;  60:EBP
    48          ******************  <1>  error: label `TSS_1.ebp' changed during code generation [-w+error=label-redef-late]
    49 00000270 00000000            <1> .esi:			dd	0							;  64:ESI
    49          ******************  <1>  error: label `TSS_1.esi' changed during code generation [-w+error=label-redef-late]
    50 00000274 00000000            <1> .edi:			dd	0							;  68:EDI
    50          ******************  <1>  error: label `TSS_1.edi' changed during code generation [-w+error=label-redef-late]
    51 00000278 27000000            <1> .es:			dd	DS_TASK_1					;  72:ES
    51          ******************  <1>  error: label `TSS_1.es' changed during code generation [-w+error=label-redef-late]
    52 0000027C 1F000000            <1> .cs:			dd	CS_TASK_1					;  76:CS
    52          ******************  <1>  error: label `TSS_1.cs' changed during code generation [-w+error=label-redef-late]
    53 00000280 27000000            <1> .ss:			dd	DS_TASK_1					;  80:SS
    53          ******************  <1>  error: label `TSS_1.ss' changed during code generation [-w+error=label-redef-late]
    54 00000284 27000000            <1> .ds:			dd	DS_TASK_1					;  84:DS
    54          ******************  <1>  error: label `TSS_1.ds' changed during code generation [-w+error=label-redef-late]
    55 00000288 27000000            <1> .fs:			dd	DS_TASK_1					;  88:FS
    55          ******************  <1>  error: label `TSS_1.fs' changed during code generation [-w+error=label-redef-late]
    56 0000028C 27000000            <1> .gs:			dd	DS_TASK_1					;  92:GS
    56          ******************  <1>  error: label `TSS_1.gs' changed during code generation [-w+error=label-redef-late]
    57 00000290 18000000            <1> .ldt:			dd	SS_LDT						;* 96:LDTセグメントセレクタ
    57          ******************  <1>  error: label `TSS_1.ldt' changed during code generation [-w+error=label-redef-late]
    58 00000294 00000000            <1> .io:			dd	0							; 100:I/Oマップベースアドレス
    58          ******************  <1>  error: label `TSS_1.io' changed during code generation [-w+error=label-redef-late]
    59                              <1> 
    60                              <1> 
    61                              <1> ;************************************************************************
    62                              <1> ;	グローバルディスクリプタテーブル
    63                              <1> ;************************************************************************
    64 00000298 0000000000000000    <1> GDT:			dq	0x0000000000000000			; NULL
    64          ******************  <1>  error: label `GDT' changed during code generation [-w+error=label-redef-late]
    65 000002A0 FFFF0000009ACF00    <1> .cs_kernel:		dq	0x00CF9A000000FFFF			; CODE 4G
    65          ******************  <1>  error: label `GDT.cs_kernel' changed during code generation [-w+error=label-redef-late]
    66 000002A8 FFFF00000092CF00    <1> .ds_kernel:		dq	0x00CF92000000FFFF			; DATA 4G
    66          ******************  <1>  error: label `GDT.ds_kernel' changed during code generation [-w+error=label-redef-late]
    67 000002B0 0000000000820000    <1> .ldt			dq	0x0000820000000000			; LDTディスクリプタ
    67          ******************  <1>  error: label `GDT.ldt' changed during code generation [-w+error=label-redef-late]
    68 000002B8 6700000000890000    <1> .tss_0:			dq	0x0000890000000067			; TSSディスクリプタ
    68          ******************  <1>  error: label `GDT.tss_0' changed during code generation [-w+error=label-redef-late]
    69 000002C0 6700000000890000    <1> .tss_1:			dq	0x0000890000000067			; TSSディスクリプタ
    69          ******************  <1>  error: label `GDT.tss_1' changed during code generation [-w+error=label-redef-late]
    70 000002C8 0000080004EC0000    <1> .call_gate:		dq	0x0000EC0400080000			; 386コールゲート(DPL=3, count=4, SEL=8)
    70          ******************  <1>  error: label `GDT.call_gate' changed during code generation [-w+error=label-redef-late]
    71                              <1> .end:
    71          ******************  <1>  error: label `GDT.end' changed during code generation [-w+error=label-redef-late]
    72                              <1> 
    73                              <1> CS_KERNEL		equ	.cs_kernel	- GDT
    74                              <1> DS_KERNEL		equ	.ds_kernel	- GDT
    75                              <1> SS_LDT			equ	.ldt		- GDT
    76                              <1> SS_TASK_0		equ	.tss_0		- GDT
    77                              <1> SS_TASK_1		equ	.tss_1		- GDT
    78                              <1> SS_GATE_0		equ	.call_gate	- GDT
    79                              <1> 
    80 000002D0 3700                <1> GDTR:	dw 		GDT.end - GDT - 1
    80          ******************  <1>  error: label `GDTR' changed during code generation [-w+error=label-redef-late]
    81 000002D2 [98020000]          <1> 		dd 		GDT
    82                              <1> 
    83                              <1> 
    84                              <1> ;************************************************************************
    85                              <1> ;	ローカルディスクリプタテーブル
    86                              <1> ;************************************************************************
    87 000002D6 0000000000000000    <1> LDT:			dq	0x0000000000000000			; NULL
    87          ******************  <1>  error: label `LDT' changed during code generation [-w+error=label-redef-late]
    88 000002DE FFFF0000009ACF00    <1> .cs_task_0:		dq	0x00CF9A000000FFFF			; CODE 4G
    88          ******************  <1>  error: label `LDT.cs_task_0' changed during code generation [-w+error=label-redef-late]
    89 000002E6 FFFF00000092CF00    <1> .ds_task_0:		dq	0x00CF92000000FFFF			; DATA 4G
    89          ******************  <1>  error: label `LDT.ds_task_0' changed during code generation [-w+error=label-redef-late]
    90 000002EE FFFF000000FACF00    <1> .cs_task_1:		dq	0x00CFFA000000FFFF			; CODE 4G
    90          ******************  <1>  error: label `LDT.cs_task_1' changed during code generation [-w+error=label-redef-late]
    91 000002F6 FFFF000000F2CF00    <1> .ds_task_1:		dq	0x00CFF2000000FFFF			; DATA 4G
    91          ******************  <1>  error: label `LDT.ds_task_1' changed during code generation [-w+error=label-redef-late]
    92                              <1> .end:
    92          ******************  <1>  error: label `LDT.end' changed during code generation [-w+error=label-redef-late]
    93                              <1> 
    94                              <1> CS_TASK_0		equ	(.cs_task_0 - LDT) | 4		; タスク0用CSセレクタ
    95                              <1> DS_TASK_0		equ	(.ds_task_0 - LDT) | 4		; タスク0用DSセレクタ
    96                              <1> CS_TASK_1		equ	(.cs_task_1 - LDT) | 4 | 3		; タスク1用CSセレクタ
    97                              <1> DS_TASK_1		equ	(.ds_task_1 - LDT) | 4 | 3	; タスク1用DSセレクタ
    98                              <1> 
    99                              <1> LDT_LIMIT		equ	.end		- LDT - 1
   134                                  %include	"modules/int_timer.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	例外:タイマー
     3                              <1> ;************************************************************************
     4                              <1> int_timer:
     4          ******************  <1>  error: label `int_timer' changed during code generation [-w+error=label-redef-late]
     5                              <1> 		;---------------------------------------
     6                              <1> 		; 【レジスタの保存】
     7                              <1> 		;---------------------------------------
     8 000002FE 60                  <1> 		pusha
     9 000002FF 1E                  <1> 		push	ds
    10 00000300 06                  <1> 		push	es
    11                              <1> 
    12                              <1> 		;---------------------------------------
    13                              <1> 		; データ用セグメントの設定
    14                              <1> 		;---------------------------------------
    15 00000301 66B81000            <1> 		mov		ax, 0x0010						; 
    16 00000305 8ED8                <1> 		mov		ds, ax							; 
    17 00000307 8EC0                <1> 		mov		es, ax							; 
    18                              <1> 
    19                              <1> 		;---------------------------------------
    20                              <1> 		; TICK
    21                              <1> 		;---------------------------------------
    22 00000309 FF05[44030000]      <1> 		inc		dword [TIMER_COUNT]				; TIMER_COUNT++; // 割り込み回数の更新
    23                              <1> 
    24                              <1> 		;---------------------------------------
    25                              <1> 		; 割り込みフラグをクリア(EOI)
    26                              <1> 		;---------------------------------------
    27                              <1> 		outp	0x20, 0x20						; // マスタPIC:EOIコマンド
    27 0000030F B020                <2>  mov al, %2
    27 00000311 E620                <2>  out %1, al
    28                              <1> 
    29                              <1> 		;---------------------------------------
    30                              <1> 		; タスクの切り替え
    31                              <1> 		;---------------------------------------
    32 00000313 660F00C8            <1> 		str		ax								; AX = TR; // 現在のタスクレジスタ
    33 00000317 6683F820            <1> 		cmp		ax, SS_TASK_0					; case (AX)
    34 0000031B 7419                <1> 		je		.11L							; {
    35                              <1> 												;   default:
    36 0000031D EA000000002000      <1> 		jmp		SS_TASK_0:0						;     // タスク0に切り替え
    37 00000324 EB19                <1> 		jmp		.10E							;     break;
    38                              <1> 												;     
    39                              <1> .11L:											;   case SS_TASK_0:
    39          ******************  <1>  error: label `int_timer.11L' changed during code generation [-w+error=label-redef-late]
    40 00000326 EA000000002800      <1> 		jmp		SS_TASK_1:0						;     // タスク1に切り替え
    41 0000032D EB10                <1> 		jmp		.10E							;     break;
    42                              <1> .10E:											; }
    42          ******************  <1>  error: label `int_timer.10E' changed during code generation [-w+error=label-redef-late]
    43                              <1> 
    44                              <1> 		;---------------------------------------
    45                              <1> 		; 【レジスタの復帰】
    46                              <1> 		;---------------------------------------
    47 0000032F 07                  <1> 		pop		es								; 
    48 00000330 1F                  <1> 		pop		ds								; 
    49 00000331 61                  <1> 		popa
    50                              <1> 
    51 00000332 CF                  <1> 		iret
    52                              <1> 
    53 00000333 00                  <1> ALIGN 4, db 0
    54 00000334 00000000            <1> TIMER_COUNT:	dd	0
    54          ******************  <1>  error: label `TIMER_COUNT' changed during code generation [-w+error=label-redef-late]
    55                              <1> 
   135                                  %include	"tasks/task_1.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	TASK-1
     3                              <1> ;************************************************************************
     4                              <1> task_1:
     4          ******************  <1>  error: label `task_1' changed during code generation [-w+error=label-redef-late]
     5                              <1> 		;---------------------------------------
     6                              <1> 		; 文字列の表示
     7                              <1> 		;---------------------------------------
     8 00000338 68[76030000]6A076A- <1> 		cdecl	draw_str, 63, 0, 0x07, .s0	; draw_str();
     8 00000340 006A3FE8F101000066- <1>
     8 00000349 83C410              <1>
     9                              <1> 
    10                              <1> .10L:											; while (;;)
    10          ******************  <1>  error: label `task_1.10L' changed during code generation [-w+error=label-redef-late]
    11                              <1> 												; {
    12                              <1> 		;---------------------------------------
    13                              <1> 		; 時刻の表示
    14                              <1> 		;---------------------------------------
    15 0000034C A1[C4010000]        <1> 		mov		eax, [RTC_TIME]					;   // 時刻の取得
    16 00000351 5068000700006A006A- <1> 		cdecl	draw_time, 72, 0, 0x0700, eax	;   // 時刻の表示
    16 0000035A 48E8410500006683C4- <1>
    16 00000363 10                  <1>
    17                              <1> 
    18                              <1> 		;---------------------------------------
    19                              <1> 		; タスクの呼び出し
    20                              <1> 		;---------------------------------------
    21                              <1> ;		jmp		SS_TASK_0:0						;   // タスク0へのジャンプ
    22                              <1> 
    23 00000364 EBE6                <1> 		jmp		.10L							; }
    24                              <1> 
    25                              <1> 		;---------------------------------------
    26                              <1> 		; データ
    27                              <1> 		;---------------------------------------
    28 00000366 5461736B2D3100      <1> .s0		db	"Task-1", 0
    28          ******************  <1>  error: label `task_1.s0' changed during code generation [-w+error=label-redef-late]
    29                              <1> 
   136                                  
   137                                  ;************************************************************************
   138                                  ;	モジュール
   139                                  ;************************************************************************
   140                                  %include	"../modules/protect/vga.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	読み込みプレーンの選択
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void vga_set_read_plane(plane);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	plane	: 読み込みプレーン
     8                              <1> ;
     9                              <1> ;■戻り値	: 無し
    10                              <1> ;************************************************************************
    11                              <1> vga_set_read_plane:
    11          ******************  <1>  error: label `vga_set_read_plane' changed during code generation [-w+error=label-redef-late]
    12                              <1> 		;---------------------------------------
    13                              <1> 		; 【スタックフレームの構築】
    14                              <1> 		;---------------------------------------
    15                              <1> 												; EBP+ 8| プレーン（インデックス）
    16                              <1> 												; ------+----------------
    17 0000036D 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    18 0000036E 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    19                              <1> 												; ------+----------------
    20                              <1> 
    21                              <1> 		;---------------------------------------
    22                              <1> 		; 【レジスタの保存】
    23                              <1> 		;---------------------------------------
    24 00000370 50                  <1> 		push	eax
    25 00000371 52                  <1> 		push	edx
    26                              <1> 
    27                              <1> 		;---------------------------------------
    28                              <1> 		; 読み込みプレーンの選択
    29                              <1> 		;---------------------------------------
    30 00000372 8A6508              <1> 		mov		ah, [ebp + 8]					; AH  = プレーンを選択（3=輝度, 2～0=RGB）
    31 00000375 80E403              <1> 		and		ah, 0x03						; AH &= 0x03; // 余計なビットをマスク
    32 00000378 B004                <1> 		mov		al, 0x04						; AL  = 読み込みプレーン選択レジスタ
    33 0000037A 66BACE03            <1> 		mov		dx, 0x03CE						; DX  = グラフィックス制御ポート
    34 0000037E 66EF                <1> 		out		dx, ax							; // ポート出力
    35                              <1> 
    36                              <1> 		;---------------------------------------
    37                              <1> 		; 【レジスタの復帰】
    38                              <1> 		;---------------------------------------
    39 00000380 5A                  <1> 		pop		edx
    40 00000381 58                  <1> 		pop		eax
    41                              <1> 
    42                              <1> 		;---------------------------------------
    43                              <1> 		; 【スタックフレームの破棄】
    44                              <1> 		;---------------------------------------
    45 00000382 89EC                <1> 		mov		esp, ebp
    46 00000384 5D                  <1> 		pop		ebp
    47                              <1> 
    48 00000385 C3                  <1> 		ret
    49                              <1> 
    50                              <1> ;************************************************************************
    51                              <1> ;	書き込みプレーンを選択
    52                              <1> ;========================================================================
    53                              <1> ;■書式		: void vga_set_write_plane(plane);
    54                              <1> ;
    55                              <1> ;■引数
    56                              <1> ;	plane	: 書き込みプレーン
    57                              <1> ;
    58                              <1> ;■戻り値	: 無し
    59                              <1> ;************************************************************************
    60                              <1> vga_set_write_plane:
    60          ******************  <1>  error: label `vga_set_write_plane' changed during code generation [-w+error=label-redef-late]
    61                              <1> 		;---------------------------------------
    62                              <1> 		; 【スタックフレームの構築】
    63                              <1> 		;---------------------------------------
    64                              <1> 												; EBP+ 8| プレーン（ビット指定）
    65                              <1> 												; ------+----------------
    66 00000386 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    67 00000387 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    68                              <1> 												; ------+----------------
    69                              <1> 
    70                              <1> 		;---------------------------------------
    71                              <1> 		; 【レジスタの保存】
    72                              <1> 		;---------------------------------------
    73 00000389 50                  <1> 		push	eax
    74 0000038A 52                  <1> 		push	edx
    75                              <1> 
    76                              <1> 		;---------------------------------------
    77                              <1> 		; 書き込みプレーンの選択
    78                              <1> 		;---------------------------------------
    79 0000038B 8A6508              <1> 		mov		ah, [ebp + 8]					; AH = 書き込みプレーンを指定(Bit:----IRGB)
    80 0000038E 80E40F              <1> 		and		ah, 0x0F						; AH = 0x0F; // 余計なビットをマスク
    81 00000391 B002                <1> 		mov		al, 0x02						; AL = 書き込みプレーン選択
    82 00000393 66BAC403            <1> 		mov		dx, 0x03C4						; DX = シーケンサ制御ポート
    83 00000397 66EF                <1> 		out		dx, ax							; // ポート出力
    84                              <1> 
    85                              <1> 		;---------------------------------------
    86                              <1> 		; 【レジスタの復帰】
    87                              <1> 		;---------------------------------------
    88 00000399 5A                  <1> 		pop		edx
    89 0000039A 58                  <1> 		pop		eax
    90                              <1> 
    91                              <1> 		;---------------------------------------
    92                              <1> 		; 【スタックフレームの破棄】
    93                              <1> 		;---------------------------------------
    94 0000039B 89EC                <1> 		mov		esp, ebp
    95 0000039D 5D                  <1> 		pop		ebp
    96                              <1> 
    97 0000039E C3                  <1> 		ret
    98                              <1> 
    99                              <1> ;************************************************************************
   100                              <1> ;	フォントの書き込み
   101                              <1> ;========================================================================
   102                              <1> ;■書式		: void vram_font_copy(font, vram, plane, color);
   103                              <1> ;
   104                              <1> ;■引数
   105                              <1> ;	font	: FONTアドレス
   106                              <1> ;	vram	: VRAMアドレス
   107                              <1> ;	plane	: 出力プレーン（１つのプレーンのみをビットで指定）
   108                              <1> ;	color	: 描画色
   109                              <1> ;
   110                              <1> ;■戻り値	: 無し
   111                              <1> ;************************************************************************
   112                              <1> vram_font_copy:
   112          ******************  <1>  error: label `vram_font_copy' changed during code generation [-w+error=label-redef-late]
   113                              <1> 		;---------------------------------------
   114                              <1> 		; 【スタックフレームの構築】
   115                              <1> 		;---------------------------------------
   116                              <1> 												; EBP+20| 色（背景/前景色）
   117                              <1> 												; EBP+16| プレーン（ビット指定）
   118                              <1> 												; EBP+12| VRAMアドレス
   119                              <1> 												; EBP+ 8| FONTアドレス
   120                              <1> 												; ------+----------------
   121 0000039F 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   122 000003A0 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   123                              <1> 												; ------+----------------
   124                              <1> 
   125                              <1> 		;---------------------------------------
   126                              <1> 		; 【レジスタの保存】
   127                              <1> 		;---------------------------------------
   128 000003A2 50                  <1> 		push	eax
   129 000003A3 53                  <1> 		push	ebx
   130 000003A4 51                  <1> 		push	ecx
   131 000003A5 52                  <1> 		push	edx
   132 000003A6 56                  <1> 		push	esi
   133 000003A7 57                  <1> 		push	edi
   134                              <1> 
   135                              <1> 		;---------------------------------------
   136                              <1> 		; 【処理の開始】
   137                              <1> 		;---------------------------------------
   138 000003A8 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = フォントアドレス;
   139 000003AB 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   140 000003AE 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   141 000003B2 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 色;
   142                              <1> 
   143 000003B6 84C7                <1> 		test	bh, al							; ZF = (背景色 & プレーン);
   144 000003B8 0F94C6              <1> 		setz	dh								; AH = ZF ? 0x01 : 0x00
   145 000003BB FECE                <1> 		dec		dh								; AH--; // 0x00 or 0xFF
   146                              <1> 
   147 000003BD 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   148 000003BF 0F94C2              <1> 		setz	dl								; AL = ZF ? 0x01 : 0x00
   149 000003C2 FECA                <1> 		dec		dl								; AL--; // 0x00 or 0xFF
   150                              <1> 
   151                              <1> 		;---------------------------------------
   152                              <1> 		; 16ドットフォントのコピー
   153                              <1> 		;---------------------------------------
   154 000003C4 FC                  <1> 		cld										; DF  = 0; // アドレス加算
   155                              <1> 
   156 000003C5 B910000000          <1> 		mov		ecx, 16							; ECX = 16; // 16ドット
   157                              <1> .10L:											; do
   157          ******************  <1>  error: label `vram_font_copy.10L' changed during code generation [-w+error=label-redef-late]
   158                              <1> 												; {
   159                              <1> 		;---------------------------------------
   160                              <1> 		; フォントマスクの作成
   161                              <1> 		;---------------------------------------
   162 000003CA AC                  <1> 		lodsb									;   AL  = *ESI++; //  フォント
   163 000003CB 88C4                <1> 		mov		ah, al							;   AH ~= AL;     // !フォント（ビット反転）
   164 000003CD F6D4                <1> 		not		ah								;   
   165                              <1> 
   166                              <1> 		;---------------------------------------
   167                              <1> 		; 前景色
   168                              <1> 		;---------------------------------------
   169 000003CF 20D0                <1> 		and		al, dl							;   AL = 前景色 & フォント;
   170                              <1> 
   171                              <1> 		;---------------------------------------
   172                              <1> 		; 背景色
   173                              <1> 		;---------------------------------------
   174 000003D1 F7C310000000        <1> 		test	ebx, 0x0010						;   if (透過モード)
   175 000003D7 7414                <1> 		jz		.11F							;   {
   176 000003D9 2227                <1> 		and		ah, [edi]						;     AH = !フォント & [EDI] // 現在値
   177 000003DB EB12                <1> 		jmp		.11E							;   }
   178                              <1> .11F:											;   else
   178          ******************  <1>  error: label `vram_font_copy.11F' changed during code generation [-w+error=label-redef-late]
   179                              <1> 												;   {
   180 000003DD 20F4                <1> 		and		ah, dh							;     AH = !フォント & 背景色;
   181                              <1> .11E:											;   }
   181          ******************  <1>  error: label `vram_font_copy.11E' changed during code generation [-w+error=label-redef-late]
   182                              <1> 
   183                              <1> 		;---------------------------------------
   184                              <1> 		; 前景色と背景色を合成
   185                              <1> 		;---------------------------------------
   186 000003DF 08E0                <1> 		or		al, ah							;   AL  = 背景 | 前景;
   187                              <1> 
   188                              <1> 		;---------------------------------------
   189                              <1> 		; 新しい値を出力
   190                              <1> 		;---------------------------------------
   191 000003E1 8807                <1> 		mov		[edi], al						;   [EDI] = AL; // プレーンに書き込む
   192                              <1> 
   193 000003E3 83C750              <1> 		add		edi, 80							;   EDI += 80;
   194 000003E6 E2E2                <1> 		loop	.10L							; } while (--ECX);
   195                              <1> .10E:											; 
   195          ******************  <1>  error: label `vram_font_copy.10E' changed during code generation [-w+error=label-redef-late]
   196                              <1> 
   197                              <1> 		;---------------------------------------
   198                              <1> 		; 【レジスタの復帰】
   199                              <1> 		;---------------------------------------
   200 000003E8 5F                  <1> 		pop		edi
   201 000003E9 5E                  <1> 		pop		esi
   202 000003EA 5A                  <1> 		pop		edx
   203 000003EB 59                  <1> 		pop		ecx
   204 000003EC 5B                  <1> 		pop		ebx
   205 000003ED 58                  <1> 		pop		eax
   206                              <1> 
   207                              <1> 		;---------------------------------------
   208                              <1> 		; 【スタックフレームの破棄】
   209                              <1> 		;---------------------------------------
   210 000003EE 89EC                <1> 		mov		esp, ebp
   211 000003F0 5D                  <1> 		pop		ebp
   212                              <1> 
   213 000003F1 C3                  <1> 		ret
   214                              <1> 
   215                              <1> ;************************************************************************
   216                              <1> ;	ビットパターンの書き込み
   217                              <1> ;========================================================================
   218                              <1> ;■書式		: void vram_bit_copy(bit, vram, flag);
   219                              <1> ;
   220                              <1> ;■引数
   221                              <1> ;	bit		: 出力ビットパターン
   222                              <1> ;	vram	: VRAMアドレス
   223                              <1> ;	flag	: 1:セット, 0:クリア
   224                              <1> ;
   225                              <1> ;■戻り値	: 無し
   226                              <1> ;************************************************************************
   227                              <1> vram_bit_copy:
   227          ******************  <1>  error: label `vram_bit_copy' changed during code generation [-w+error=label-redef-late]
   228                              <1> 		;---------------------------------------
   229                              <1> 		; 【スタックフレームの構築】
   230                              <1> 		;---------------------------------------
   231                              <1> 												; EBP+20| 色（背景/前景色）
   232                              <1> 												; EBP+16| プレーン（ビット指定）
   233                              <1> 												; EBP+12| VRAMアドレス
   234                              <1> 												; EBP+ 8| 出力ビットパターン
   235                              <1> 												; ------+----------------
   236 000003F2 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   237 000003F3 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   238                              <1> 												; ------+----------------
   239                              <1> 
   240                              <1> 		;---------------------------------------
   241                              <1> 		; 【レジスタの保存】
   242                              <1> 		;---------------------------------------
   243 000003F5 50                  <1> 		push	eax
   244 000003F6 53                  <1> 		push	ebx
   245 000003F7 57                  <1> 		push	edi
   246                              <1> 
   247                              <1> 		;---------------------------------------
   248                              <1> 		; 【処理の開始】
   249                              <1> 		;---------------------------------------
   250 000003F8 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMアドレス;
   251 000003FB 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = プレーン（ビット指定）;
   252 000003FF 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = 表示色;
   253                              <1> 
   254 00000403 84C3                <1> 		test	bl, al							; ZF = (前景色 & プレーン);
   255 00000405 0F94C3              <1> 		setz	bl								; BL = ZF ? 0x01 : 0x00
   256 00000408 FECB                <1> 		dec		bl								; BL--; // 0x00 or 0xFF
   257                              <1> 
   258                              <1> 		;---------------------------------------
   259                              <1> 		; マスクデータの作成
   260                              <1> 		;---------------------------------------
   261 0000040A 8A4508              <1> 		mov		al, [ebp + 8]					; AL = 出力ビットパターン;
   262 0000040D 88C4                <1> 		mov		ah, al							; AH ~= AL;     // !出力ビットパターン（ビット反転）
   263 0000040F F6D4                <1> 		not		ah								; 
   264                              <1> 
   265                              <1> 		;---------------------------------------
   266                              <1> 		; 現在値の出力を取得
   267                              <1> 		;---------------------------------------
   268 00000411 2227                <1> 		and		ah, [edi]						; AH  = 現在値 & !出力ビットパターン
   269 00000413 20D8                <1> 		and		al, bl							; AL  = 表示色 &  出力ビットパターン
   270 00000415 08E0                <1> 		or		al, ah							; AL |= AH;
   271                              <1> 
   272                              <1> 		;---------------------------------------
   273                              <1> 		; 新しい値を出力
   274                              <1> 		;---------------------------------------
   275 00000417 8807                <1> 		mov		[edi], al						; [EDI] = BL; // プレーンに書き込む
   276                              <1> 
   277                              <1> 		;---------------------------------------
   278                              <1> 		; 【レジスタの復帰】
   279                              <1> 		;---------------------------------------
   280 00000419 5F                  <1> 		pop		edi
   281 0000041A 5B                  <1> 		pop		ebx
   282 0000041B 58                  <1> 		pop		eax
   283                              <1> 
   284                              <1> 		;---------------------------------------
   285                              <1> 		; 【スタックフレームの破棄】
   286                              <1> 		;---------------------------------------
   287 0000041C 89EC                <1> 		mov		esp, ebp
   288 0000041E 5D                  <1> 		pop		ebp
   289                              <1> 
   290 0000041F C3                  <1> 		ret
   291                              <1> 
   141                                  %include	"../modules/protect/draw_char.s"
     1                              <1> draw_char:
     1          ******************  <1>  error: label `draw_char' changed during code generation [-w+error=label-redef-late]
     2                              <1> 		;---------------------------------------
     3                              <1> 		; 【スタックフレームの構築】
     4                              <1> 		;---------------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+20| 文字
     7                              <1> 												; EBP+16| 色
     8                              <1> 												; EBP+12| Y（行）
     9                              <1> 												; EBP+ 8| X（列）
    10                              <1> 												; ------+----------------
    11 00000420 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    12 00000421 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    13                              <1> 												; ------+----------------
    14                              <1> 
    15                              <1> 		;---------------------------------------
    16                              <1> 		; 【レジスタの保存】
    17                              <1> 		;---------------------------------------
    18 00000423 50                  <1> 		push	eax
    19 00000424 53                  <1> 		push	ebx
    20 00000425 51                  <1> 		push	ecx
    21 00000426 52                  <1> 		push	edx
    22 00000427 56                  <1> 		push	esi
    23 00000428 57                  <1> 		push	edi
    24                              <1> 		;---------------------------------------
    25                              <1> 		; テストアンドセット
    26                              <1> 		;---------------------------------------
    27                              <1> %ifdef	USE_TEST_AND_SET
    28                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
    29                              <1> %endif
    30                              <1> 
    31                              <1>         ;コピー元のアドレスを取得
    32 00000429 0FB67514            <1>         movzx   esi, byte [ebp +20]
    33 0000042D C1E604              <1>         shl     esi, 4
    34 00000430 0335[C0010000]      <1>         add     esi, [FONT_ADR]
    35                              <1> 
    36                              <1>         ;コピー先のアドレスを取得
    37 00000436 8B7D0C              <1>         mov     edi, [ebp +12]
    38 00000439 C1E708              <1>         shl     edi, 8
    39 0000043C 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]
    40 00000443 037D08              <1>         add     edi, [ebp + 8]
    41                              <1> 
    42                              <1>         ;一文字分のフォントを出力
    43 00000446 0FB75D10            <1> 		movzx	ebx, word [ebp +16]				; // 表示色
    44                              <1> 
    45 0000044A 6A03E81CFFFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 読み込みプレーン：輝度(I)
    45 00000453 C404                <1>
    46 00000455 6A08E82AFFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 書き込みプレーン：輝度(I)
    46 0000045E C404                <1>
    47 00000460 536A085756E835FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x08, ebx
    47 00000469 FF6683C410          <1>
    48                              <1> 
    49 0000046E 6A02E8F8FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 読み込みプレーン：赤(R)
    49 00000477 C404                <1>
    50 00000479 6A04E806FFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 書き込みプレーン：赤(R)
    50 00000482 C404                <1>
    51 00000484 536A045756E811FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x04, ebx
    51 0000048D FF6683C410          <1>
    52                              <1> 
    53 00000492 6A01E8D4FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 読み込みプレーン：緑(G)
    53 0000049B C404                <1>
    54 0000049D 6A02E8E2FEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 書き込みプレーン：緑(G)
    54 000004A6 C404                <1>
    55 000004A8 536A025756E8EDFEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x02, ebx
    55 000004B1 FF6683C410          <1>
    56                              <1> 
    57 000004B6 6A00E8B0FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 読み込みプレーン：青(B)
    57 000004BF C404                <1>
    58 000004C1 6A01E8BEFEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 書き込みプレーン：青(B)
    58 000004CA C404                <1>
    59 000004CC 536A015756E8C9FEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x01, ebx
    59 000004D5 FF6683C410          <1>
    60                              <1> 
    61                              <1> %ifdef	USE_TEST_AND_SET
    62                              <1> 		;---------------------------------------
    63                              <1> 		; テストアンドセット
    64                              <1> 		;---------------------------------------
    65                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
    66                              <1> %endif
    67                              <1> 
    68                              <1> 		;---------------------------------------
    69                              <1> 		; 【レジスタの復帰】
    70                              <1> 		;---------------------------------------
    71 000004DA 5F                  <1> 		pop		edi
    72 000004DB 5E                  <1> 		pop		esi
    73 000004DC 5A                  <1> 		pop		edx
    74 000004DD 59                  <1> 		pop		ecx
    75 000004DE 5B                  <1> 		pop		ebx
    76 000004DF 58                  <1> 		pop		eax
    77                              <1> 
    78                              <1> 		;---------------------------------------
    79                              <1> 		; 【スタックフレームの破棄】
    80                              <1> 		;---------------------------------------
    81 000004E0 89EC                <1> 		mov		esp, ebp
    82 000004E2 5D                  <1> 		pop		ebp
    83                              <1> 
    84 000004E3 C3                  <1> 		ret
    85                              <1> 
    86                              <1> %ifdef USE_TEST_AND_SET
    87                              <1> ALIGN 4, db 0
    88                              <1> IN_USE:	dd	0
    89                              <1> %endif
    90                              <1> 
   142                                  %include	"../modules/protect/draw_font.s"
     1                              <1> draw_font:
     1          ******************  <1>  error: label `draw_font' changed during code generation [-w+error=label-redef-late]
     2                              <1> 		;---------------------------------------
     3                              <1> 		; 【スタックフレームの構築】
     4                              <1> 		;---------------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+12| Y（行）
     7                              <1> 												; EBP+ 8| X（列）
     8                              <1> 												; ---------------
     9 000004E4 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    10 000004E5 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    11                              <1> 												; ---------------
    12                              <1> 
    13                              <1> 		;---------------------------------------
    14                              <1> 		; 【レジスタの保存】
    15                              <1> 		;---------------------------------------
    16 000004E7 50                  <1> 		push	eax
    17 000004E8 53                  <1> 		push	ebx
    18 000004E9 51                  <1> 		push	ecx
    19 000004EA 52                  <1> 		push	edx
    20 000004EB 56                  <1> 		push	esi
    21 000004EC 57                  <1> 		push	edi
    22                              <1> 
    23                              <1> 		;---------------------------------------
    24                              <1> 		; 表示位置
    25                              <1> 		;---------------------------------------
    26 000004ED 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
    27 000004F0 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
    28                              <1> 
    29 000004F3 B900000000          <1>         mov     ecx, 0
    30 000004F8 81F900010000        <1> .10L:   cmp     ecx, 256
    30          ******************  <1>  error: label `draw_font.10L' changed during code generation [-w+error=label-redef-late]
    31 000004FE 732F                <1>         jae     .10E
    32                              <1> 
    33 00000500 89C8                <1>         mov     eax, ecx
    34 00000502 83E00F              <1>         and     eax, 0x0F
    35 00000505 01F0                <1>         add     eax, esi            ;列 0 => 11110000 として端っこによるようにする
    36                              <1> 
    37 00000507 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
    38 00000509 C1EB04              <1> 		shr		ebx, 4							;   EBX /= 16
    39 0000050C 01FB                <1> 		add		ebx, edi						;   EBX += Y;       ;行 １６で割ったときに商がいくつか
    40                              <1> 
    41 0000050E 516A075350E808FFFF- <1> 		cdecl	draw_char, eax, ebx, 0x07, ecx	;   draw_char();
    41 00000517 FF6683C410          <1>
    42                              <1> 
    43 0000051C 41                  <1> 		inc		ecx								;   // for (... ECX++)
    44 0000051D EBD9                <1> 		jmp		.10L							; 
    45                              <1> .10E:											; }
    45          ******************  <1>  error: label `draw_font.10E' changed during code generation [-w+error=label-redef-late]
    46                              <1> 
    47                              <1> 		;---------------------------------------
    48                              <1> 		; 【レジスタの復帰】
    49                              <1> 		;---------------------------------------
    50 0000051F 5F                  <1> 		pop		edi
    51 00000520 5E                  <1> 		pop		esi
    52 00000521 5A                  <1> 		pop		edx
    53 00000522 59                  <1> 		pop		ecx
    54 00000523 5B                  <1> 		pop		ebx
    55 00000524 58                  <1> 		pop		eax
    56                              <1> 
    57                              <1> 		;---------------------------------------
    58                              <1> 		; 【スタックフレームの破棄】
    59                              <1> 		;---------------------------------------
    60 00000525 89EC                <1> 		mov		esp, ebp
    61 00000527 5D                  <1> 		pop		ebp
    62                              <1> 
    63 00000528 C3                  <1> 		ret
    64                              <1> 
   143                                  %include	"../modules/protect/draw_str.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	文字列の表示
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_str(col, row, color, p);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	col		: 列
     8                              <1> ;	row		: 行
     9                              <1> ;	color	: 描画色
    10                              <1> ;	p		: 文字列のアドレス
    11                              <1> ;
    12                              <1> ;■戻り値	: 無し
    13                              <1> ;************************************************************************
    14                              <1> draw_str:
    14          ******************  <1>  error: label `draw_str' changed during code generation [-w+error=label-redef-late]
    15                              <1> 		;---------------------------------------
    16                              <1> 		; 【スタックフレームの構築】
    17                              <1> 		;---------------------------------------
    18                              <1> 												; ------|--------
    19                              <1> 												; EBP+20| *p（文字列のアドレス）
    20                              <1> 												; EBP+16| color（色）
    21                              <1> 												; EBP+12| row（行）
    22                              <1> 												; EBP+ 8| col（列）
    23                              <1> 												; ---------------
    24 00000529 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    25 0000052A 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    26                              <1> 												; ---------------
    27                              <1> 
    28                              <1> 		;---------------------------------------
    29                              <1> 		; 【レジスタの保存】
    30                              <1> 		;---------------------------------------
    31 0000052C 50                  <1> 		push	eax
    32 0000052D 53                  <1> 		push	ebx
    33 0000052E 51                  <1> 		push	ecx
    34 0000052F 52                  <1> 		push	edx
    35 00000530 56                  <1> 		push	esi
    36                              <1> 
    37                              <1> 		;---------------------------------------
    38                              <1> 		; 文字列の表示
    39                              <1> 		;---------------------------------------
    40 00000531 8B4D08              <1> 		mov		ecx, [ebp + 8]					; ECX = 列;
    41 00000534 8B550C              <1> 		mov		edx, [ebp +12]					; EDX = 行;
    42 00000537 0FB75D10            <1> 		movzx	ebx, word [ebp + 16]			; EBX = 表示色;
    43 0000053B 8B7514              <1> 		mov		esi, [ebp +20]					; ESI = 文字列のアドレス;
    44                              <1> 
    45 0000053E FC                  <1> 		cld										; DF = 0; // アドレス加算
    46                              <1> .10L:											; do
    46          ******************  <1>  error: label `draw_str.10L' changed during code generation [-w+error=label-redef-late]
    47                              <1> 												; {
    48 0000053F AC                  <1> 		lodsb									;   AL = *ESI++; // 文字を取得
    49 00000540 3C00                <1> 		cmp		al, 0							;   if (0 == AL)
    50 00000542 7435                <1> 		je		.10E							;     break;
    51                              <1> 
    52                              <1> 		;---------------------------------------
    53                              <1> 		; 1文字表示
    54                              <1> 		;---------------------------------------
    55                              <1> %ifdef	USE_SYSTEM_CALL
    56                              <1> 		int		0x81							;   sys_call(1, X, Y, 色, 文字);
    57                              <1> %else
    58 00000544 50535251E8D3FEFFFF- <1> 		cdecl	draw_char, ecx, edx, ebx, eax	;   draw_char();
    58 0000054D 6683C410            <1>
    59                              <1> %endif
    60                              <1> 
    61                              <1> 		; 次の文字の位置を調整
    62 00000551 41                  <1> 		inc		ecx								;   ECX++;           // 列を加算
    63 00000552 83F950              <1> 		cmp		ecx, 80							;   if (80 <= ECX)   // 80文字以上？
    64 00000555 7C20                <1> 		jl		.12E							;   {
    65 00000557 B900000000          <1> 		mov		ecx, 0							;     ECX = 0;       // 列を初期化
    66 0000055C 42                  <1> 		inc		edx								;     EDX++;         // 行を加算
    67 0000055D 83FA1E              <1> 		cmp		edx, 30							;     if (30 <= EDX) // 30行以上？
    68 00000560 7C15                <1> 		jl		.12E							;     {
    69 00000562 BA00000000          <1> 		mov		edx, 0							;       EDX = 0;     // 行を初期化
    70                              <1> 												;     }
    71                              <1> .12E:											;   }
    71          ******************  <1>  error: label `draw_str.12E' changed during code generation [-w+error=label-redef-late]
    72 00000567 EBD6                <1> 		jmp		.10L							;   
    73                              <1> .10E:											; } while (1);
    73          ******************  <1>  error: label `draw_str.10E' changed during code generation [-w+error=label-redef-late]
    74                              <1> 
    75                              <1> 		;---------------------------------------
    76                              <1> 		; 【レジスタの復帰】
    77                              <1> 		;---------------------------------------
    78 00000569 5E                  <1> 		pop		esi
    79 0000056A 5A                  <1> 		pop		edx
    80 0000056B 59                  <1> 		pop		ecx
    81 0000056C 5B                  <1> 		pop		ebx
    82 0000056D 58                  <1> 		pop		eax
    83                              <1> 
    84                              <1> 		;---------------------------------------
    85                              <1> 		; 【スタックフレームの破棄】
    86                              <1> 		;---------------------------------------
    87 0000056E 89EC                <1> 		mov		esp, ebp
    88 00000570 5D                  <1> 		pop		ebp
    89                              <1> 
    90 00000571 C3                  <1> 		ret
    91                              <1> 
   144                                  %include	"../modules/protect/draw_color_bar.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	カラーバーの表示
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_color_bar(col, row);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	col		: 列
     8                              <1> ;	row		: 行
     9                              <1> ;
    10                              <1> ;■戻り値	: 無し
    11                              <1> ;************************************************************************
    12                              <1> draw_color_bar:
    12          ******************  <1>  error: label `draw_color_bar' changed during code generation [-w+error=label-redef-late]
    13                              <1> 		;---------------------------------------
    14                              <1> 		; 【スタックフレームの構築】
    15                              <1> 		;---------------------------------------
    16                              <1> 												; ------|--------
    17                              <1> 												; EBP+ 8| X（列）
    18                              <1> 												; EBP+12| Y（行）
    19                              <1> 												; ---------------
    20 00000572 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    21 00000573 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    22                              <1> 												; ---------------
    23                              <1> 		;---------------------------------------
    24                              <1> 		; 【レジスタの保存】
    25                              <1> 		;---------------------------------------
    26 00000575 50                  <1> 		push	eax
    27 00000576 53                  <1> 		push	ebx
    28 00000577 51                  <1> 		push	ecx
    29 00000578 52                  <1> 		push	edx
    30 00000579 56                  <1> 		push	esi
    31 0000057A 57                  <1> 		push	edi
    32                              <1> 
    33                              <1> 		;---------------------------------------
    34                              <1> 		; 表示位置
    35                              <1> 		;---------------------------------------
    36 0000057B 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = X（列）
    37 0000057E 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）
    38                              <1> 
    39                              <1> 		;---------------------------------------
    40                              <1> 		; カラーバーを表示
    41                              <1> 		;---------------------------------------
    42 00000581 B900000000          <1> 		mov		ecx, 0							; for (ECX = 0;
    43 00000586 83F910              <1> .10L:	cmp		ecx, 16							;      ECX < 16;
    43          ******************  <1>  error: label `draw_color_bar.10L' changed during code generation [-w+error=label-redef-late]
    44 00000589 733E                <1> 		jae		.10E							; 
    45                              <1> 												;      ECX++)
    46                              <1> 												; {
    47                              <1> 												;   // 桁位置の計算
    48 0000058B 89C8                <1> 		mov		eax, ecx						;   EAX  = ECX;
    49 0000058D 83E001              <1> 		and		eax, 0x01						;   EAX &= 0x01;
    50 00000590 C1E003              <1> 		shl		eax, 3							;   EAX *= 8;  // 8文字分乗算
    51 00000593 01F0                <1> 		add		eax, esi						;   EAX += X;
    52                              <1> 												;   
    53                              <1> 												;   // 行位置の計算
    54 00000595 89CB                <1> 		mov		ebx, ecx						;   EBX  = ECX;
    55 00000597 D1EB                <1> 		shr		ebx, 1							;   EBX /= 2
    56 00000599 01FB                <1> 		add		ebx, edi						;   EBX += Y;
    57                              <1> 												;   
    58                              <1> 												;   // 表示色の取得
    59 0000059B 89CA                <1> 		mov		edx, ecx						;   EDX  = ECX;
    60 0000059D D1E2                <1> 		shl		edx, 1							;   EDX *= 2;
    61 0000059F 8B92[DC050000]      <1> 		mov		edx, [.t0 + edx]				;   EDX += Y;
    62                              <1> 
    63 000005A5 68[D3050000]525350- <1> 		cdecl	draw_str, eax, ebx, edx, .s0	;   draw_str();
    63 000005AD E877FFFFFF6683C410  <1>
    64                              <1> 
    65 000005B6 41                  <1> 		inc		ecx								;   // for (... ECX++)
    66 000005B7 EBCD                <1> 		jmp		.10L							; 
    67                              <1> .10E:											; }
    67          ******************  <1>  error: label `draw_color_bar.10E' changed during code generation [-w+error=label-redef-late]
    68                              <1> 
    69                              <1> 		;---------------------------------------
    70                              <1> 		; 【レジスタの復帰】
    71                              <1> 		;---------------------------------------
    72 000005B9 5F                  <1> 		pop		edi
    73 000005BA 5E                  <1> 		pop		esi
    74 000005BB 5A                  <1> 		pop		edx
    75 000005BC 59                  <1> 		pop		ecx
    76 000005BD 5B                  <1> 		pop		ebx
    77 000005BE 58                  <1> 		pop		eax
    78                              <1> 
    79                              <1> 		;---------------------------------------
    80                              <1> 		; 【スタックフレームの破棄】
    81                              <1> 		;---------------------------------------
    82 000005BF 89EC                <1> 		mov		esp, ebp
    83 000005C1 5D                  <1> 		pop		ebp
    84                              <1> 
    85 000005C2 C3                  <1> 		ret
    86                              <1> 
    87 000005C3 202020202020202000  <1> .s0:	db '        ', 0						; 8文字分のスペース（表示色だけを変更）
    87          ******************  <1>  error: label `draw_color_bar.s0' changed during code generation [-w+error=label-redef-late]
    88                              <1> 
    89 000005CC 00000008            <1> .t0:	dw	0x0000, 0x0800						; カラーバーの背景色
    89          ******************  <1>  error: label `draw_color_bar.t0' changed during code generation [-w+error=label-redef-late]
    90 000005D0 00010009            <1> 		dw	0x0100, 0x0900
    91 000005D4 0002000A            <1> 		dw	0x0200, 0x0A00
    92 000005D8 0003000B            <1> 		dw	0x0300, 0x0B00
    93 000005DC 0004000C            <1> 		dw	0x0400, 0x0C00
    94 000005E0 0005000D            <1> 		dw	0x0500, 0x0D00
    95 000005E4 0006000E            <1> 		dw	0x0600, 0x0E00
    96 000005E8 0007000F            <1> 		dw	0x0700, 0x0F00
    97                              <1> 
   145                                  %include	"../modules/protect/draw_pixel.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	ピクセルの描画
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_pixel(X, Y, color);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	X		: X座標
     8                              <1> ;	Y		: Y座標
     9                              <1> ;	color	: 描画色
    10                              <1> ;
    11                              <1> ;■戻り値	: 無し
    12                              <1> ;************************************************************************
    13                              <1> draw_pixel:
    13          ******************  <1>  error: label `draw_pixel' changed during code generation [-w+error=label-redef-late]
    14                              <1> 		;---------------------------------------
    15                              <1> 		; 【スタックフレームの構築】
    16                              <1> 		;---------------------------------------
    17                              <1> 												; ------|--------
    18                              <1> 												; EBP+16| 色
    19                              <1> 												; EBP+12| Y
    20                              <1> 												; EBP+ 8| X
    21                              <1> 												; ------|--------
    22 000005EC 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    23 000005ED 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    24                              <1> 												; ------+--------
    25                              <1> 		;---------------------------------------
    26                              <1> 		; 【レジスタの保存】
    27                              <1> 		;---------------------------------------
    28 000005EF 50                  <1> 		push	eax
    29 000005F0 53                  <1> 		push	ebx
    30 000005F1 51                  <1> 		push	ecx
    31 000005F2 57                  <1> 		push	edi
    32                              <1>         
    33                              <1> 		;---------------------------------------
    34                              <1> 		; Y座標を80倍する（640/8）
    35                              <1> 		;---------------------------------------
    36                              <1> 
    37 000005F3 8B7D0C              <1>         mov     edi, [ebp +12]
    38 000005F6 C1E704              <1>         shl     edi, 4
    39 000005F9 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000]
    40                              <1> 
    41 00000600 8B5D08              <1>         mov     ebx, [ebp + 8]
    42 00000603 89D9                <1>         mov     ecx, ebx
    43 00000605 C1EB03              <1>         shr     ebx, 3
    44 00000608 01DF                <1>         add     edi, ebx
    45                              <1> 
    46 0000060A 83E107              <1>         and     ecx, 0x07
    47 0000060D BB80000000          <1>         mov     ebx, 0x80
    48 00000612 D3EB                <1>         shr     ebx, cl
    49                              <1> 
    50 00000614 8B4D10              <1>         mov     ecx, [ebp +16]
    51                              <1> 
    52                              <1> %ifdef	USE_TEST_AND_SET
    53                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
    54                              <1> %endif
    55                              <1> 
    56                              <1> 		;---------------------------------------
    57                              <1> 		; プレーン毎に出力
    58                              <1> 		;---------------------------------------
    59 00000617 6A03E84FFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 輝度(I)プレーンを選択
    59 00000620 C404                <1>
    60 00000622 6A08E85DFDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 輝度(I)プレーンを選択
    60 0000062B C404                <1>
    61 0000062D 516A085753E8BBFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x08, ecx
    61 00000636 FF6683C410          <1>
    62                              <1> 
    63 0000063B 6A02E82BFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 赤(R)プレーンを選択
    63 00000644 C404                <1>
    64 00000646 6A04E839FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 赤(R)プレーンを選択
    64 0000064F C404                <1>
    65 00000651 516A045753E897FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x04, ecx
    65 0000065A FF6683C410          <1>
    66                              <1> 
    67 0000065F 6A01E807FDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 緑(G)プレーンを選択
    67 00000668 C404                <1>
    68 0000066A 6A02E815FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 緑(G)プレーンを選択
    68 00000673 C404                <1>
    69 00000675 516A025753E873FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x02, ecx
    69 0000067E FF6683C410          <1>
    70                              <1> 
    71 00000683 6A00E8E3FCFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 青(B)プレーンを選択
    71 0000068C C404                <1>
    72 0000068E 6A01E8F1FCFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 青(B)プレーンを選択
    72 00000697 C404                <1>
    73 00000699 516A015753E84FFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x01, ecx
    73 000006A2 FF6683C410          <1>
    74                              <1> 
    75                              <1> 
    76                              <1> %ifdef	USE_TEST_AND_SET
    77                              <1> 		;---------------------------------------
    78                              <1> 		; テストアンドセット
    79                              <1> 		;---------------------------------------
    80                              <1> 		mov		[IN_USE], dword 0				; 変数のクリア
    81                              <1> %endif
    82                              <1> 
    83                              <1> 		;---------------------------------------
    84                              <1> 		; 【レジスタの復帰】
    85                              <1> 		;---------------------------------------
    86 000006A7 5F                  <1> 		pop		edi
    87 000006A8 59                  <1> 		pop		ecx
    88 000006A9 5B                  <1> 		pop		ebx
    89 000006AA 58                  <1> 		pop		eax
    90                              <1> 
    91                              <1> 		;---------------------------------------
    92                              <1> 		; 【スタックフレームの破棄】
    93                              <1> 		;---------------------------------------
    94 000006AB 89EC                <1> 		mov		esp, ebp
    95 000006AD 5D                  <1> 		pop		ebp
    96                              <1> 
    97 000006AE C3                  <1> 		ret
    98                              <1> 
   146                                  %include	"../modules/protect/draw_line.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	直線の描画
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_line(X0, Y0, X1, Y1, color);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	X0		: 始点のX座標
     8                              <1> ;	Y0		: 始点のY座標
     9                              <1> ;	X1		: 終点のX座標
    10                              <1> ;	Y1		: 終点のY座標
    11                              <1> ;	color	: 描画色
    12                              <1> ;
    13                              <1> ;■戻り値	: 無し
    14                              <1> ;************************************************************************
    15                              <1> draw_line:
    15          ******************  <1>  error: label `draw_line' changed during code generation [-w+error=label-redef-late]
    16                              <1> 		;---------------------------------------
    17                              <1> 		; 【スタックフレームの構築】
    18                              <1> 		;---------------------------------------
    19                              <1> 												; ---------------
    20                              <1> 												;    +24| 色
    21                              <1> 												;    +20| Y1
    22                              <1> 												;    +16| X1
    23                              <1> 												;    +12| Y0
    24                              <1> 												;    + 8| X0
    25                              <1> 												; ---------------
    26 000006AF 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    27 000006B0 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    28                              <1> 												; ---------------
    29 000006B2 6A00                <1> 		push	dword 0							;    - 4| sum   = 0; // 相対軸の積算値
    30 000006B4 6A00                <1> 		push	dword 0							;    - 8| x0    = 0; // X座標
    31 000006B6 6A00                <1> 		push	dword 0							;    -12| dx    = 0; // X増分
    32 000006B8 6A00                <1> 		push	dword 0							;    -16| inc_x = 0; // X座標増分(1 or -1)
    33 000006BA 6A00                <1> 		push	dword 0							;    -20| y0    = 0; // Y座標
    34 000006BC 6A00                <1> 		push	dword 0							;    -24| dy    = 0; // Y増分
    35 000006BE 6A00                <1> 		push	dword 0							;    -28| inc_y = 0; // Y座標増分(1 or -1)
    36                              <1> 												; ------|--------
    37                              <1> 
    38                              <1> 		;---------------------------------------
    39                              <1> 		; 【レジスタの保存】
    40                              <1> 		;---------------------------------------
    41 000006C0 50                  <1> 		push	eax
    42 000006C1 53                  <1> 		push	ebx
    43 000006C2 51                  <1> 		push	ecx
    44 000006C3 52                  <1> 		push	edx
    45 000006C4 56                  <1> 		push	esi
    46 000006C5 57                  <1> 		push	edi
    47                              <1> 
    48                              <1> 		;---------------------------------------
    49                              <1> 		; 幅を計算（X軸）
    50                              <1> 		;---------------------------------------
    51 000006C6 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
    52 000006C9 8B5D10              <1> 		mov		ebx, [ebp +16]					; EBX = X1;
    53 000006CC 29C3                <1> 		sub		ebx, eax						; EBX = X1 - X0; // 幅
    54 000006CE 7D19                <1> 		jge		.10F							; if (幅 < 0)
    55                              <1> 												; {
    56 000006D0 F7DB                <1> 		neg		ebx								;   幅   *= -1;
    57 000006D2 BEFFFFFFFF          <1> 		mov		esi, -1							;   // X座標の増分
    58 000006D7 EB15                <1> 		jmp		.10E							; }
    59                              <1> .10F:											; else
    59          ******************  <1>  error: label `draw_line.10F' changed during code generation [-w+error=label-redef-late]
    60                              <1> 												; {
    61 000006D9 BE01000000          <1> 		mov		esi, 1							;   // X座標の増分
    62                              <1> .10E:											; }
    62          ******************  <1>  error: label `draw_line.10E' changed during code generation [-w+error=label-redef-late]
    63                              <1> 
    64                              <1> 		;---------------------------------------
    65                              <1> 		; 高さを計算（Y軸）
    66                              <1> 		;---------------------------------------
    67 000006DE 8B4D0C              <1> 		mov		ecx, [ebp +12]					; ECX = Y0
    68 000006E1 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1
    69 000006E4 29CA                <1> 		sub		edx, ecx						; EDX = Y1 - Y0; // 高さ
    70 000006E6 7D19                <1> 		jge		.20F							; if (高さ < 0)
    71                              <1> 												; {
    72 000006E8 F7DA                <1> 		neg		edx								;   高さ *= -1;
    73 000006EA BFFFFFFFFF          <1> 		mov		edi, -1							;   // Y座標の増分
    74 000006EF EB15                <1> 		jmp		.20E							; }
    75                              <1> .20F:											; else
    75          ******************  <1>  error: label `draw_line.20F' changed during code generation [-w+error=label-redef-late]
    76                              <1> 												; {
    77 000006F1 BF01000000          <1> 		mov		edi, 1							;   // Y座標の増分
    78                              <1> .20E:											; }
    78          ******************  <1>  error: label `draw_line.20E' changed during code generation [-w+error=label-redef-late]
    79                              <1> 
    80                              <1> 		;---------------------------------------
    81                              <1> 		; X軸
    82                              <1> 		;---------------------------------------
    83 000006F6 8945F8              <1> 		mov		[ebp - 8], eax					;   // X軸:開始座標
    84 000006F9 895DF4              <1> 		mov		[ebp -12], ebx					;   // X軸:描画幅
    85 000006FC 8975F0              <1> 		mov		[ebp -16], esi					;   // X軸:増分(基準軸：1 or -1)
    86                              <1> 
    87                              <1> 		;---------------------------------------
    88                              <1> 		; Y軸
    89                              <1> 		;---------------------------------------
    90 000006FF 894DEC              <1> 		mov		[ebp -20], ecx					;   // Y軸:開始座標
    91 00000702 8955E8              <1> 		mov		[ebp -24], edx					;   // Y軸:描画幅
    92 00000705 897DE4              <1> 		mov		[ebp -28], edi					;   // Y軸:増分(基準軸：1 or -1)
    93                              <1> 
    94                              <1> 		;---------------------------------------
    95                              <1> 		; 基準軸を決める
    96                              <1> 		;---------------------------------------
    97 00000708 39D3                <1> 		cmp		ebx, edx						; if (幅 <= 高さ)
    98 0000070A 7F18                <1> 		jg		.22F							; {
    99                              <1> 												;   
   100 0000070C 8D75EC              <1> 		lea		esi, [ebp -20]					;   // Y軸が基準軸
   101 0000070F 8D7DF8              <1> 		lea		edi, [ebp - 8]					;   // X軸が相対軸
   102                              <1> 												;   
   103 00000712 EB16                <1> 		jmp		.22E							; }
   104                              <1> .22F:											; else
   104          ******************  <1>  error: label `draw_line.22F' changed during code generation [-w+error=label-redef-late]
   105                              <1> 												; {
   106 00000714 8D75F8              <1> 		lea		esi, [ebp - 8]					;   // X軸が基準軸
   107 00000717 8D7DEC              <1> 		lea		edi, [ebp -20]					;   // Y軸が相対軸
   108                              <1> .22E:											; }
   108          ******************  <1>  error: label `draw_line.22E' changed during code generation [-w+error=label-redef-late]
   109                              <1> 
   110                              <1> 		;---------------------------------------
   111                              <1> 		; 繰り返し回数(基準軸のドット数)
   112                              <1> 		;---------------------------------------
   113 0000071A 8B4EFC              <1> 		mov		ecx, [esi - 4]					; ECX = 基準軸描画幅;
   114 0000071D 83F900              <1> 		cmp		ecx, 0							; if (0 == ECX)
   115 00000720 7515                <1> 		jnz		.30E							; {
   116 00000722 B901000000          <1> 		mov		ecx, 1							;   ECX = 1;
   117                              <1> .30E:											; }
   117          ******************  <1>  error: label `draw_line.30E' changed during code generation [-w+error=label-redef-late]
   118                              <1> 
   119                              <1> 		;---------------------------------------
   120                              <1> 		; 線を描画
   121                              <1> 		;---------------------------------------
   122                              <1> .50L:											; do
   122          ******************  <1>  error: label `draw_line.50L' changed during code generation [-w+error=label-redef-late]
   123                              <1> 												; {
   124                              <1> %ifdef	USE_SYSTEM_CALL
   125                              <1> 		mov		eax, ecx						;   // 繰り返し回数を保存
   126                              <1> 
   127                              <1> 		mov		ebx, [ebp +24]					;   EBX = 表示色;
   128                              <1> 		mov		ecx, [ebp - 8]					;   ECX = X座標;
   129                              <1> 		mov		edx, [ebp -20]					;   EDX = Y座標;
   130                              <1> 		int		0x82							;   sys_call(1, X, Y, 色, 文字); BX(C), CX(X), DX(Y)
   131                              <1> 
   132                              <1> 		mov		ecx, eax
   133                              <1> %else
   136 00000727 FF7518FF75ECFF75F8- <1> 		cdecl	draw_pixel, dword [ebp - 8], 							dword [ebp -20], 							dword [ebp +24]		;   // 点の描画
   136 00000730 E8B7FEFFFF6683C40C  <1>
   137                              <1> %endif
   138                              <1> 												;   // 基準軸を更新(1ドット分)
   139 00000739 8B46F8              <1> 		mov		eax, [esi - 8]					;   EAX = 基準軸増分(1 or -1);
   140 0000073C 0106                <1> 		add		[esi - 0], eax					;   
   141                              <1> 
   142                              <1> 												;   // 相対軸を更新
   143 0000073E 8B45FC              <1> 		mov		eax, [ebp - 4]					;   EAX  = sum; // 相対軸の積算値;
   144 00000741 0347FC              <1> 		add		eax, [edi - 4]					;   EAX += dy;  // 増分(相対軸の描画幅)
   145 00000744 8B5EFC              <1> 		mov		ebx, [esi - 4]					;   EBX  = dx;  // 増分(基準軸の描画幅)
   146                              <1> 
   147 00000747 39D8                <1> 		cmp		eax, ebx						;   if (積算値 <= 相対軸の増分)
   148 00000749 7C17                <1> 		jl		.52E							;   {
   149 0000074B 29D8                <1> 		sub		eax, ebx						;     EAX -= EBX; // 積算値から相対軸の増分を減算
   150                              <1> 												;     
   151                              <1> 												;     // 相対軸の座標を更新(1ドット分)
   152 0000074D 8B5FF8              <1> 		mov		ebx, [edi - 8]					;     EBX =  相対軸増分;
   153 00000750 011F                <1> 		add		[edi - 0], ebx					;     
   154                              <1> .52E:											;   }
   154          ******************  <1>  error: label `draw_line.52E' changed during code generation [-w+error=label-redef-late]
   155 00000752 8945FC              <1> 		mov		[ebp - 4], eax					;   // 積算値を更新
   156                              <1> 												;   
   157 00000755 E2D0                <1> 		loop	.50L							;   
   158                              <1> .50E:											; } while (ループ回数--);
   158          ******************  <1>  error: label `draw_line.50E' changed during code generation [-w+error=label-redef-late]
   159                              <1> 
   160                              <1> 		;---------------------------------------
   161                              <1> 		; 【レジスタの復帰】
   162                              <1> 		;---------------------------------------
   163 00000757 5F                  <1> 		pop		edi
   164 00000758 5E                  <1> 		pop		esi
   165 00000759 5A                  <1> 		pop		edx
   166 0000075A 59                  <1> 		pop		ecx
   167 0000075B 5B                  <1> 		pop		ebx
   168 0000075C 58                  <1> 		pop		eax
   169                              <1> 
   170                              <1> 		;---------------------------------------
   171                              <1> 		; 【スタックフレームの破棄】
   172                              <1> 		;---------------------------------------
   173 0000075D 89EC                <1> 		mov		esp, ebp
   174 0000075F 5D                  <1> 		pop		ebp
   175                              <1> 
   176 00000760 C3                  <1> 		ret
   177                              <1> 
   147                                  %include	"../modules/protect/draw_rect.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	矩形の描画
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_rect(X0, Y0, X1, Y1, color);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	X0		: 始点のX座標
     8                              <1> ;	Y0		: 始点のY座標
     9                              <1> ;	X1		: 終点のX座標
    10                              <1> ;	Y1		: 終点のY座標
    11                              <1> ;	color	: 描画色
    12                              <1> ;
    13                              <1> ;■戻り値	: 無し
    14                              <1> ;************************************************************************
    15                              <1> draw_rect:
    15          ******************  <1>  error: label `draw_rect' changed during code generation [-w+error=label-redef-late]
    16                              <1> 		;---------------------------------------
    17                              <1> 		; 【スタックフレームの構築】
    18                              <1> 		;---------------------------------------
    19                              <1> 												; ------|--------
    20                              <1> 												; EBP+24| 色
    21                              <1> 												; EBP+20| Y1
    22                              <1> 												; EBP+16| X1
    23                              <1> 												; EBP+12| Y0
    24                              <1> 												; EBP+ 8| X0
    25                              <1> 												; ---------------
    26 00000761 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    27 00000762 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    28                              <1> 												; ------|--------
    29                              <1> 
    30                              <1> 		;---------------------------------------
    31                              <1> 		; 【レジスタの保存】
    32                              <1> 		;---------------------------------------
    33 00000764 50                  <1> 		push		eax
    34 00000765 53                  <1> 		push		ebx
    35 00000766 51                  <1> 		push		ecx
    36 00000767 52                  <1> 		push		edx
    37 00000768 56                  <1> 		push		esi
    38                              <1> 
    39                              <1> 		;---------------------------------------
    40                              <1> 		; 矩形を描画
    41                              <1> 		;---------------------------------------
    42 00000769 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
    43 0000076C 8B5D0C              <1> 		mov		ebx, [ebp +12]					; EBX = Y0;
    44 0000076F 8B4D10              <1> 		mov		ecx, [ebp +16]					; ECX = X1;
    45 00000772 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1;
    46 00000775 8B7518              <1> 		mov		esi, [ebp +24]					; ESI = 色;
    47                              <1> 
    48                              <1> 		;---------------------------------------
    49                              <1> 		; 座標軸の大小を確定
    50                              <1> 		;---------------------------------------
    51 00000778 39C8                <1> 		cmp		eax, ecx						; if (X1 < X0)
    52 0000077A 7C11                <1> 		jl		.10E							; {
    53 0000077C 91                  <1> 		xchg	eax, ecx						;   X0とX1を入れ替える;
    54                              <1> .10E:											; }
    54          ******************  <1>  error: label `draw_rect.10E' changed during code generation [-w+error=label-redef-late]
    55                              <1> 
    56 0000077D 39D3                <1> 		cmp		ebx, edx						; if (Y1 < Y0)
    57 0000077F 7C12                <1> 		jl		.20E							; {
    58 00000781 87DA                <1> 		xchg	ebx, edx						;   Y0とY1を入れ替える;
    59                              <1> .20E:											; }
    59          ******************  <1>  error: label `draw_rect.20E' changed during code generation [-w+error=label-redef-late]
    60                              <1> 
    61                              <1> 		;---------------------------------------
    62                              <1> 		; 矩形を描画
    63                              <1> 		;---------------------------------------
    64 00000783 5653515350E822FFFF- <1> 		cdecl	draw_line, eax, ebx, ecx, ebx, esi	; 上線
    64 0000078C FF6683C414          <1>
    65 00000791 5652505350E814FFFF- <1> 		cdecl	draw_line, eax, ebx, eax, edx, esi	; 左線
    65 0000079A FF6683C414          <1>
    66                              <1> 
    67 0000079F 4A                  <1> 		dec		edx									; EDX--; // 下線は1ドット上げる
    68 000007A0 5652515250E805FFFF- <1> 		cdecl	draw_line, eax, edx, ecx, edx, esi	; 下線
    68 000007A9 FF6683C414          <1>
    69 000007AE 42                  <1> 		inc		edx
    70                              <1> 
    71 000007AF 49                  <1> 		dec		ecx									; ECX--; // 右線は1ドット左に移動
    72 000007B0 5652515351E8F5FEFF- <1> 		cdecl	draw_line, ecx, ebx, ecx, edx, esi	; 右線
    72 000007B9 FF6683C414          <1>
    73                              <1> 
    74                              <1> 		;---------------------------------------
    75                              <1> 		; 【レジスタの復帰】
    76                              <1> 		;---------------------------------------
    77 000007BE 5E                  <1> 		pop		esi
    78 000007BF 5A                  <1> 		pop		edx
    79 000007C0 59                  <1> 		pop		ecx
    80 000007C1 5B                  <1> 		pop		ebx
    81 000007C2 58                  <1> 		pop		eax
    82                              <1> 
    83                              <1> 		;---------------------------------------
    84                              <1> 		; 【スタックフレームの破棄】
    85                              <1> 		;---------------------------------------
    86 000007C3 89EC                <1> 		mov		esp, ebp
    87 000007C5 5D                  <1> 		pop		ebp
    88                              <1> 
    89 000007C6 C3                  <1> 		ret
    90                              <1> 
   148                                  %include	"../modules/protect/itoa.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	数値を文字に変換
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void itoa(num, buff, size, radix, flags);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	num		: 変換する数値
     8                              <1> ;	buff	: 保存先バッファアドレス
     9                              <1> ;	size	: 保存先バッファサイズ
    10                              <1> ;	radix	: 基数（2、8、10又は16を設定する）
    11                              <1> ;	flags	: フラグ
    12                              <1> ;			:   B2 : 1=空白を'0'（ゼロ）で埋める
    13                              <1> ;			:      : 0=空白を' '（スペース）で埋める
    14                              <1> ;			:   B1 : 1=＋/-符号を表示する
    15                              <1> ;			:      : 0=＋/-符号を表示しない
    16                              <1> ;			:   B0 : 1=符号付き正数として扱う
    17                              <1> ;			:      : 0=符号無し正数として扱う
    18                              <1> ;
    19                              <1> ;■戻り値	: 無し
    20                              <1> ;************************************************************************
    21                              <1> itoa:
    21          ******************  <1>  error: label `itoa' changed during code generation [-w+error=label-redef-late]
    22                              <1> 		;---------------------------------------
    23                              <1> 		; 【スタックフレームの構築】
    24                              <1> 		;---------------------------------------
    25                              <1> 												; ------|--------
    26                              <1> 												;    +24| フラグ
    27                              <1> 												;    +20| 基数
    28                              <1> 												;    +16| バッファサイズ
    29                              <1> 												;    +12| バッファアドレス
    30                              <1> 												;    + 8| 数値
    31                              <1> 												; ------|--------
    32                              <1> 												;    + 4| EIP（戻り番地）
    33 000007C7 55                  <1> 		push	ebp								; EBP+ 0| EBP（元の値）
    34 000007C8 89E5                <1> 		mov		ebp, esp						; ------+--------
    35                              <1> 
    36                              <1> 		;---------------------------------------
    37                              <1> 		; 【レジスタの保存】
    38                              <1> 		;---------------------------------------
    39 000007CA 50                  <1> 		push	eax
    40 000007CB 53                  <1> 		push	ebx
    41 000007CC 51                  <1> 		push	ecx
    42 000007CD 52                  <1> 		push	edx
    43 000007CE 56                  <1> 		push	esi
    44 000007CF 57                  <1> 		push	edi
    45                              <1> 
    46                              <1> 		;---------------------------------------
    47                              <1> 		; 引数を取得
    48                              <1> 		;---------------------------------------
    49 000007D0 8B4508              <1> 		mov		eax, [ebp + 8]					; val  = 数値;
    50 000007D3 8B750C              <1> 		mov		esi, [ebp +12]					; dst  = バッファアドレス;
    51 000007D6 8B4D10              <1> 		mov		ecx, [ebp +16]					; size = 残りバッファサイズ;
    52                              <1> 
    53 000007D9 89F7                <1> 		mov		edi, esi						; // バッファの最後尾
    54 000007DB 01CF                <1> 		add		edi, ecx						; dst  = &dst[size - 1];
    55 000007DD 4F                  <1> 		dec		edi								; 
    56                              <1> 
    57 000007DE 8B5D18              <1> 		mov		ebx, [ebp +24]					; flags = オプション;
    58                              <1> 
    59                              <1> 		;---------------------------------------
    60                              <1> 		; 符号付き判定
    61                              <1> 		;---------------------------------------
    62 000007E1 F7C301000000        <1> 		test	ebx, 0b0001						; if (flags & 0x01)// 符号付き
    63 000007E7 7418                <1> .10Q:	je		.10E							; {
    63          ******************  <1>  error: label `itoa.10Q' changed during code generation [-w+error=label-redef-late]
    64 000007E9 83F800              <1> 		cmp		eax, 0							;   if (val < 0)
    65 000007EC 7D13                <1> .12Q:	jge		.12E							;   {
    65          ******************  <1>  error: label `itoa.12Q' changed during code generation [-w+error=label-redef-late]
    66 000007EE 83CB02              <1> 		or		ebx, 0b0010						;     flags |=  2; // 符号表示
    67                              <1> .12E:											;   }
    67          ******************  <1>  error: label `itoa.12E' changed during code generation [-w+error=label-redef-late]
    68                              <1> .10E:											; }
    68          ******************  <1>  error: label `itoa.10E' changed during code generation [-w+error=label-redef-late]
    69                              <1> 
    70                              <1> 		;---------------------------------------
    71                              <1> 		; 符号出力判定
    72                              <1> 		;---------------------------------------
    73 000007F1 F7C302000000        <1> 		test	ebx, 0b0010						; if (flags & 0x02)// 符号出力判定
    74 000007F7 7420                <1> .20Q:	je		.20E							; {
    74          ******************  <1>  error: label `itoa.20Q' changed during code generation [-w+error=label-redef-late]
    75 000007F9 83F800              <1> 		cmp		eax, 0							;   if (val < 0)
    76 000007FC 7D17                <1> .22Q:	jge		.22F							;   {
    76          ******************  <1>  error: label `itoa.22Q' changed during code generation [-w+error=label-redef-late]
    77 000007FE F7D8                <1> 		neg		eax								;     val *= -1;   // 符号反転
    78 00000800 C6062D              <1> 		mov		[esi], byte '-'					;     *dst = '-';  // 符号表示
    79 00000803 EB13                <1> 		jmp		.22E							;   }
    80                              <1> .22F:											;   else
    80          ******************  <1>  error: label `itoa.22F' changed during code generation [-w+error=label-redef-late]
    81                              <1> 												;   {
    82 00000805 C6062B              <1> 		mov		[esi], byte '+'					;     *dst = '+';  // 符号表示
    83                              <1> .22E:											;   }
    83          ******************  <1>  error: label `itoa.22E' changed during code generation [-w+error=label-redef-late]
    84 00000808 49                  <1> 		dec		ecx								;   size--;        // 残りバッファサイズの減算
    85                              <1> .20E:											; }
    85          ******************  <1>  error: label `itoa.20E' changed during code generation [-w+error=label-redef-late]
    86                              <1> 
    87                              <1> 		;---------------------------------------
    88                              <1> 		; ASCII変換
    89                              <1> 		;---------------------------------------
    90 00000809 8B5D14              <1> 		mov		ebx, [ebp +20]					; BX = 基数;
    91                              <1> .30L:											; do
    91          ******************  <1>  error: label `itoa.30L' changed during code generation [-w+error=label-redef-late]
    92                              <1> 												; {
    93 0000080C BA00000000          <1> 		mov		edx, 0							;   
    94 00000811 F7F3                <1> 		div		ebx								;   DX = DX:AX % 基数;
    95                              <1> 												;   AX = DX:AX / 基数;
    96                              <1> 												;   
    97 00000813 89D6                <1> 		mov		esi, edx						;   // テーブル参照
    98 00000815 8A96[50080000]      <1> 		mov		dl, byte [.ascii + esi]			;   DL = ASCII[DX];
    99                              <1> 												;   
   100 0000081B 8817                <1> 		mov		[edi], dl						;   *dst = DL;
   101 0000081D 4F                  <1> 		dec		edi								;   dst--;
   102                              <1> 												;   
   103 0000081E 83F800              <1> 		cmp		eax, 0							;   
   104 00000821 E0E9                <1> 		loopnz	.30L							; } while (AX);
   105                              <1> .30E:
   105          ******************  <1>  error: label `itoa.30E' changed during code generation [-w+error=label-redef-late]
   106                              <1> 
   107                              <1> 		;---------------------------------------
   108                              <1> 		; 空欄を埋める
   109                              <1> 		;---------------------------------------
   110 00000823 83F900              <1> 		cmp		ecx, 0							; if (size)
   111 00000826 741E                <1> .40Q:	je		.40E							; {
   111          ******************  <1>  error: label `itoa.40Q' changed during code generation [-w+error=label-redef-late]
   112 00000828 B020                <1> 		mov		al, ' '							;   AL = ' ';  // ' 'で埋める（デフォルト値）
   113 0000082A 66837D1804          <1> 		cmp		[ebp +24], word 0b0100			;   if (flags & 0x04)
   114 0000082F 7512                <1> .42Q:	jne		.42E							;   {
   114          ******************  <1>  error: label `itoa.42Q' changed during code generation [-w+error=label-redef-late]
   115 00000831 B030                <1> 		mov		al, '0'							;     AL = '0'; // '0'で埋める
   116                              <1> .42E:											;   }
   116          ******************  <1>  error: label `itoa.42E' changed during code generation [-w+error=label-redef-late]
   117 00000833 FD                  <1> 		std										;   // DF = 1（-方向）
   118 00000834 F3AA                <1> 		rep stosb								;   while (--CX) *DI-- = ' ';
   119                              <1> .40E:											; }
   119          ******************  <1>  error: label `itoa.40E' changed during code generation [-w+error=label-redef-late]
   120                              <1> 
   121                              <1> 		;---------------------------------------
   122                              <1> 		; 【レジスタの復帰】
   123                              <1> 		;---------------------------------------
   124 00000836 5F                  <1> 		pop		edi
   125 00000837 5E                  <1> 		pop		esi
   126 00000838 5A                  <1> 		pop		edx
   127 00000839 59                  <1> 		pop		ecx
   128 0000083A 5B                  <1> 		pop		ebx
   129 0000083B 58                  <1> 		pop		eax
   130                              <1> 
   131                              <1> 		;---------------------------------------
   132                              <1> 		; 【スタックフレームの破棄】
   133                              <1> 		;---------------------------------------
   134 0000083C 89EC                <1> 		mov		esp, ebp
   135 0000083E 5D                  <1> 		pop		ebp
   136                              <1> 
   137 0000083F C3                  <1> 		ret
   138                              <1> 
   139 00000840 303132333435363738- <1> .ascii	db		"0123456789ABCDEF"				; 変換テーブル
   139          ******************  <1>  error: label `itoa.ascii' changed during code generation [-w+error=label-redef-late]
   139 00000849 39414243444546      <1>
   140                              <1> 
   149                                  %include	"../modules/protect/rtc.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	RTCから時刻データを取得する
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: DWORD rtc_get_time(dst);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	dst		: 保存先アドレス
     8                              <1> ;
     9                              <1> ;■戻り値	: 成功(0以外)、失敗(0)
    10                              <1> ;************************************************************************
    11                              <1> rtc_get_time:
    11          ******************  <1>  error: label `rtc_get_time' changed during code generation [-w+error=label-redef-late]
    12                              <1> 		;---------------------------------------
    13                              <1> 		; 【スタックフレームの構築】
    14                              <1> 		;---------------------------------------
    15                              <1> 												; ------|--------
    16                              <1> 												; EBP+ 8| 保存先アドレス
    17                              <1> 												; ---------------
    18 00000850 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    19 00000851 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    20                              <1> 												; ---------------
    21                              <1> 		;---------------------------------------
    22                              <1> 		; 【レジスタの保存】
    23                              <1> 		;---------------------------------------
    24 00000853 53                  <1> 		push	ebx
    25                              <1> 
    26                              <1> 		;---------------------------------------
    27                              <1> 		; RTCから時刻を取得
    28                              <1> 		;---------------------------------------
    29 00000854 B00A                <1> 		mov		al, 0x0A						; // レジスタA
    30 00000856 E670                <1> 		out		0x70, al						; outp(0x70, AL);
    31 00000858 E471                <1> 		in		al, 0x71						; AL = レジスタA;
    32 0000085A A880                <1> 		test	al, 0x80						; if (DM & UIP) // 更新中
    33 0000085C 7417                <1> 		je		.10F							; {
    34 0000085E B801000000          <1> 		mov		eax, 1							;   ret = 1; // データ更新中
    35 00000863 EB37                <1> 		jmp		.10E							; }
    36                              <1> .10F:											; else
    36          ******************  <1>  error: label `rtc_get_time.10F' changed during code generation [-w+error=label-redef-late]
    37                              <1> 												; {
    38                              <1> 												;   // RAM[0x04]:時
    39 00000865 B004                <1> 		mov		al, 0x04						;   AL = 0x04;
    40 00000867 E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    41 00000869 E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 時データ
    42                              <1> 												;   
    43 0000086B C1E008              <1> 		shl		eax, 8							;   EAX <<= 8;      // データを退避
    44                              <1> 												;   
    45                              <1> 												;   // RAM[0x02]:分
    46 0000086E B002                <1> 		mov		al, 0x02						;   AL = 0x02;
    47 00000870 E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    48 00000872 E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 分データ
    49                              <1> 												;   
    50 00000874 C1E008              <1> 		shl		eax, 8							;   EAX <<= 8;      // データを退避
    51                              <1> 												;   
    52                              <1> 												;   // RAM[0x00]:秒
    53 00000877 B000                <1> 		mov		al, 0x00						;   AL = 0x00;
    54 00000879 E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    55 0000087B E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 秒データ
    56                              <1> 												;   
    57 0000087D 25FFFFFF00          <1> 		and		eax, 0x00_FF_FF_FF				;   // 下位3バイトのみ有効
    58                              <1> 												;   
    59 00000882 8B5D08              <1> 		mov		ebx, [ebp + 8]					;   dst = 保存先;
    60 00000885 8903                <1> 		mov		[ebx], eax						;   [dst] = 時刻;
    61                              <1> 												;   
    62 00000887 B800000000          <1> 		mov		eax, 0							;   ret = 0; // 正常終了
    63                              <1> .10E:											; }
    63          ******************  <1>  error: label `rtc_get_time.10E' changed during code generation [-w+error=label-redef-late]
    64                              <1> 
    65                              <1> 		;---------------------------------------
    66                              <1> 		; 【レジスタの復帰】
    67                              <1> 		;---------------------------------------
    68 0000088C 5B                  <1> 		pop		ebx
    69                              <1> 
    70                              <1> 		;---------------------------------------
    71                              <1> 		; 【スタックフレームの破棄】
    72                              <1> 		;---------------------------------------
    73 0000088D 89EC                <1> 		mov		esp, ebp
    74 0000088F 5D                  <1> 		pop		ebp
    75                              <1> 
    76 00000890 C3                  <1> 		ret
    77                              <1> 
   150                                  %include	"../modules/protect/draw_time.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	時刻の表示
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_time(col, row, color, time);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	col		: 列
     8                              <1> ;	row		: 行
     9                              <1> ;	color	: 描画色
    10                              <1> ;	time	: 時刻データ
    11                              <1> ;
    12                              <1> ;■戻り値	: 無し
    13                              <1> ;************************************************************************
    14                              <1> draw_time:
    14          ******************  <1>  error: label `draw_time' changed during code generation [-w+error=label-redef-late]
    15                              <1> 		;---------------------------------------
    16                              <1> 		; 【スタックフレームの構築】
    17                              <1> 		;---------------------------------------
    18                              <1> 												; ------|--------
    19                              <1> 												; EBP+20| 時刻データ
    20                              <1> 												; EBP+16| 色
    21                              <1> 												; EBP+12| Y（行）
    22                              <1> 												; EBP+ 8| X（列）
    23                              <1> 												; ---------------
    24 00000891 55                  <1> 		push	ebp								; EBP+ 0| EBP（元の値）
    25 00000892 89E5                <1> 		mov		ebp, esp						; EBP+ 4| EIP（戻り番地）
    26                              <1> 												; ---------------
    27                              <1> 		;---------------------------------------
    28                              <1> 		; 【レジスタの保存】
    29                              <1> 		;---------------------------------------
    30 00000894 50                  <1> 		push	eax
    31 00000895 53                  <1> 		push	ebx
    32                              <1> 
    33                              <1> 		;---------------------------------------
    34                              <1> 		; 
    35                              <1> 		;---------------------------------------
    36 00000896 8B4514              <1> 		mov		eax, [ebp +20]					; EAX = 時刻データ;
    37 00000899 3B05[26090000]      <1> 		cmp		eax, [.last]					; if (今回 != 前回)
    38 0000089F 7477                <1> 		je		.10E							; {
    39                              <1> 												;   
    40 000008A1 A3[26090000]        <1> 		mov		[.last], eax					;   // 前回の時刻値を更新
    41                              <1> 												;   
    42 000008A6 BB00000000          <1> 		mov		ebx, 0							;   EBX = 0;
    43 000008AB 88C3                <1> 		mov		bl, al							;   EBX = 秒;
    44 000008AD 6A046A106A0268-     <1> 		cdecl	itoa, ebx, .sec, 2, 16, 0b0100	;   // 時刻を文字列に変換
    44 000008B4 [34090000]53E809FF- <1>
    44 000008BC FFFF6683C414        <1>
    45                              <1> 
    46 000008C2 88E3                <1> 		mov		bl, ah							;   EBX = 分;
    47 000008C4 6A046A106A0268-     <1> 		cdecl	itoa, ebx, .min, 2, 16, 0b0100	;   // 時刻を文字列に変換
    47 000008CB [31090000]53E8F2FE- <1>
    47 000008D3 FFFF6683C414        <1>
    48                              <1> 
    49 000008D9 C1E810              <1> 		shr		eax, 16							;   EBX = 時;
    50 000008DC 6A046A106A0268-     <1> 		cdecl	itoa, eax, .hour, 2, 16, 0b0100	;   // 時刻を文字列に変換
    50 000008E3 [2E090000]50E8DAFE- <1>
    50 000008EB FFFF6683C414        <1>
    51                              <1> 
    52                              <1> 												;   // 時刻を表示
    53 000008F1 68[2E090000]FF7510- <1> 		cdecl	draw_str, dword [ebp + 8], dword [ebp +12], dword [ebp +16], .hour
    53 000008F9 FF750CFF7508E825FC- <1>
    53 00000902 FFFF6683C410        <1>
    54                              <1> 												;     
    55                              <1> 												;   }
    56                              <1> .10E:											; }
    56          ******************  <1>  error: label `draw_time.10E' changed during code generation [-w+error=label-redef-late]
    57                              <1> 
    58                              <1> 		;---------------------------------------
    59                              <1> 		; 【レジスタの復帰】
    60                              <1> 		;---------------------------------------
    61 00000908 5B                  <1> 		pop		ebx
    62 00000909 58                  <1> 		pop		eax
    63                              <1> 
    64                              <1> 		;---------------------------------------
    65                              <1> 		; 【スタックフレームの破棄】
    66                              <1> 		;---------------------------------------
    67 0000090A 89EC                <1> 		mov		esp, ebp
    68 0000090C 5D                  <1> 		pop		ebp
    69                              <1> 
    70 0000090D C3                  <1> 		ret
    71                              <1> 
    72                              <1> ALIGN 2, db 0
    73 0000090E 0000000000000000    <1> .temp:	dq	0
    73          ******************  <1>  error: label `draw_time.temp' changed during code generation [-w+error=label-redef-late]
    74 00000916 0000000000000000    <1> .last:	dq	0
    74          ******************  <1>  error: label `draw_time.last' changed during code generation [-w+error=label-redef-late]
    75 0000091E 5A5A3A              <1> .hour:	db	"ZZ:"
    75          ******************  <1>  error: label `draw_time.hour' changed during code generation [-w+error=label-redef-late]
    76 00000921 5A5A3A              <1> .min:	db	"ZZ:"
    76          ******************  <1>  error: label `draw_time.min' changed during code generation [-w+error=label-redef-late]
    77 00000924 5A5A00              <1> .sec:	db	"ZZ", 0
    77          ******************  <1>  error: label `draw_time.sec' changed during code generation [-w+error=label-redef-late]
   151                                  %include	"../modules/protect/interrupt.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	割り込みベクタの初期化
     3                              <1> ;************************************************************************
     4 00000927 90                  <1> ALIGN 4
     5 00000928 FF07                <1> IDTR:	dw 		8 * 256 - 1					; idt_limit
     5          ******************  <1>  error: label `IDTR' changed during code generation [-w+error=label-redef-late]
     6 0000092A 00001000            <1> 		dd 		VECT_BASE					; idt location
     7                              <1> 
     8                              <1> ;************************************************************************
     9                              <1> ;	割り込みテーブルを初期化
    10                              <1> ;------------------------------------------------------------------------
    11                              <1> ;	
    12                              <1> ;	まず、全ての割り込みアドレスにデフォルト処理を設定すし、その後、
    13                              <1> ;	必要な割り込みだけ設定しなおす。
    14                              <1> ;	
    15                              <1> ;	割り込みアドレスは、VECT_BASEで指定され、256の割り込みがあるので
    16                              <1> ;	0x0800バイト占有することになる。
    17                              <1> ;	
    18                              <1> ;	           |____________| _V___
    19                              <1> ;	  VECT_BASE| IntDefault |  |   
    20                              <1> ;	           | IntDefault |  | 8 * 256
    21                              <1> ;	           |      :     |  |   
    22                              <1> ;	           |____________| _|___
    23                              <1> ;	      +0800|////////////|
    24                              <1> ;	           |            |
    25                              <1> ;	
    26                              <1> ;	一つの割り込み設定は8バイトで構成される。
    27                              <1> ;	
    28                              <1> ;	           |____________|____________| 
    29                              <1> ;	        [0]| Address Lo[15: 0]       | 
    30                              <1> ;	        [2]| Selector                | 
    31                              <1> ;	        [4]| Flags                   | 
    32                              <1> ;	        [6]|_Address Lo[32:16]_______| 
    33                              <1> ;	           |/////////////////////////| 
    34                              <1> ;	           |            |            | 
    35                              <1> ;	
    36                              <1> ;========================================================================
    37                              <1> ;■書式		: void init_int(void);
    38                              <1> ;
    39                              <1> ;■引数		: 無し
    40                              <1> ;
    41                              <1> ;■戻り値	: 無し
    42                              <1> ;************************************************************************
    43                              <1> init_int:
    43          ******************  <1>  error: label `init_int' changed during code generation [-w+error=label-redef-late]
    44                              <1> 		;---------------------------------------
    45                              <1> 		; 【レジスタの保存】
    46                              <1> 		;---------------------------------------
    47 0000092E 50                  <1> 		push	eax
    48 0000092F 53                  <1> 		push	ebx
    49 00000930 51                  <1> 		push	ecx
    50 00000931 57                  <1> 		push	edi
    51                              <1> 
    52                              <1> 		;---------------------------------------
    53                              <1> 		; 全ての割り込みにデフォルト処理を設定
    54                              <1> 		;---------------------------------------
    55 00000932 8D05[880A0000]      <1> 		lea		eax, [int_default]				; EAX   = 割り込み処理アドレス;
    56 00000938 BB008E0800          <1> 		mov		ebx, 0x0008_8E00				; EBX   = セグメントセレクタ;
    57 0000093D 6693                <1> 		xchg	ax, bx							; // 下位ワードを交換
    58                              <1> 
    59 0000093F B900010000          <1> 		mov		ecx, 256						; ECX   = 割り込みベクタ数
    60 00000944 BF00001000          <1> 		mov		edi, VECT_BASE					; EDI   = 割り込みベクタテーブル
    61                              <1> 
    62                              <1> .10L:											; do
    62          ******************  <1>  error: label `init_int.10L' changed during code generation [-w+error=label-redef-late]
    63                              <1> 												; {
    64 00000949 891F                <1> 		mov		[edi + 0], ebx					;   [EDI + 0] = 割り込みディスクリプタ（下位）
    65 0000094B 894704              <1> 		mov		[edi + 4], eax					;   [EDI + 4] = 割り込みディスクリプタ（上位）
    66 0000094E 83C708              <1> 		add		edi, 8							;   EDI += 8;
    67 00000951 E2F6                <1> 		loop	.10L							; } while (ECX--);
    68                              <1> 
    69                              <1> 		;---------------------------------------
    70                              <1> 		; 割り込みディスクリプタの設定
    71                              <1> 		;---------------------------------------
    72 00000953 0F011D[28090000]    <1> 		lidt	[IDTR]							; // 割り込みディスクリプタテーブルをロード
    73                              <1> 
    74                              <1> 		;---------------------------------------
    75                              <1> 		; 【レジスタの復帰】
    76                              <1> 		;---------------------------------------
    77 0000095A 5F                  <1> 		pop		edi
    78 0000095B 59                  <1> 		pop		ecx
    79 0000095C 5B                  <1> 		pop		ebx
    80 0000095D 58                  <1> 		pop		eax
    81                              <1> 
    82 0000095E C3                  <1> 		ret
    83                              <1> 
    84                              <1> ;************************************************************************
    85                              <1> ;	スタックの内容を表示して無限ループを実行
    86                              <1> ;************************************************************************
    87                              <1> int_stop:
    87          ******************  <1>  error: label `int_stop' changed during code generation [-w+error=label-redef-late]
    88 0000095F FB                  <1> 		sti										; // 割り込み許可
    89                              <1> 
    90                              <1> 		;---------------------------------------
    91                              <1> 		; EAXで示される文字列を表示
    92                              <1> 		;---------------------------------------
    93 00000960 50680F0600006A0F6A- <1> 		cdecl	draw_str, 25, 15, 0x060F, eax	; draw_str(EAX);
    93 00000969 19E8BAFBFFFF6683C4- <1>
    93 00000972 10                  <1>
    94                              <1> 
    95                              <1> 		;---------------------------------------
    96                              <1> 		; スタックのデータを文字列に変換
    97                              <1> 		;---------------------------------------
    98 00000973 8B0424              <1> 		mov		eax, [esp + 0]					; EAX = ESP[ 0];
    99 00000976 6A046A106A0868-     <1> 		cdecl	itoa, eax, .p1, 8, 16, 0b0100	; itoa(EAX, 8, 16, 0b0100);
    99 0000097D [4B0A0000]50E840FE- <1>
    99 00000985 FFFF6683C414        <1>
   100                              <1> 
   101 0000098B 8B442404            <1> 		mov		eax, [esp + 4]					; EAX = ESP[ 4];
   102 0000098F 6A046A106A0868-     <1> 		cdecl	itoa, eax, .p2, 8, 16, 0b0100	; itoa(EAX, 8, 16, 0b0100);
   102 00000996 [5C0A0000]50E827FE- <1>
   102 0000099E FFFF6683C414        <1>
   103                              <1> 
   104 000009A4 8B442408            <1> 		mov		eax, [esp + 8]					; EAX = ESP[ 8];
   105 000009A8 6A046A106A0868-     <1> 		cdecl	itoa, eax, .p3, 8, 16, 0b0100	; itoa(EAX, 8, 16, 0b0100);
   105 000009AF [6D0A0000]50E80EFE- <1>
   105 000009B7 FFFF6683C414        <1>
   106                              <1> 
   107 000009BD 8B44240C            <1> 		mov		eax, [esp +12]					; EAX = ESP[12];
   108 000009C1 6A046A106A0868-     <1> 		cdecl	itoa, eax, .p4, 8, 16, 0b0100	; itoa(EAX, 8, 16, 0b0100);
   108 000009C8 [7E0A0000]50E8F5FD- <1>
   108 000009D0 FFFF6683C414        <1>
   109                              <1> 
   110                              <1> 		;---------------------------------------
   111                              <1> 		; 文字列の表示
   112                              <1> 		;---------------------------------------
   113 000009D6 68[440A0000]68040F- <1> 		cdecl	draw_str, 25, 16, 0x0F04, .s1	; draw_str("ESP+ 0:-------- ");
   113 000009DE 00006A106A19E840FB- <1>
   113 000009E7 FFFF6683C410        <1>
   114 000009ED 68[550A0000]68040F- <1> 		cdecl	draw_str, 25, 17, 0x0F04, .s2	; draw_str("   + 4:-------- ");
   114 000009F5 00006A116A19E829FB- <1>
   114 000009FE FFFF6683C410        <1>
   115 00000A04 68[660A0000]68040F- <1> 		cdecl	draw_str, 25, 18, 0x0F04, .s3	; draw_str("   + 8:-------- ");
   115 00000A0C 00006A126A19E812FB- <1>
   115 00000A15 FFFF6683C410        <1>
   116 00000A1B 68[770A0000]68040F- <1> 		cdecl	draw_str, 25, 19, 0x0F04, .s4	; draw_str("   +12:-------- ");
   116 00000A23 00006A136A19E8FBFA- <1>
   116 00000A2C FFFF6683C410        <1>
   117                              <1> 
   118                              <1> 		;---------------------------------------
   119                              <1> 		; 無限ループ
   120                              <1> 		;---------------------------------------
   121 00000A32 EBFE                <1> 		jmp		$								; while (1) ; // 無限ループ
   122                              <1> 
   123 00000A34 4553502B20303A      <1> .s1		db	"ESP+ 0:"
   123          ******************  <1>  error: label `int_stop.s1' changed during code generation [-w+error=label-redef-late]
   124 00000A3B 5F5F5F5F5F5F5F5F20- <1> .p1		db	"________ ", 0
   124          ******************  <1>  error: label `int_stop.p1' changed during code generation [-w+error=label-redef-late]
   124 00000A44 00                  <1>
   125 00000A45 2020202B20343A      <1> .s2		db	"   + 4:"
   125          ******************  <1>  error: label `int_stop.s2' changed during code generation [-w+error=label-redef-late]
   126 00000A4C 5F5F5F5F5F5F5F5F20- <1> .p2		db	"________ ", 0
   126          ******************  <1>  error: label `int_stop.p2' changed during code generation [-w+error=label-redef-late]
   126 00000A55 00                  <1>
   127 00000A56 2020202B20383A      <1> .s3		db	"   + 8:"
   127          ******************  <1>  error: label `int_stop.s3' changed during code generation [-w+error=label-redef-late]
   128 00000A5D 5F5F5F5F5F5F5F5F20- <1> .p3		db	"________ ", 0
   128          ******************  <1>  error: label `int_stop.p3' changed during code generation [-w+error=label-redef-late]
   128 00000A66 00                  <1>
   129 00000A67 2020202B31323A      <1> .s4		db	"   +12:"
   129          ******************  <1>  error: label `int_stop.s4' changed during code generation [-w+error=label-redef-late]
   130 00000A6E 5F5F5F5F5F5F5F5F20- <1> .p4		db	"________ ", 0
   130          ******************  <1>  error: label `int_stop.p4' changed during code generation [-w+error=label-redef-late]
   130 00000A77 00                  <1>
   131                              <1> 
   132                              <1> ;************************************************************************
   133                              <1> ;	割り込み処理：デフォルトの処理
   134                              <1> ;************************************************************************
   135                              <1> int_default:
   135          ******************  <1>  error: label `int_default' changed during code generation [-w+error=label-redef-late]
   136 00000A78 9C                  <1> 		pushf									; // EFLAGS(IF==0)
   137 00000A79 0E                  <1> 		push	cs								; // CS
   138 00000A7A 68[5F090000]        <1> 		push	int_stop						; // スタック表示処理
   139                              <1> 
   140 00000A7F B8[950A0000]        <1> 		mov		eax, .s0						; // 割り込み種別
   141 00000A84 CF                  <1> 		iret
   142                              <1> 
   143 00000A85 203C2020202053544F- <1> .s0		db	" <    STOP    > ", 0
   143          ******************  <1>  error: label `int_default.s0' changed during code generation [-w+error=label-redef-late]
   143 00000A8E 50202020203E2000    <1>
   144                              <1> 
   145                              <1> ;************************************************************************
   146                              <1> ;	割り込み処理：ゼロ除算
   147                              <1> ;************************************************************************
   148                              <1> int_zero_div:
   148          ******************  <1>  error: label `int_zero_div' changed during code generation [-w+error=label-redef-late]
   149 00000A96 9C                  <1> 		pushf									; // EFLAGS
   150 00000A97 0E                  <1> 		push	cs								; // CS
   151 00000A98 68[5F090000]        <1> 		push	int_stop						; // スタック表示処理
   152                              <1> 
   153 00000A9D B8[B30A0000]        <1> 		mov		eax, .s0						; // 割り込み種別
   154 00000AA2 CF                  <1> 		iret
   155                              <1> 
   156 00000AA3 203C20205A45524F20- <1> .s0		db	" <  ZERO DIV  > ", 0
   156          ******************  <1>  error: label `int_zero_div.s0' changed during code generation [-w+error=label-redef-late]
   156 00000AAC 44495620203E2000    <1>
   157                              <1> 
   152                                  %include	"../modules/protect/pic.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	割り込みコントローラの初期化
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void init_pic(void);
     5                              <1> ;
     6                              <1> ;■引数		: 無し
     7                              <1> ;
     8                              <1> ;■戻り値	: 無し
     9                              <1> ;************************************************************************
    10                              <1> init_pic:
    10          ******************  <1>  error: label `init_pic' changed during code generation [-w+error=label-redef-late]
    11                              <1> 		;---------------------------------------
    12                              <1> 		; 【レジスタの保存】
    13                              <1> 		;---------------------------------------
    14 00000AB4 50                  <1> 		push	eax
    15                              <1> 
    16                              <1> 		;---------------------------------------
    17                              <1> 		; マスタPICの設定
    18                              <1> 		;---------------------------------------
    19                              <1> 		outp	0x20, 0x11						; // MASTER.ICW1 = 0x11;
    19 00000AB5 B011                <2>  mov al, %2
    19 00000AB7 E620                <2>  out %1, al
    20                              <1> 		outp	0x21, 0x20						; // MASTER.ICW2 = 0x20;
    20 00000AB9 B020                <2>  mov al, %2
    20 00000ABB E621                <2>  out %1, al
    21                              <1> 		outp	0x21, 0x04						; // MASTER.ICW3 = 0x04;
    21 00000ABD B004                <2>  mov al, %2
    21 00000ABF E621                <2>  out %1, al
    22                              <1> 		outp	0x21, 0x05						; // MASTER.ICW4 = 0x05;
    22 00000AC1 B005                <2>  mov al, %2
    22 00000AC3 E621                <2>  out %1, al
    23                              <1> 		outp	0x21, 0xFF						; // マスタ割り込みマスク
    23 00000AC5 B0FF                <2>  mov al, %2
    23 00000AC7 E621                <2>  out %1, al
    24                              <1> 
    25                              <1> 		;---------------------------------------
    26                              <1> 		; スレーブPICの設定
    27                              <1> 		;---------------------------------------
    28                              <1> 		outp	0xA0, 0x11						; // SLAVE.ICW1  = 0x11;
    28 00000AC9 B011                <2>  mov al, %2
    28 00000ACB E6A0                <2>  out %1, al
    29                              <1> 		outp	0xA1, 0x28						; // SLAVE.ICW2  = 0x28;
    29 00000ACD B028                <2>  mov al, %2
    29 00000ACF E6A1                <2>  out %1, al
    30                              <1> 		outp	0xA1, 0x02						; // SLAVE.ICW3  = 0x02;
    30 00000AD1 B002                <2>  mov al, %2
    30 00000AD3 E6A1                <2>  out %1, al
    31                              <1> 		outp	0xA1, 0x01						; // SLAVE.ICW4  = 0x01;
    31 00000AD5 B001                <2>  mov al, %2
    31 00000AD7 E6A1                <2>  out %1, al
    32                              <1> 		outp	0xA1, 0xFF						; // スレーブ割り込みマスク
    32 00000AD9 B0FF                <2>  mov al, %2
    32 00000ADB E6A1                <2>  out %1, al
    33                              <1> 
    34                              <1> 		;---------------------------------------
    35                              <1> 		; 【レジスタの復帰】
    36                              <1> 		;---------------------------------------
    37 00000ADD 58                  <1> 		pop		eax
    38                              <1> 
    39 00000ADE C3                  <1> 		ret
    40                              <1> 
   153                                  %include	"../modules/protect/int_rtc.s"
     1                              <1> rtc_int_en:
     1          ******************  <1>  error: label `rtc_int_en' changed during code generation [-w+error=label-redef-late]
     2                              <1> 		;---------------------------------------
     3                              <1> 		; 【スタックフレームの構築】
     4                              <1> 		;---------------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												;    + 8| ビット
     7                              <1> 												; ------|--------
     8                              <1> 												;    + 4| EIP（戻り番地）
     9 00000ADF 55                  <1> 		push	ebp								; EBP+ 0| EBP（元の値）
    10 00000AE0 89E5                <1> 		mov		ebp, esp						; ------+--------
    11                              <1> 
    12                              <1> 		;---------------------------------------
    13                              <1> 		; 【レジスタの保存】
    14                              <1> 		;---------------------------------------
    15 00000AE2 50                  <1> 		push	eax
    16                              <1> 
    17                              <1> 		;---------------------------------------
    18                              <1> 		; 割り込み許可設定
    19                              <1> 		;---------------------------------------
    20                              <1> 		outp	0x70, 0x0B						; outp(0x70, AL);   // レジスタBを選択
    20 00000AE3 B00B                <2>  mov al, %2
    20 00000AE5 E670                <2>  out %1, al
    21                              <1> 
    22 00000AE7 E471                <1> 		in		al, 0x71						; AL  = port(0x71); // レジスタBの
    23 00000AE9 0A4508              <1> 		or		al, [ebp + 8]					; AL |= ビット;     // 指定されたビットをセット
    24                              <1> 
    25 00000AEC E671                <1> 		out		0x71, al						; outp(0x71, AL);   // レジスタBに書き込み
    26                              <1> 
    27                              <1> 		;---------------------------------------
    28                              <1> 		; 【レジスタの復帰】
    29                              <1> 		;---------------------------------------
    30 00000AEE 58                  <1> 		pop		eax
    31                              <1> 
    32                              <1> 		;---------------------------------------
    33                              <1> 		; 【スタックフレームの破棄】
    34                              <1> 		;---------------------------------------
    35 00000AEF 89EC                <1> 		mov		esp, ebp
    36 00000AF1 5D                  <1> 		pop		ebp
    37                              <1> 
    38 00000AF2 C3                  <1> 		ret 
    39                              <1> 
    40                              <1> int_rtc:
    40          ******************  <1>  error: label `int_rtc' changed during code generation [-w+error=label-redef-late]
    41 00000AF3 60                  <1>         pusha
    42 00000AF4 1E                  <1>         push    ds
    43 00000AF5 06                  <1>         push    es
    44                              <1> 
    45 00000AF6 66B81000            <1>         mov     ax, 0x0010      ; データ用セグメントセレクタの設定
    46 00000AFA 8ED8                <1>         mov     ds, ax
    47 00000AFC 8EC0                <1>         mov     es, ax
    48                              <1> 
    49 00000AFE 68[C4010000]E848FD- <1>         cdecl   rtc_get_time, RTC_TIME      ; get_time
    49 00000B06 FFFF6683C404        <1>
    50                              <1> 
    51                              <1>         outp    0x70, 0x0C      
    51 00000B0C B00C                <2>  mov al, %2
    51 00000B0E E670                <2>  out %1, al
    52 00000B10 E471                <1>         in      al, 0x71
    53                              <1> 
    54                              <1> 		;---------------------------------------
    55                              <1> 		; 割り込みフラグをクリア(EOI)
    56                              <1> 		;---------------------------------------
    57                              <1> 		outp	0xA0, 0x20						; outp(0xA0, EOI); // スレーブPIC
    57 00000B12 B020                <2>  mov al, %2
    57 00000B14 E6A0                <2>  out %1, al
    58                              <1> 		outp	0x20, 0x20						; outp(0x20, EOI); // マスタPIC
    58 00000B16 B020                <2>  mov al, %2
    58 00000B18 E620                <2>  out %1, al
    59                              <1> 
    60                              <1>         		;---------------------------------------
    61                              <1> 		; 【レジスタの復帰】
    62                              <1> 		;---------------------------------------
    63 00000B1A 07                  <1> 		pop		es								; 
    64 00000B1B 1F                  <1> 		pop		ds								; 
    65 00000B1C 61                  <1> 		popa									; 
    66                              <1> 
    67 00000B1D CF                  <1> 		iret									; 割り込み処理の終了
   154                                  %include	"../modules/protect/int_keyboard.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	割り込み処理：キーボード
     3                              <1> ;------------------------------------------------------------------------
     4                              <1> ;	KBC（キーボードコントローラ）からキーコードを取得して、
     5                              <1> ;	専用のリングバッファに保存する。
     6                              <1> ;************************************************************************
     7                              <1> int_keyboard:
     7          ******************  <1>  error: label `int_keyboard' changed during code generation [-w+error=label-redef-late]
     8                              <1> 		;---------------------------------------
     9                              <1> 		; 【レジスタの保存】
    10                              <1> 		;---------------------------------------
    11 00000B1E 60                  <1> 		pusha
    12 00000B1F 1E                  <1> 		push	ds
    13 00000B20 06                  <1> 		push	es
    14                              <1> 
    15                              <1> 		;---------------------------------------
    16                              <1> 		; データ用セグメントの設定
    17                              <1> 		;---------------------------------------
    18 00000B21 66B81000            <1> 		mov		ax, 0x0010						; 
    19 00000B25 8ED8                <1> 		mov		ds, ax							; 
    20 00000B27 8EC0                <1> 		mov		es, ax							; 
    21                              <1> 
    22                              <1> 		;---------------------------------------
    23                              <1> 		; KBCのバッファ読み取り
    24                              <1> 		;---------------------------------------
    25 00000B29 E460                <1> 		in		al, 0x60						; AL = キーコードの取得
    26                              <1> 
    27                              <1> 		;---------------------------------------
    28                              <1> 		; キーコードの保存
    29                              <1> 		;---------------------------------------
    30 00000B2B 5068[540B0000]E866- <1> 		cdecl	ring_wr, _KEY_BUFF, eax			; ring_wr(_KEY_BUFF, EAX); // キーコードの保存
    30 00000B33 0000006683C408      <1>
    31                              <1> 
    32                              <1> 		;---------------------------------------
    33                              <1> 		; 割り込み終了コマンド送信
    34                              <1> 		;---------------------------------------
    35                              <1> 		outp	0x20, 0x20						; outp(); // マスタPIC:EOIコマンド
    35 00000B3A B020                <2>  mov al, %2
    35 00000B3C E620                <2>  out %1, al
    36                              <1> 
    37                              <1> 		;---------------------------------------
    38                              <1> 		; 【レジスタの復帰】
    39                              <1> 		;---------------------------------------
    40 00000B3E 07                  <1> 		pop		es								; 
    41 00000B3F 1F                  <1> 		pop		ds								; 
    42 00000B40 61                  <1> 		popa
    43                              <1> 
    44 00000B41 CF                  <1> 		iret									; 割り込みからの復帰
    45                              <1> 
    46 00000B42 00<rept>            <1> ALIGN 4, db 0
    47 00000B44 00<rept>            <1> _KEY_BUFF:	times ring_buff_size db 0
    47          ******************  <1>  error: label `_KEY_BUFF' changed during code generation [-w+error=label-redef-late]
    48                              <1> 
   155                                  %include	"../modules/protect/ring_buff.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	リングバッファからデータを取得
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: DWORD ring_rd(buff, data);
     5                              <1> ;
     6                              <1> ;■引数
     7                              <1> ;	buff	: リングバッファ
     8                              <1> ;	data	: 読み込んだデータの保存先アドレス
     9                              <1> ;
    10                              <1> ;■戻り値	: データあり(0以外)、データ無し(0)
    11                              <1> ;************************************************************************
    12                              <1> ring_rd:
    12          ******************  <1>  error: label `ring_rd' changed during code generation [-w+error=label-redef-late]
    13                              <1> 		;---------------------------------------
    14                              <1> 		; 【スタックフレームの構築】
    15                              <1> 		;---------------------------------------
    16                              <1> 												; ------|--------
    17                              <1> 												;    +12| リングデータ
    18                              <1> 												;    + 8| データアドレス
    19                              <1> 												; ------|--------
    20                              <1> 												;    + 4| EIP（戻り番地）
    21 00000B5C 55                  <1> 		push	ebp								; EBP+ 0| EBP（元の値）
    22 00000B5D 89E5                <1> 		mov		ebp, esp						; ------+--------
    23                              <1> 
    24                              <1> 		;---------------------------------------
    25                              <1> 		; 【レジスタの保存】
    26                              <1> 		;---------------------------------------
    27 00000B5F 53                  <1> 		push	ebx
    28 00000B60 56                  <1> 		push	esi
    29 00000B61 57                  <1> 		push	edi
    30                              <1> 
    31                              <1> 		;---------------------------------------
    32                              <1> 		; 引数を取得
    33                              <1> 		;---------------------------------------
    34 00000B62 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = リングバッファ;
    35 00000B65 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = データアドレス;
    36                              <1> 
    37                              <1> 		;---------------------------------------
    38                              <1> 		; 読み込み位置を確認
    39                              <1> 		;---------------------------------------
    40 00000B68 B800000000          <1> 		mov		eax, 0							; EAX = 0;          // データ無し
    41 00000B6D 8B1E                <1> 		mov		ebx, [esi + ring_buff.rp]		; EBX = rp;         // 読み込み位置
    42 00000B6F 3B5E04              <1> 		cmp		ebx, [esi + ring_buff.wp]		; if (EBX != wp)    // 書き込み位置と異なる
    43 00000B72 7421                <1> 		je		.10E							; {
    44                              <1> 												;   
    45 00000B74 8A441E08            <1> 		mov		al, [esi + ring_buff.item + ebx] ;   AL = BUFF[rp]; // キーコードを保存
    46                              <1> 												;   
    47 00000B78 8807                <1> 		mov		[edi], al						;   [EDI] = AL;     // データを保存
    48                              <1> 												;   
    49 00000B7A 43                  <1> 		inc		ebx								;   EBX++;          // 次の読み込み位置
    50 00000B7B 83E30F              <1> 		and		ebx, RING_INDEX_MASK			;   EBX &= 0x0F     // サイズの制限
    51 00000B7E 891E                <1> 		mov		[esi + ring_buff.rp], ebx		;   rp = EBX;       // 読み込み位置を保存
    52                              <1> 												;   
    53 00000B80 B801000000          <1> 		mov		eax, 1							;   EAX = 1;        // データあり
    54                              <1> .10E:											; }
    54          ******************  <1>  error: label `ring_rd.10E' changed during code generation [-w+error=label-redef-late]
    55                              <1> 
    56                              <1> 		;---------------------------------------
    57                              <1> 		; 【レジスタの復帰】
    58                              <1> 		;---------------------------------------
    59 00000B85 5F                  <1> 		pop		edi
    60 00000B86 5E                  <1> 		pop		esi
    61 00000B87 5B                  <1> 		pop		ebx
    62                              <1> 
    63                              <1> 		;---------------------------------------
    64                              <1> 		; 【スタックフレームの破棄】
    65                              <1> 		;---------------------------------------
    66 00000B88 89EC                <1> 		mov		esp, ebp
    67 00000B8A 5D                  <1> 		pop		ebp
    68                              <1> 
    69 00000B8B C3                  <1> 		ret
    70                              <1> 
    71                              <1> ;************************************************************************
    72                              <1> ;	リングバッファにデータを格納
    73                              <1> ;========================================================================
    74                              <1> ;■書式		: DWORD ring_wr(buff, data);
    75                              <1> ;
    76                              <1> ;■引数
    77                              <1> ;	buff	: リングバッファ
    78                              <1> ;	data	: 書き込むデータ
    79                              <1> ;
    80                              <1> ;■戻り値	: 成功(0以外)、失敗(0)
    81                              <1> ;************************************************************************
    82                              <1> ring_wr:
    82          ******************  <1>  error: label `ring_wr' changed during code generation [-w+error=label-redef-late]
    83                              <1> 		;---------------------------------------
    84                              <1> 		; 【スタックフレームの構築】
    85                              <1> 		;---------------------------------------
    86                              <1> 												; ------|--------
    87                              <1> 												;    +12| リングデータ
    88                              <1> 												;    + 8| データ
    89                              <1> 												; ------|--------
    90                              <1> 												;    + 4| EIP（戻り番地）
    91 00000B8C 55                  <1> 		push	ebp								; EBP+ 0| EBP（元の値）
    92 00000B8D 89E5                <1> 		mov		ebp, esp						; ------+--------
    93                              <1> 
    94                              <1> 		;---------------------------------------
    95                              <1> 		; 【レジスタの保存】
    96                              <1> 		;---------------------------------------
    97 00000B8F 53                  <1> 		push	ebx
    98 00000B90 51                  <1> 		push	ecx
    99 00000B91 56                  <1> 		push	esi
   100                              <1> 
   101                              <1> 		;---------------------------------------
   102                              <1> 		; 引数を取得
   103                              <1> 		;---------------------------------------
   104 00000B92 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = リングバッファ;
   105                              <1> 
   106                              <1> 		;---------------------------------------
   107                              <1> 		; 書き込み位置を確認
   108                              <1> 		;---------------------------------------
   109 00000B95 B800000000          <1> 		mov		eax, 0							; EAX  = 0;         // 失敗
   110 00000B9A 8B5E04              <1> 		mov		ebx, [esi + ring_buff.wp]		; EBX  = wp;        // 書き込み位置
   111 00000B9D 89D9                <1> 		mov		ecx, ebx						; ECX  = EBX;
   112 00000B9F 41                  <1> 		inc		ecx								; ECX++;            // 次の書き込み位置
   113 00000BA0 83E10F              <1> 		and		ecx, RING_INDEX_MASK			; ECX &= 0x0F       // サイズの制限
   114                              <1> 												; 
   115 00000BA3 3B0E                <1> 		cmp		ecx, [esi + ring_buff.rp]		; if (ECX != rp)    // 読み込み位置と異なる
   116 00000BA5 741F                <1> 		je		.10E							; {
   117                              <1> 												; 
   118 00000BA7 8A450C              <1> 		mov		al, [ebp +12]					;   AL = データ;
   119                              <1> 												; 
   120 00000BAA 88441E08            <1> 		mov		[esi + ring_buff.item + ebx], al ;   BUFF[wp] = AL; // キーコードを保存
   121 00000BAE 894E04              <1> 		mov		[esi + ring_buff.wp], ecx		;   wp = ECX;       // 書き込み位置を保存
   122 00000BB1 B801000000          <1> 		mov		eax, 1							;   EAX = 1;        // 成功
   123                              <1> .10E:											; }
   123          ******************  <1>  error: label `ring_wr.10E' changed during code generation [-w+error=label-redef-late]
   124                              <1> 
   125                              <1> 		;---------------------------------------
   126                              <1> 		; 【レジスタの復帰】
   127                              <1> 		;---------------------------------------
   128 00000BB6 5E                  <1> 		pop		esi
   129 00000BB7 59                  <1> 		pop		ecx
   130 00000BB8 5B                  <1> 		pop		ebx
   131                              <1> 
   132                              <1> 		;---------------------------------------
   133                              <1> 		; 【スタックフレームの破棄】
   134                              <1> 		;---------------------------------------
   135 00000BB9 89EC                <1> 		mov		esp, ebp
   136 00000BBB 5D                  <1> 		pop		ebp
   137                              <1> 
   138 00000BBC C3                  <1> 		ret
   139                              <1> 
   140                              <1> ;************************************************************************
   141                              <1> ;	リングバッファ内要素の表示
   142                              <1> ;========================================================================
   143                              <1> ;■書式		: void ring_show(col, row, buff);
   144                              <1> ;
   145                              <1> ;■引数
   146                              <1> ;	col		: 列
   147                              <1> ;	row		: 行
   148                              <1> ;	buff	: リングバッファ
   149                              <1> ;
   150                              <1> ;■戻り値	: 無し
   151                              <1> ;************************************************************************
   152                              <1> draw_key:
   152          ******************  <1>  error: label `draw_key' changed during code generation [-w+error=label-redef-late]
   153                              <1> 		;---------------------------------------
   154                              <1> 		; 【スタックフレームの構築】
   155                              <1> 		;---------------------------------------
   156                              <1> 												; ------|--------
   157                              <1> 												; EBP+16| リングバッファ
   158                              <1> 												; EBP+12| Y（行）
   159                              <1> 												; EBP+ 8| X（列）
   160                              <1> 												; ------|--------
   161 00000BBD 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
   162 00000BBE 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
   163                              <1> 												; ------|--------
   164                              <1> 
   165                              <1> 		;---------------------------------------
   166                              <1> 		; 【レジスタの保存】
   167                              <1> 		;---------------------------------------
   168 00000BC0 60                  <1> 		pusha
   169                              <1> 
   170                              <1> 		;---------------------------------------
   171                              <1> 		; 引数を取得
   172                              <1> 		;---------------------------------------
   173 00000BC1 8B5508              <1> 		mov		edx, [ebp + 8]					; EDX = X（列）;
   174 00000BC4 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = Y（行）;
   175 00000BC7 8B7510              <1> 		mov		esi, [ebp +16]					; ESI = リングバッファ;
   176                              <1> 
   177                              <1> 		;---------------------------------------
   178                              <1> 		; リングバッファの情報を取得
   179                              <1> 		;---------------------------------------
   180 00000BCA 8B1E                <1> 		mov		ebx, [esi + ring_buff.rp]		; EBX = rp;             // 読み込み位置
   181 00000BCC 8D7608              <1> 		lea		esi, [esi + ring_buff.item]		; ESI = &KEY_BUFF[EBX];
   182 00000BCF B910000000          <1> 		mov		ecx, RING_ITEM_SIZE				; ECX = RING_ITEM_SIZE; // 要素数
   183                              <1> 
   184                              <1> 		;---------------------------------------
   185                              <1> 		; 文字に変換しながら表示
   186                              <1> 		;---------------------------------------
   187                              <1> .10L:											; do
   187          ******************  <1>  error: label `draw_key.10L' changed during code generation [-w+error=label-redef-late]
   188                              <1> 												; {
   189 00000BD4 4B                  <1> 		dec		ebx								;   EBX--; // 読み込み位置
   190 00000BD5 83E30F              <1> 		and		ebx, RING_INDEX_MASK			;   EBX &= RING_INDEX_MASK;
   191 00000BD8 8A041E              <1> 		mov		al, [esi + ebx]					;   EAX  = KEY_BUFF[EBX];
   192                              <1> 												;   
   193 00000BDB 6A046A106A0268-     <1> 		cdecl	itoa, eax, .tmp, 2, 16, 0b0100	;   // キーコードを文字列に変換
   193 00000BE2 [1C0C0000]50E8DBFB- <1>
   193 00000BEA FFFF6683C414        <1>
   194 00000BF0 68[1C0C0000]6A0257- <1> 		cdecl	draw_str, edx, edi, 0x02, .tmp	;   // 変換した文字列を表示
   194 00000BF8 52E82BF9FFFF6683C4- <1>
   194 00000C01 10                  <1>
   195                              <1> 												;   
   196 00000C02 83C203              <1> 		add		edx, 3							;   // 表示位置を更新（3文字分）
   197                              <1> 												;   
   198 00000C05 E2CD                <1> 		loop	.10L							;   
   199                              <1> .10E:											; } while (ECX--);
   199          ******************  <1>  error: label `draw_key.10E' changed during code generation [-w+error=label-redef-late]
   200                              <1> 
   201                              <1> 		;---------------------------------------
   202                              <1> 		; 【レジスタの復帰】
   203                              <1> 		;---------------------------------------
   204 00000C07 61                  <1> 		popa
   205                              <1> 
   206                              <1> 		;---------------------------------------
   207                              <1> 		; 【スタックフレームの破棄】
   208                              <1> 		;---------------------------------------
   209 00000C08 89EC                <1> 		mov		esp, ebp
   210 00000C0A 5D                  <1> 		pop		ebp
   211                              <1> 
   212 00000C0B C3                  <1> 		ret
   213                              <1> 
   214 00000C0C 2D2D2000            <1> .tmp	db "-- ", 0
   214          ******************  <1>  error: label `draw_key.tmp' changed during code generation [-w+error=label-redef-late]
   215                              <1> 
   156                                  %include	"../modules/protect/timer.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	タイマーの設定
     3                              <1> ;------------------------------------------------------------------------
     4                              <1> ;	タイマー（カウンタ0）割り込み許可
     5                              <1> ;========================================================================
     6                              <1> ;■書式		: void int_en_timer0(void);
     7                              <1> ;
     8                              <1> ;■引数		: 無し
     9                              <1> ;
    10                              <1> ;■戻り値	: 無し
    11                              <1> ;************************************************************************
    12                              <1> int_en_timer0:
    12          ******************  <1>  error: label `int_en_timer0' changed during code generation [-w+error=label-redef-late]
    13                              <1> 		;---------------------------------------
    14                              <1> 		; 【レジスタの保存】
    15                              <1> 		;---------------------------------------
    16 00000C10 50                  <1> 		push	eax
    17                              <1> 
    18                              <1> 		;---------------------------------------
    19                              <1> 		;	8254 Timer
    20                              <1> 		;	0x2e9c(11932)=10[ms] @ CLK=1,193,182[Hz]
    21                              <1> 		;---------------------------------------
    22                              <1> 		 outp	 0x43, 0b_00_11_010_0			; // カウンタ0, 下位/上位で書き込み, モード2, バイナリ
    22 00000C11 B034                <2>  mov al, %2
    22 00000C13 E643                <2>  out %1, al
    23                              <1> 		 outp	 0x40, 0x9C						; // 下位バイト
    23 00000C15 B09C                <2>  mov al, %2
    23 00000C17 E640                <2>  out %1, al
    24                              <1> 		 outp	 0x40, 0x2E						; // 上位バイト
    24 00000C19 B02E                <2>  mov al, %2
    24 00000C1B E640                <2>  out %1, al
    25                              <1> 
    26                              <1> 		;---------------------------------------
    27                              <1> 		; 【レジスタの復帰】
    28                              <1> 		;---------------------------------------
    29 00000C1D 58                  <1> 		pop		eax
    30                              <1> 
    31 00000C1E C3                  <1> 		ret
    32                              <1> 
   157                                  %include	"../modules/protect/draw_rotation_bar.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	画面左下に、回転する棒を表示
     3                              <1> ;========================================================================
     4                              <1> ;■書式		: void draw_rotation_bar(void);
     5                              <1> ;
     6                              <1> ;■引数		: 無し
     7                              <1> ;
     8                              <1> ;■戻り値	: 無し
     9                              <1> ;************************************************************************
    10                              <1> draw_rotation_bar:
    10          ******************  <1>  error: label `draw_rotation_bar' changed during code generation [-w+error=label-redef-late]
    11                              <1> 		;---------------------------------------
    12                              <1> 		; 【レジスタの保存】
    13                              <1> 		;---------------------------------------
    14 00000C1F 50                  <1> 		push	eax
    15                              <1> 
    16                              <1> 		;---------------------------------------
    17                              <1> 		; タイマー割り込みカウンタを確認
    18                              <1> 		;---------------------------------------
    19 00000C20 A1[34030000]        <1> 		mov		eax, [TIMER_COUNT]				; EAX  = タイマー割り込みカウンタ
    20 00000C25 C1E804              <1> 		shr		eax, 4							; EAX /= 4;    // 16で除算
    21 00000C28 3B05[600C0000]      <1> 		cmp		eax, [.index]					; if (EAX != 前回値)
    22 00000C2E 742E                <1> 		je		.10E							; {
    23                              <1> 												;   
    24 00000C30 A3[600C0000]        <1> 		mov		[.index], eax					;   前回値 = EAX;
    25 00000C35 83E003              <1> 		and		eax, 0x03						;   EAX &= 0x03; // 0～3に限定
    26                              <1> 												;   
    27 00000C38 8A80[640C0000]      <1> 		mov		al, [.table + eax]				;   AL = table[index];
    28 00000C3E 506A0F6A1D6A00E8D6- <1> 		cdecl	draw_char, 0, 29, 0x000F, eax	;   draw_char(); // 文字を表示
    28 00000C47 F7FFFF6683C410      <1>
    29                              <1> 												;   
    30                              <1> .10E:											; }
    30          ******************  <1>  error: label `draw_rotation_bar.10E' changed during code generation [-w+error=label-redef-late]
    31                              <1> 
    32                              <1> 		;---------------------------------------
    33                              <1> 		; 【レジスタの復帰】
    34                              <1> 		;---------------------------------------
    35 00000C4E 58                  <1> 		pop		eax
    36                              <1> 
    37 00000C4F C3                  <1> 		ret
    38                              <1> 
    39                              <1> ALIGN 4, db 0
    40 00000C50 00000000            <1> .index:		dd 0								; 前回値
    40          ******************  <1>  error: label `draw_rotation_bar.index' changed during code generation [-w+error=label-redef-late]
    41 00000C54 7C2F2D5C            <1> .table:		db	"|/-\"							; 表示キャラクタ
    41          ******************  <1>  error: label `draw_rotation_bar.table' changed during code generation [-w+error=label-redef-late]
   158                                  
   159                                  ;************************************************************************
   160                                  ;	パディング
   161                                  ;************************************************************************
   162 00000C58 00<rept>                		times KERNEL_SIZE - ($ - $$) db 0x00	; パディング
   163                                  
